1
00:00:27,280 --> 00:00:30,422
How's it going? Tim Spann here, principal developer

2
00:00:30,478 --> 00:00:34,182
advocate covering some interesting topics in generative

3
00:00:34,238 --> 00:00:37,594
AI, real time streaming vector databases,

4
00:00:38,014 --> 00:00:41,302
unstructured data, lots of cool stuff.

5
00:00:41,398 --> 00:00:45,846
My talk is enriching generative AI as events

6
00:00:45,910 --> 00:00:49,254
in real time streaming pipelines because I couldn't fit

7
00:00:49,294 --> 00:00:52,566
any more words in the title and I haven't thought of

8
00:00:52,590 --> 00:00:56,276
something cool, catchy way to put all that into something a little

9
00:00:56,340 --> 00:00:59,788
simpler. So we'll give that a try

10
00:00:59,836 --> 00:01:02,664
through the talk to make this as straightforward as possible.

11
00:01:03,364 --> 00:01:06,756
If you're trying to contact me, want to know more about

12
00:01:06,940 --> 00:01:09,844
this interesting things we're doing with generative AI,

13
00:01:10,004 --> 00:01:13,932
reach out to me GitHub medium dzone lots

14
00:01:13,948 --> 00:01:17,304
of places you'll find me if you look.

15
00:01:17,604 --> 00:01:22,162
I do a weekly newsletter covering ton of different projects,

16
00:01:22,338 --> 00:01:26,210
open source for data, unstructured data, vectors,

17
00:01:26,322 --> 00:01:29,570
streaming real time IoT, Python,

18
00:01:29,642 --> 00:01:33,094
Java, JavaScript, lots of cool stuff.

19
00:01:33,474 --> 00:01:37,134
Check it out. You don't have to subscribe, you could just check

20
00:01:37,754 --> 00:01:41,490
episodes as they show up in the GitHub.

21
00:01:41,682 --> 00:01:45,814
And we'll be adding more multimedia and multimodal contact

22
00:01:46,524 --> 00:01:50,132
real soon. So check that out. So let's get into

23
00:01:50,188 --> 00:01:53,980
it. We're going to build some streaming pipelines. Hopefully everything's

24
00:01:54,012 --> 00:01:57,956
going to be going fast. As you might imagine, if you haven't been

25
00:01:57,980 --> 00:02:01,796
around the last couple of years, there's a lot of different types of data.

26
00:02:01,940 --> 00:02:05,700
Like a lot like you wouldn't expect it, I mean,

27
00:02:05,732 --> 00:02:09,460
because you have the data we've been used to for a while, which is

28
00:02:09,492 --> 00:02:13,060
huge enough. I mean, the structured data coming out of databases

29
00:02:13,172 --> 00:02:17,082
and other things is big. But then when you start adding things like

30
00:02:17,138 --> 00:02:20,562
text and images, video logs, all kinds

31
00:02:20,578 --> 00:02:23,134
of really cool advanced 3d models,

32
00:02:24,074 --> 00:02:27,154
chemical structures logs,

33
00:02:27,314 --> 00:02:30,370
emails, social media data,

34
00:02:30,562 --> 00:02:34,474
all of a sudden there's a lot of data and that's just growing.

35
00:02:34,594 --> 00:02:37,774
And now with the explosion of things like chat, GBT,

36
00:02:38,154 --> 00:02:41,398
now there's some serious use cases for this data,

37
00:02:41,546 --> 00:02:44,710
and now it can all come together. I can search,

38
00:02:44,902 --> 00:02:49,126
you know, my text data using an image and

39
00:02:49,310 --> 00:02:52,374
search my videos and all this together, the structured,

40
00:02:52,454 --> 00:02:56,694
unstructured and, you know, make sense of all the data

41
00:02:56,854 --> 00:03:00,870
this is, there's going to be some really cool stuff coming out right

42
00:03:00,902 --> 00:03:04,518
now. There's, there's stuff everywhere, you know,

43
00:03:04,566 --> 00:03:07,902
and it's not easy to manage, especially when, you know,

44
00:03:07,918 --> 00:03:12,554
you may have some cats distracting you. Whether it's local,

45
00:03:12,934 --> 00:03:16,966
in containers or Docker, you're running Amazon,

46
00:03:17,030 --> 00:03:20,966
you're trying to do video analytics, you're not

47
00:03:20,990 --> 00:03:24,670
sure which cloud you're running on. Got to feed stuff to slack. Grab stuff

48
00:03:24,702 --> 00:03:29,190
from slack. There's a lot going on. Fortunately there's

49
00:03:29,342 --> 00:03:32,882
some tools out there in the open source to make this a little easier.

50
00:03:33,078 --> 00:03:37,094
Fortunately you don't have to choose between easy and open source anymore.

51
00:03:37,394 --> 00:03:41,426
The power of some open source projects out there is making

52
00:03:41,490 --> 00:03:45,090
this a lot easier. So you don't

53
00:03:45,122 --> 00:03:48,714
have to worry about it. And not just open source, but open source

54
00:03:48,754 --> 00:03:52,042
with a powerful community where a lot of people

55
00:03:52,098 --> 00:03:55,466
working together, a lot of people using the same code, which is

56
00:03:55,490 --> 00:03:59,530
great and big. Shout out to the Linux foundation for AI

57
00:03:59,562 --> 00:04:02,800
and data. That's really making this possible,

58
00:04:02,912 --> 00:04:06,312
especially within the hybrid cloud environments

59
00:04:06,328 --> 00:04:10,032
that we're seeing with all the different Kubernetes installs and

60
00:04:10,168 --> 00:04:13,856
big environments. I mean you could have start off with a couple of nodes and

61
00:04:13,880 --> 00:04:17,504
before you know it you've got, you know, billions of vectors out

62
00:04:17,544 --> 00:04:21,096
there, tons of data. But what's nice, it's easy

63
00:04:21,120 --> 00:04:24,408
to get started. I could just work in a notebook, I'll show you that

64
00:04:24,576 --> 00:04:27,820
reuse code, use it fast,

65
00:04:27,972 --> 00:04:31,452
integrate with all the cool tools you want to use out there where it's

66
00:04:31,468 --> 00:04:34,692
something like OpenAI, lang chain, llama index,

67
00:04:34,748 --> 00:04:38,588
ton of cool stuff out there and you could do some

68
00:04:38,636 --> 00:04:42,132
really advanced stuff out there. Everyone starts off with maybe a little rag,

69
00:04:42,228 --> 00:04:46,108
maybe just some text in there, just a really good use case, maybe just

70
00:04:46,156 --> 00:04:49,444
all the documents that you need to search. I do that for me. All my

71
00:04:49,484 --> 00:04:53,024
articles and different contents, you could find my

72
00:04:53,064 --> 00:04:56,640
stuff really fast, ask it questions, maybe get

73
00:04:56,672 --> 00:05:00,044
better answers than I give you. Depends what data is.

74
00:05:01,424 --> 00:05:05,344
Lots of other things like we're not going to go into things. The difference

75
00:05:05,384 --> 00:05:08,984
between really dense and sparse

76
00:05:09,024 --> 00:05:12,088
embeddings, filtering, there's so many features

77
00:05:12,136 --> 00:05:15,164
coming, whether you're going to just run on your laptop,

78
00:05:15,944 --> 00:05:19,392
run in the big cloud somewhere, use all

79
00:05:19,408 --> 00:05:22,444
the big name tools, you just use a couple open source,

80
00:05:23,224 --> 00:05:26,444
it's all out there, cool stuff going on

81
00:05:26,864 --> 00:05:30,648
and a ton of different use cases supported. Again, we won't go into

82
00:05:30,696 --> 00:05:33,564
that, but just wanted to mention this quick off,

83
00:05:33,904 --> 00:05:37,764
there are a ton of different index types. If you use some of the

84
00:05:38,944 --> 00:05:42,288
entry level vector systems, you'll be like, oh, we got an index.

85
00:05:42,336 --> 00:05:45,728
And one index is great until you start looking at different

86
00:05:45,776 --> 00:05:49,042
types of data, different use cases, how you're going to use that data,

87
00:05:49,098 --> 00:05:52,402
how you're going to search it, there's a lot of things to think of when

88
00:05:52,418 --> 00:05:55,826
you start going into production and you start adding a ton of different

89
00:05:55,930 --> 00:05:59,642
data sources coming from the world of traditional big

90
00:05:59,698 --> 00:06:03,810
data. You know, it took us a long time to

91
00:06:03,842 --> 00:06:07,122
be able to figure out how am I going to access the data,

92
00:06:07,258 --> 00:06:10,546
what type of data it is, what are the best ways to index,

93
00:06:10,610 --> 00:06:13,694
search and find data wherever it is?

94
00:06:14,214 --> 00:06:17,434
And that's certainly evolving in the unstructured

95
00:06:17,774 --> 00:06:21,774
realm as well. But being able to support all the

96
00:06:21,814 --> 00:06:25,870
different types of searches you might want to do, not just the top k ones,

97
00:06:26,022 --> 00:06:29,502
not just grouping or filtering. Lots of

98
00:06:29,518 --> 00:06:33,222
different things you could do and combine them, being able to have multi

99
00:06:33,278 --> 00:06:36,354
tenancy, do all these collections and partitions,

100
00:06:36,654 --> 00:06:39,996
really important once you start moving into production,

101
00:06:40,150 --> 00:06:43,680
whether that's productions on premise, any of the clouds,

102
00:06:43,712 --> 00:06:47,664
wherever you need to run, you're going to need that. Some data

103
00:06:47,704 --> 00:06:50,840
just can't live with others. Maybe for performance,

104
00:06:50,952 --> 00:06:54,752
maybe for legal reasons, maybe they just shouldn't

105
00:06:54,808 --> 00:06:58,592
cross the barrier. There lots of different compute

106
00:06:58,648 --> 00:07:02,984
types, and we'll see these expand as more types of GPU's,

107
00:07:03,064 --> 00:07:06,548
more types of advanced compute come out there.

108
00:07:06,656 --> 00:07:09,756
There's already a ton, and fortunately the

109
00:07:09,780 --> 00:07:13,264
open source tools there are taking advantage of that, which is important.

110
00:07:13,804 --> 00:07:17,500
Now, if you remember some of the architectures I've

111
00:07:17,532 --> 00:07:21,304
walked through in the past, it's going to look familiar.

112
00:07:21,964 --> 00:07:25,860
The way Milvis works is really similar to some other advanced

113
00:07:25,932 --> 00:07:29,492
systems out there, because there's really not that many ways to write

114
00:07:29,548 --> 00:07:33,278
these that it's going to work. And scale out for all the different

115
00:07:33,326 --> 00:07:36,886
layers because you got to scale out compute separate from storage. If you

116
00:07:36,910 --> 00:07:39,974
were around when we did some of the pulsar talks, it's going to sound

117
00:07:40,014 --> 00:07:43,526
pretty familiar. Got workers that are handling querying

118
00:07:43,630 --> 00:07:46,998
data, indexing your data. What's nice, storing things

119
00:07:47,046 --> 00:07:50,342
out to an object store. Even if you're in a small use case,

120
00:07:50,398 --> 00:07:53,274
you could use minio. That works pretty awesome.

121
00:07:53,614 --> 00:07:56,846
Give people access to your data. We got etCd in there.

122
00:07:56,870 --> 00:08:00,750
Again, part of cloud native system makes

123
00:08:00,782 --> 00:08:04,328
sense to use that for your metadata, so you could scale out really

124
00:08:04,376 --> 00:08:08,016
easily. We're using Kafka Pulsar to distribute

125
00:08:08,080 --> 00:08:11,392
messages between all these different systems. Makes a

126
00:08:11,408 --> 00:08:15,032
lot of sense. It's the type of apps we've been building anyway,

127
00:08:15,128 --> 00:08:18,560
so it makes sense that an advanced system would

128
00:08:18,592 --> 00:08:22,576
use that. We'll go through some of these use cases really fast, but there's

129
00:08:22,680 --> 00:08:25,184
a couple of them you don't think of right away.

130
00:08:25,344 --> 00:08:28,880
Certainly the augmented retrieval. I mean, we all have to do

131
00:08:28,912 --> 00:08:33,000
that now with text chat and blogs and stuff,

132
00:08:33,152 --> 00:08:36,600
but things like molecular similarity search. I was

133
00:08:36,632 --> 00:08:40,600
talking to a guy a couple days ago and he was super excited

134
00:08:40,672 --> 00:08:44,280
about this because they're trying to find some uses for

135
00:08:44,312 --> 00:08:47,536
some of the materials they have. And that stuff works

136
00:08:47,560 --> 00:08:51,144
out really well. That's really hard to do in most systems there,

137
00:08:51,304 --> 00:08:55,004
but we'll dive into that in the future. Future talks.

138
00:08:55,644 --> 00:08:59,172
Just a couple quick ones. Show you some cats scalability,

139
00:08:59,308 --> 00:09:02,676
different types of indexing support for all the major

140
00:09:02,740 --> 00:09:06,304
languages for clients. You know, it's all out there.

141
00:09:07,004 --> 00:09:11,212
One thing that we've been doing is real time data pipelines,

142
00:09:11,388 --> 00:09:14,700
because we've seen that certainly some data

143
00:09:14,732 --> 00:09:17,132
is going to be loaded batch like it was before,

144
00:09:17,308 --> 00:09:21,252
especially getting all your existing content and

145
00:09:21,308 --> 00:09:25,540
documents and websites. Get them that first time loaded.

146
00:09:25,692 --> 00:09:29,612
That's going to be a batch, should be, a batch should be done pretty carefully.

147
00:09:29,708 --> 00:09:32,964
Make sure you get everything, double check it.

148
00:09:33,084 --> 00:09:36,500
Certainly that can be done with the same tools, but you know, you got to

149
00:09:36,532 --> 00:09:40,124
watch that, that first round. But after that new document

150
00:09:40,164 --> 00:09:43,964
comes in, something comes out of medium, something comes off a slack channel.

151
00:09:44,044 --> 00:09:47,132
I need to do that right away. I want to be able to get this

152
00:09:47,188 --> 00:09:50,290
data, whether it's to get it into

153
00:09:50,362 --> 00:09:54,306
a vector store like Milvis, so I can have that available to

154
00:09:54,330 --> 00:09:57,258
build up a prompt, or I'm enriching it,

155
00:09:57,306 --> 00:10:01,574
transforming it, or that's how I'm getting in a request

156
00:10:01,914 --> 00:10:05,934
to look at the data. I mean, we also have to integrate with whoever

157
00:10:06,274 --> 00:10:09,418
needs to ask questions of the AI

158
00:10:09,586 --> 00:10:13,570
or even just do a search of those vectors very

159
00:10:13,642 --> 00:10:17,776
often. That's my final answer in there. I don't have to go any deeper.

160
00:10:17,970 --> 00:10:21,188
I want something like, well, how do I, you know,

161
00:10:21,236 --> 00:10:24,860
build this? How do I build my first novice app?

162
00:10:24,932 --> 00:10:28,588
Well, I don't need artificial intelligence to do that.

163
00:10:28,716 --> 00:10:32,004
There are a number of great articles that will come up right away,

164
00:10:32,084 --> 00:10:35,092
so you don't have to do that. But yeah, like I said, building up the

165
00:10:35,108 --> 00:10:38,620
prompts, getting the proper context. So when we do

166
00:10:38,652 --> 00:10:41,988
need to write a question, we write it correctly, but also then

167
00:10:42,036 --> 00:10:45,740
connecting with things like GPT cache, because sometimes that question's

168
00:10:45,772 --> 00:10:49,068
been answered already. Why spend the money or the

169
00:10:49,116 --> 00:10:53,196
time calling out to something like Jet GBT

170
00:10:53,380 --> 00:10:57,580
or even one of the free models if I don't have to? Let's save energy,

171
00:10:57,732 --> 00:11:01,704
let's save money, time, network bandwidth,

172
00:11:02,284 --> 00:11:05,584
don't call out if you don't need to. It's already been done.

173
00:11:06,684 --> 00:11:10,044
Let's make it smart. Let's work with whatever we need to

174
00:11:10,084 --> 00:11:13,468
work with quickly, and we can work with unstructured

175
00:11:13,516 --> 00:11:17,188
data, with things like Nifi or with Tauee.

176
00:11:17,236 --> 00:11:20,356
There's a ton of different things out there to do it.

177
00:11:20,500 --> 00:11:24,132
But the days of just looking at CSVs

178
00:11:24,188 --> 00:11:27,828
and JSON Protobuf parquet,

179
00:11:27,916 --> 00:11:30,860
Avro, that sort of data is over.

180
00:11:31,012 --> 00:11:34,412
You're gonna be looking at zip files, you'll be looking at every type

181
00:11:34,428 --> 00:11:38,148
of image, every type of document. You know, some of them human

182
00:11:38,196 --> 00:11:42,138
readable, some of them not, some of them binary. You'd be looking at videos,

183
00:11:42,266 --> 00:11:45,794
maybe live streams, sound. I mean being able

184
00:11:45,834 --> 00:11:49,282
to query your database with audio

185
00:11:49,338 --> 00:11:52,938
is pretty awesome. Being able to have those advanced

186
00:11:53,026 --> 00:11:56,322
uis that you only thought of as, you know, maybe something Apple can do

187
00:11:56,338 --> 00:12:00,290
with a phone. But now I can have that in my basic applications

188
00:12:00,482 --> 00:12:03,882
where I just talk to you and you give me the results, I send in

189
00:12:03,898 --> 00:12:07,926
an image, you give me back a document. There's so many, so many

190
00:12:07,990 --> 00:12:11,326
options now. We even just touched on them. It's pretty awesome. But we

191
00:12:11,350 --> 00:12:14,974
need to be able to work with all these different unstructured

192
00:12:15,014 --> 00:12:18,406
data types and there's going to be more, I mean there's probably going to be

193
00:12:18,430 --> 00:12:21,902
some new optimized ones. I'm sure Genai is going to create

194
00:12:21,958 --> 00:12:25,774
some awesome new format that combines multimedia

195
00:12:25,814 --> 00:12:30,154
in a very rich, easy to search and

196
00:12:31,174 --> 00:12:33,994
compressed formats. Waiting for that.

197
00:12:34,914 --> 00:12:39,210
If you haven't seen Nifi 20, we just got the m three release and

198
00:12:39,282 --> 00:12:42,682
this is adding some serious features that make it a very nice open

199
00:12:42,738 --> 00:12:46,706
source tool to be able to do this open source streaming part

200
00:12:46,730 --> 00:12:50,514
of the house where I'm getting data regardless of if it's structured,

201
00:12:50,594 --> 00:12:53,810
unstructured, semi structured, and get it to who

202
00:12:53,842 --> 00:12:56,930
needs it at any speed as quickly as possible.

203
00:12:57,122 --> 00:13:00,354
Often Kafka pulsar in there, drop that

204
00:13:00,394 --> 00:13:04,454
off to my vector store and we're off and running. What's nice

205
00:13:04,834 --> 00:13:08,458
is being able to leverage python and additional

206
00:13:08,506 --> 00:13:11,786
places if I now makes Python a first

207
00:13:11,850 --> 00:13:16,050
class citizen. So you can write full libraries in Python

208
00:13:16,122 --> 00:13:19,538
and make them available for your entire nifi cluster,

209
00:13:19,706 --> 00:13:23,474
which is awesome. So as long as you have Python

210
00:13:23,514 --> 00:13:27,654
310 greater, I mean if you're not running Python 310 or newer,

211
00:13:28,254 --> 00:13:31,022
you should look at your infrastructure because there's, you know,

212
00:13:31,078 --> 00:13:34,526
security issues out there. Upgrade to the latest

213
00:13:34,710 --> 00:13:39,110
or near latest. I mean trying to get all these libraries working sometimes

214
00:13:39,142 --> 00:13:42,950
is fun, but fortunately with kubernetes

215
00:13:43,022 --> 00:13:45,714
and with other Python options,

216
00:13:46,254 --> 00:13:50,334
control some of that. But I wrote one for taking

217
00:13:50,374 --> 00:13:53,242
an address and turn it into latitude and longitude.

218
00:13:53,398 --> 00:13:57,050
Find I needed this because I wanted to do something

219
00:13:57,122 --> 00:14:00,706
like have someone ask me a question. And before I sent it to

220
00:14:00,730 --> 00:14:04,014
Genai I wanted to see is this something

221
00:14:04,554 --> 00:14:08,434
geo important? Again, those crossing of the data types.

222
00:14:08,594 --> 00:14:11,614
Geo data is structured data,

223
00:14:12,114 --> 00:14:15,922
but I mean it's real world and it has implications

224
00:14:15,978 --> 00:14:19,058
with a lot of things. So we need to get this part right. So I

225
00:14:19,066 --> 00:14:22,734
have a library that uses pretty awesome libraries out there,

226
00:14:22,854 --> 00:14:26,550
especially one from openstreetmaps that does

227
00:14:26,582 --> 00:14:30,554
a pretty good job in getting you to the right place.

228
00:14:31,174 --> 00:14:34,766
So that's pretty good. I'm going to show you a couple of different

229
00:14:34,830 --> 00:14:38,438
demos. I don't want to show you too many slides, you'll get these slides

230
00:14:38,486 --> 00:14:41,234
going down. But what I have is my medium.

231
00:14:41,654 --> 00:14:44,846
I have Nifi read that in and it's going to

232
00:14:44,870 --> 00:14:47,998
read in. Write back to slack and we'll show you some other interactions we could

233
00:14:48,006 --> 00:14:51,610
do with slack. Write some stuff to Kafka and

234
00:14:51,642 --> 00:14:55,666
flink and do some analytics and write everything that needs to

235
00:14:55,690 --> 00:14:59,146
be in Milvis there. So I could do rag later. I could

236
00:14:59,170 --> 00:15:02,938
do a lot of things, especially when people ask me questions about my

237
00:15:02,986 --> 00:15:06,954
articles. Hey, let's have a

238
00:15:07,074 --> 00:15:11,034
prompt enhanced Genai do that for

239
00:15:11,074 --> 00:15:14,594
me and then I'll show you a quick little one for images using

240
00:15:14,634 --> 00:15:18,754
the Tobii library, which is pretty

241
00:15:18,794 --> 00:15:22,362
simple. I mean, the more you look into python, the more you're

242
00:15:22,378 --> 00:15:25,898
like, where were you these when I was doing all that Java?

243
00:15:25,986 --> 00:15:29,338
I mean, I still like Java, but some of these python

244
00:15:29,386 --> 00:15:32,914
libraries are amazing. So we're going to show you a little

245
00:15:32,954 --> 00:15:36,666
bit, just a quick one, on getting working

246
00:15:36,730 --> 00:15:40,334
with image data in a database. Like it's nothing. Pretty cool.

247
00:15:40,994 --> 00:15:44,334
We'll touch on rag today. You've seen that before.

248
00:15:44,734 --> 00:15:48,070
And I'll leave you some contact stuff so you can

249
00:15:48,102 --> 00:15:51,798
start doing some cool stuff once we get into some demos.

250
00:15:51,966 --> 00:15:55,438
Hopefully I haven't spent so much time that everything in the world

251
00:15:55,486 --> 00:15:58,870
timed out. You know, I didn't, I'm trying to run this as

252
00:15:58,902 --> 00:16:03,382
close to live. So you're there like I'm at the conference.

253
00:16:03,558 --> 00:16:07,634
Hopefully I see you at the next one. So I have a medium

254
00:16:08,454 --> 00:16:12,374
and I have some data there and very fortunately they'll give you an RSS feed

255
00:16:12,414 --> 00:16:16,322
of your latest couple of articles, which would be awesome if I

256
00:16:16,338 --> 00:16:19,866
didn't have so many articles. So I also download my old

257
00:16:19,930 --> 00:16:23,098
articles and have Nifi load them as well.

258
00:16:23,266 --> 00:16:26,466
But for most use cases, just the last couple articles,

259
00:16:26,570 --> 00:16:30,106
because once I have this running like everything, get that batch

260
00:16:30,170 --> 00:16:33,674
processed, however it takes, get that into your vector

261
00:16:33,714 --> 00:16:37,354
store and then, you know, from current data as

262
00:16:37,394 --> 00:16:40,962
it's changing, grab it. So we're just going to grab

263
00:16:41,018 --> 00:16:44,700
some data from there, which is surprisingly easy.

264
00:16:44,852 --> 00:16:48,812
Now we are in Nifi. This you could download

265
00:16:48,948 --> 00:16:52,356
run on your own, whether it's in Docker Kubernetes or just

266
00:16:52,420 --> 00:16:56,356
in on a JVM on your laptop. Pretty simple.

267
00:16:56,500 --> 00:17:00,132
So I have some code here that is just going

268
00:17:00,148 --> 00:17:03,944
to grab my feed from medium.

269
00:17:04,404 --> 00:17:07,700
Now we could also do this with Python. And I'm looking

270
00:17:07,732 --> 00:17:11,172
at rewriting this in Python and see what the difference is the amount of code.

271
00:17:11,268 --> 00:17:14,876
So you can see here it's atom format RSS,

272
00:17:15,060 --> 00:17:18,108
which is basically a type of XML. Again,

273
00:17:18,196 --> 00:17:21,316
another format that won't die. Every new format we get

274
00:17:21,340 --> 00:17:24,684
three old ones that never die as well. But here we grab

275
00:17:24,724 --> 00:17:28,052
some fields here. So we've got this data, we're going

276
00:17:28,068 --> 00:17:31,172
to grab it. I grabbed it

277
00:17:31,348 --> 00:17:35,664
here in Nifi and then I have something that converts

278
00:17:36,244 --> 00:17:39,912
that RSS data and send that

279
00:17:39,968 --> 00:17:43,256
into Jason, a little easier to work with. Then I

280
00:17:43,320 --> 00:17:47,192
split it on the channel items and we can look at the data

281
00:17:47,248 --> 00:17:50,004
provenance here and see that that happens.

282
00:17:50,464 --> 00:17:53,524
We got ten articles it gives you at a time.

283
00:17:53,904 --> 00:17:57,484
I grabbed some fields I like here, the most important ones,

284
00:17:57,984 --> 00:18:02,048
and then I'm just going to send that along here

285
00:18:02,096 --> 00:18:05,592
to build up a new JSON file. And if I look at this, I've got

286
00:18:05,648 --> 00:18:09,588
ten results here that I just ran and

287
00:18:09,636 --> 00:18:13,348
I could take a look at the data. I switch

288
00:18:13,396 --> 00:18:17,660
that over into a format to be parsed because

289
00:18:17,692 --> 00:18:20,860
it's HTML and then from there parse

290
00:18:20,892 --> 00:18:24,180
it out into small chunks. And I've got my small

291
00:18:24,252 --> 00:18:28,836
chunks here. Optimizing those chunks is always a fun exercise

292
00:18:28,900 --> 00:18:32,204
and there's definitely a lot of different ways to do

293
00:18:32,244 --> 00:18:36,024
that. I could see this is part of my article around irish

294
00:18:36,064 --> 00:18:39,456
transit system, which is pretty cool. Love Ireland,

295
00:18:39,560 --> 00:18:41,804
nice place to go to. Love castles.

296
00:18:42,384 --> 00:18:46,008
So what I have here is I'm going to send that

297
00:18:46,056 --> 00:18:50,024
record into Milvis. And what's nice with Milvis

298
00:18:50,104 --> 00:18:54,064
is there's an awesome open source product

299
00:18:54,144 --> 00:18:58,120
called Attu and this lets you query all your data,

300
00:18:58,232 --> 00:19:02,444
see what it's going on. I could see here that I've loaded some articles,

301
00:19:02,784 --> 00:19:06,112
I could see some other things I have here.

302
00:19:06,168 --> 00:19:10,088
There's also security and all that kind of stuff. But the main thing is

303
00:19:10,176 --> 00:19:13,584
we see we got another record come in and I'm

304
00:19:13,624 --> 00:19:17,040
extracting the text that came out. I'm just going to push that

305
00:19:17,072 --> 00:19:20,272
to Kafka so that I can distribute that.

306
00:19:20,408 --> 00:19:23,544
Also, if there's anyone who needs to know that I

307
00:19:23,584 --> 00:19:27,810
published a new article, I can have a Kafka consumer somewhere

308
00:19:27,882 --> 00:19:31,494
that could send out a slack, a discord,

309
00:19:31,874 --> 00:19:35,498
an email, a fax, I mean

310
00:19:35,626 --> 00:19:38,914
whatever weird thing you want to send. Also I'm sending out

311
00:19:38,954 --> 00:19:41,974
a slack, I'll probably send out a discord,

312
00:19:42,394 --> 00:19:45,762
maybe I'll send one to the Milvis discord. If it's

313
00:19:45,778 --> 00:19:48,962
an article about Milvis, I probably send that

314
00:19:48,978 --> 00:19:52,478
to Genai to tell me where should I publish this and use

315
00:19:52,526 --> 00:19:56,230
their choice. Let's see where they tell me to send

316
00:19:56,262 --> 00:19:59,734
my articles. Maybe they tell me to throw them away. Okay, we could

317
00:19:59,774 --> 00:20:03,874
see here that I got a new slack message.

318
00:20:04,494 --> 00:20:08,558
And this is the article, not well formatted,

319
00:20:08,606 --> 00:20:12,214
but, you know, was pulled out of RSS, but it is the

320
00:20:12,254 --> 00:20:15,694
content of the article posted into

321
00:20:15,854 --> 00:20:19,372
my slack channel for Milvis. And you can see it's got

322
00:20:19,428 --> 00:20:23,356
links and different stuff embedded in there from the article and

323
00:20:23,420 --> 00:20:26,980
some, you know, all the code in there, whatever was

324
00:20:27,012 --> 00:20:30,308
in that article, just as a way to distribute

325
00:20:30,356 --> 00:20:34,436
that. And again, we sent some of that content to Kafka,

326
00:20:34,580 --> 00:20:38,212
but that's pretty straightforward. And we'll just let all those

327
00:20:38,268 --> 00:20:41,932
run. I mean, it only does ten at a time, but if

328
00:20:41,948 --> 00:20:45,504
you take a look, I may have more than ten articles.

329
00:20:45,824 --> 00:20:47,844
So when I do the bulk one,

330
00:20:48,984 --> 00:20:52,456
I'll go back and do all of last year.

331
00:20:52,640 --> 00:20:56,032
You know, maybe just the most recent articles here.

332
00:20:56,168 --> 00:21:00,304
Probably don't need to see articles from multiple

333
00:21:00,384 --> 00:21:03,808
years ago, though. There's a couple of cool ones in there,

334
00:21:03,976 --> 00:21:07,724
like how to automate all the transit systems in the world.

335
00:21:08,504 --> 00:21:11,620
No code. That's kind of cool, I guess, if you're into

336
00:21:11,652 --> 00:21:15,788
that. Okay, so it's running here. I've got a couple more Milvis going,

337
00:21:15,956 --> 00:21:19,684
so we'll show you another part of this to this timeout. Now, the other

338
00:21:19,724 --> 00:21:23,204
thing I have running here is we've got a universal slack

339
00:21:23,284 --> 00:21:27,108
listener. And this is tied to my slack group here,

340
00:21:27,156 --> 00:21:30,428
which is open to all. And I've got the links out there if you want

341
00:21:30,436 --> 00:21:34,108
to join it, if you want to ask questions of my bots, if you

342
00:21:34,116 --> 00:21:37,260
want to ask questions of me, I'm. One of these is me. I don't know

343
00:21:37,292 --> 00:21:40,532
which one there's. I have like three me's on here. Some of them

344
00:21:40,548 --> 00:21:44,364
are bots, some of them are me. See if you can guess. Sometimes I forget

345
00:21:44,404 --> 00:21:48,224
which one's me. Whoever gives you the best answer, that's me.

346
00:21:48,964 --> 00:21:52,812
So we have one just came in and it's getting processed,

347
00:21:52,868 --> 00:21:56,356
coming through the system. Now, some of them I throw away because some

348
00:21:56,380 --> 00:22:00,244
of them are the results of bots like you saw here,

349
00:22:00,364 --> 00:22:04,448
or they're in the wrong channel, or it's just not relevant to anyone.

350
00:22:04,636 --> 00:22:07,816
It would be nice to know the current stock price. Now, this is not taking

351
00:22:07,880 --> 00:22:11,084
any. That is not what I should.

352
00:22:11,504 --> 00:22:15,776
That is not taking any AI I do send everything through

353
00:22:15,840 --> 00:22:19,848
a couple open source AI's thanks to hugging face, but sometimes it just

354
00:22:19,896 --> 00:22:23,664
doesn't make sense. Like what's what are they going to tell me about the current

355
00:22:23,704 --> 00:22:26,920
stock price now? There are plugins and things you could

356
00:22:26,952 --> 00:22:31,012
add to chat, GBT and other things and depend on your pipeline.

357
00:22:31,108 --> 00:22:34,956
You know you can get that data, but just sending that raw

358
00:22:35,020 --> 00:22:38,916
to check GBT doesn't

359
00:22:38,940 --> 00:22:42,396
make a lot of sense. One thing I figured out is if I'm going to

360
00:22:42,420 --> 00:22:45,900
let this be open to everyone, I should

361
00:22:46,052 --> 00:22:49,268
check things out, make sure that's only on one channel.

362
00:22:49,316 --> 00:22:52,540
I don't want to look at every channel. Especially I use a lot just

363
00:22:52,572 --> 00:22:56,264
for debugging. Make sure it's not one of my bots.

364
00:22:57,744 --> 00:23:01,280
I really try not to get one of my bots, but they

365
00:23:01,312 --> 00:23:04,840
do have a lot of users. And the other thing I figured out is to

366
00:23:04,872 --> 00:23:08,616
clean up my prompts. So I found a model

367
00:23:08,720 --> 00:23:12,344
on hugging face that works most of the time.

368
00:23:12,504 --> 00:23:15,192
I got to look and see if I can find a better model or maybe

369
00:23:15,248 --> 00:23:19,056
train it on my own stuff so it knows when sometimes

370
00:23:19,080 --> 00:23:22,484
it's not sure. Like the not safe ones.

371
00:23:22,914 --> 00:23:26,174
A lot of these not safe ones are safe.

372
00:23:26,674 --> 00:23:29,946
You know, it picked a word I didn't think it was. I thought maybe

373
00:23:29,970 --> 00:23:33,034
it was a curse or something was wrong with it, and usually

374
00:23:33,074 --> 00:23:37,186
there's nothing wrong with it, so I don't know. Or sometimes

375
00:23:37,210 --> 00:23:40,410
it takes text that's really bach text, and it goes, oh,

376
00:23:40,442 --> 00:23:44,466
what? Clearly this isn't a human. So sometimes it's actually

377
00:23:44,530 --> 00:23:47,494
that's helpful, but other times it's not.

378
00:23:48,374 --> 00:23:51,874
So we have that coming out. We got the prompt filtered,

379
00:23:52,694 --> 00:23:56,118
make sure it's asked the right question, and then I send

380
00:23:56,166 --> 00:23:59,670
it, which I think is kind of cool, is I send it

381
00:23:59,702 --> 00:24:03,406
to multiple models at once. If you saw my

382
00:24:03,430 --> 00:24:06,806
article, why not four models doing four models at

383
00:24:06,830 --> 00:24:10,598
once? I got mistral eight. Tiny llama.

384
00:24:10,686 --> 00:24:15,954
The tiny llama has been having problems recently. Mistral seven.

385
00:24:17,384 --> 00:24:20,568
I know the models. Models change a lot. Ms.

386
00:24:20,616 --> 00:24:24,160
Phi three, which has been pretty good. And then I'm like,

387
00:24:24,232 --> 00:24:27,744
can I call even more models at once? That might be too much for my

388
00:24:27,784 --> 00:24:30,364
system, but I have one also that translates to Spanish.

389
00:24:31,424 --> 00:24:34,152
It's nice to have content in other languages as you do. French,

390
00:24:34,248 --> 00:24:38,044
German, Hindi. Give me some suggestions for the languages.

391
00:24:38,344 --> 00:24:41,808
There's a lot of models out there. I try h two

392
00:24:41,856 --> 00:24:45,230
o, llama three. So I've got a bunch of

393
00:24:45,262 --> 00:24:48,686
models running, and when they get the results back, if they're

394
00:24:48,710 --> 00:24:52,726
not total junk, I send them out to slack. And then

395
00:24:52,750 --> 00:24:56,478
I've got a slack receiver

396
00:24:56,566 --> 00:25:00,702
here, taken anything I send in and then I'm publishing it.

397
00:25:00,878 --> 00:25:05,022
Pretty straightforward, but gives you an idea here

398
00:25:05,198 --> 00:25:09,066
also, some error might

399
00:25:09,090 --> 00:25:14,194
have, might be out of permissions for one of the stock systems.

400
00:25:14,234 --> 00:25:17,282
Yeah, I might have to change

401
00:25:17,378 --> 00:25:20,706
a token somewhere, but what it does is find

402
00:25:20,770 --> 00:25:24,186
out what company your stock is and then send it

403
00:25:24,210 --> 00:25:27,850
on its way. Let's see, maybe we can get weather. Did we get any

404
00:25:27,882 --> 00:25:31,554
results back? Oh, we got, we got some stuff for, we got,

405
00:25:31,594 --> 00:25:36,122
like we mentioned all those model five three give me nothing

406
00:25:36,298 --> 00:25:40,250
mistral seven told me who amd was. I guess that's

407
00:25:40,282 --> 00:25:42,854
good. Metalama three.

408
00:25:43,554 --> 00:25:46,294
And then there's the translation. What about the weather?

409
00:25:46,634 --> 00:25:50,266
What is the weather in. I'm going to Wildwood.

410
00:25:50,290 --> 00:25:53,374
It's a nice beach town here in New Jersey. We have beaches,

411
00:25:53,874 --> 00:25:57,574
and we're getting some results back really quick. So that's cool.

412
00:25:58,394 --> 00:26:01,810
Here's the weather from a weather forecast. This is probably the smartest

413
00:26:01,842 --> 00:26:05,208
one to look at. And this is showing me some of

414
00:26:05,216 --> 00:26:08,904
the weather from the Philadelphia area, which is somewhat

415
00:26:08,944 --> 00:26:13,404
close there, one of the stations there, and gives me what's the current weather?

416
00:26:13,784 --> 00:26:17,040
And I did some parsing to get, you know,

417
00:26:17,112 --> 00:26:20,464
Latin long from a name which

418
00:26:20,544 --> 00:26:24,176
everyone wants a lat long. There's some paid services that don't, but pretty

419
00:26:24,200 --> 00:26:28,004
easy tells me what the weather is generally from some of the other models.

420
00:26:28,564 --> 00:26:31,804
Kind of cool way to do that. Just to give you an idea,

421
00:26:31,844 --> 00:26:35,652
we can also do some other things in here. Like I can upload

422
00:26:35,708 --> 00:26:38,852
an image, and I often will have

423
00:26:38,908 --> 00:26:42,676
images of my cat. So obviously an image is not

424
00:26:42,740 --> 00:26:45,860
text, it's not a question. It can be a

425
00:26:45,892 --> 00:26:49,564
question if I have the right kind of vector store and I can

426
00:26:49,644 --> 00:26:52,772
say, give me pictures similar to this.

427
00:26:52,948 --> 00:26:56,150
And that's certainly one of the demos we'll do in the future, because that's pretty

428
00:26:56,212 --> 00:26:59,602
cool. So yeah, that works slightly differently.

429
00:26:59,658 --> 00:27:03,506
I have some universal code over here,

430
00:27:03,690 --> 00:27:07,114
gets my, gets that

431
00:27:07,154 --> 00:27:10,754
message in from slack, make sure that it's actually an

432
00:27:10,794 --> 00:27:14,774
image, downloads it with the proper permissions,

433
00:27:15,074 --> 00:27:18,618
if it matches, sends it over to image processing,

434
00:27:18,786 --> 00:27:22,602
which something failed here I might have forgotten to

435
00:27:22,738 --> 00:27:26,748
install. One of the libraries should take a look in that,

436
00:27:26,876 --> 00:27:30,540
and otherwise it's sending select reports.

437
00:27:30,612 --> 00:27:34,012
If things make it through the system, depend on, you know,

438
00:27:34,068 --> 00:27:37,660
what that image looks like. Is there security issues, whatever.

439
00:27:37,772 --> 00:27:41,244
And then it just pops up in our reports here.

440
00:27:41,404 --> 00:27:45,284
Like here, we did a little bit of analytics on there, purple bean

441
00:27:45,324 --> 00:27:49,580
bag chair with cat on it, and a colorful room that's

442
00:27:49,612 --> 00:27:52,870
pretty accurate. And then if you see we've had other reports,

443
00:27:52,942 --> 00:27:56,534
I'm doing some things with real time traffic cameras. That's in future

444
00:27:56,614 --> 00:28:00,774
demos. That'll be the next one. So stay tuned

445
00:28:00,894 --> 00:28:04,462
with conference in six months, how to

446
00:28:04,478 --> 00:28:08,634
get started with Milvis just to make it easier for you.

447
00:28:09,014 --> 00:28:12,270
Automate everything. Thank you for coming to my

448
00:28:12,302 --> 00:28:15,734
talk. Hopefully it wasn't too long. If you have

449
00:28:15,814 --> 00:28:18,656
questions, definitely reach out to me.

450
00:28:18,840 --> 00:28:22,608
I am always on LinkedIn and Twitter,

451
00:28:22,776 --> 00:28:24,364
medium, GitHub,

452
00:28:25,784 --> 00:28:29,552
discord, wherever cool data is,

453
00:28:29,688 --> 00:28:32,912
I'll be out there. Thanks for watching. See you

454
00:28:32,928 --> 00:28:33,104
next time.

