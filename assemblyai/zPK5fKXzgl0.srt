1
00:00:25,170 --> 00:00:28,310
Hello everyone, welcome. Today we are going to talk

2
00:00:28,380 --> 00:00:32,550
about tracking says with CDK and typescript.

3
00:00:33,130 --> 00:00:37,538
I hope you discovered and seeing after this session honeycomb

4
00:00:37,554 --> 00:00:41,750
CTO cart manager said observability isn't just

5
00:00:41,820 --> 00:00:45,158
about knowing what's happening in your system right now.

6
00:00:45,324 --> 00:00:49,430
It's about being able to ask any question

7
00:00:49,580 --> 00:00:53,514
of persistent at end time. But let's

8
00:00:53,562 --> 00:00:57,054
put it plainly, it's like having a crystal ball for your

9
00:00:57,092 --> 00:01:00,602
software where you can summon answers to your burning

10
00:01:00,666 --> 00:01:03,810
questions whenever curiosity strikes.

11
00:01:04,390 --> 00:01:08,046
Hey system, why did you decide to take a cough

12
00:01:08,078 --> 00:01:12,014
break during peak trap? What is with the hiccups

13
00:01:12,062 --> 00:01:16,150
every time we deploy a new code? So to achieve it,

14
00:01:16,220 --> 00:01:19,782
we are going to use CDK. So I'm going to give you

15
00:01:19,836 --> 00:01:23,254
a brief smell about the benefits of

16
00:01:23,292 --> 00:01:27,414
CDK. So what is CDK? CDK is a framework that

17
00:01:27,452 --> 00:01:30,630
allows developers to define cloud infrastructure,

18
00:01:31,610 --> 00:01:34,570
a YAAC basically like terraform,

19
00:01:35,470 --> 00:01:39,286
using familiar programming languages like typeScript,

20
00:01:39,398 --> 00:01:42,926
typescript, Python, Java and C sharp. Today we

21
00:01:42,948 --> 00:01:46,334
are going to use typescript. Okay,

22
00:01:46,452 --> 00:01:49,854
so basically what is the

23
00:01:49,892 --> 00:01:53,810
benefits when using AWS CDK

24
00:01:54,790 --> 00:01:59,170
you can abstract your cloudformation complexity.

25
00:01:59,670 --> 00:02:02,930
You can use reuse and

26
00:02:03,000 --> 00:02:06,914
share components. You can integrate everything with AWS

27
00:02:06,962 --> 00:02:10,310
ecosystem because yeah, it was built

28
00:02:10,380 --> 00:02:14,246
by AWS. Let's to

29
00:02:14,268 --> 00:02:17,830
the star of the night star of the night is SES.

30
00:02:18,330 --> 00:02:21,834
What is SES says is like

31
00:02:21,952 --> 00:02:25,210
your digital postman. Ensure your

32
00:02:25,280 --> 00:02:29,194
emails reach their destination safely and on

33
00:02:29,232 --> 00:02:32,378
time. In the chaotic Internet world, it's your

34
00:02:32,464 --> 00:02:36,098
superhero sidekick, managing your email,

35
00:02:36,134 --> 00:02:39,790
saving them from the dead, red spam folder and

36
00:02:39,860 --> 00:02:43,698
cyberspace fight, all while

37
00:02:43,864 --> 00:02:47,970
wearing a virtual cape and mask. I hope so.

38
00:02:48,120 --> 00:02:51,102
If you'll take a look here into this GiF,

39
00:02:51,166 --> 00:02:54,386
you can have an idea about

40
00:02:54,488 --> 00:02:58,386
the role of okay, so let's

41
00:02:58,418 --> 00:03:02,038
go to how SES works. Says works

42
00:03:02,124 --> 00:03:05,878
here in the first part. In the first one here,

43
00:03:05,964 --> 00:03:09,820
we have sender. Then sender send

44
00:03:10,190 --> 00:03:14,378
the email to the SES. In the first part here,

45
00:03:14,464 --> 00:03:17,930
client application sends emails. So picture this.

46
00:03:18,000 --> 00:03:21,938
Your client app feeling like a hotshot email sender

47
00:03:22,054 --> 00:03:26,126
send a request says to whisk away your message

48
00:03:26,228 --> 00:03:29,742
to its lucky recipients. In the second part

49
00:03:29,796 --> 00:03:33,070
here says play the email fairy.

50
00:03:33,150 --> 00:03:36,738
So says being the gracious host it is,

51
00:03:36,824 --> 00:03:40,178
accepts the email with open arms. It's like

52
00:03:40,264 --> 00:03:43,566
getting the golden chick to the email party.

53
00:03:43,758 --> 00:03:46,200
In the 30 part here,

54
00:03:47,050 --> 00:03:50,934
the great Internet, you would say. In fact, like the

55
00:03:50,972 --> 00:03:54,502
SES takes your email by hand

56
00:03:54,636 --> 00:03:57,990
and sends it flying through the Internet

57
00:03:58,910 --> 00:04:02,934
at a lightning speed, like a digital superhero delivering

58
00:04:02,982 --> 00:04:06,140
messages faster than a pizza on a Friday night.

59
00:04:06,590 --> 00:04:10,290
Fourth one here they email destiny revealed,

60
00:04:10,390 --> 00:04:13,520
in fact. So we have the receivers here.

61
00:04:14,690 --> 00:04:18,042
And in the first scenario, for instance,

62
00:04:18,186 --> 00:04:21,566
like three scenarios here,

63
00:04:21,668 --> 00:04:25,966
the first one is inbox nirvana. The recipient's ICP

64
00:04:26,078 --> 00:04:30,958
happily delivers your email straight to the inboxes

65
00:04:31,134 --> 00:04:34,690
like a smooth entry into email paradise.

66
00:04:35,050 --> 00:04:38,486
The second scenario, we can have the phantom email

67
00:04:38,588 --> 00:04:42,262
like oops. Turns out the recipient's email address

68
00:04:42,396 --> 00:04:45,986
is a ghost town. The ICP sends a bounce

69
00:04:46,018 --> 00:04:50,482
notification back to SES like here informing

70
00:04:50,546 --> 00:04:54,120
that it's a ghost and says

71
00:04:54,670 --> 00:04:58,166
notification back to says, which turn gently breaks

72
00:04:58,198 --> 00:05:01,642
the news to you. So bounce to the SES and then bounce again

73
00:05:01,696 --> 00:05:05,706
to the center. The 30 scenario it's

74
00:05:05,738 --> 00:05:08,922
the span saga. Your email arrives,

75
00:05:08,986 --> 00:05:12,526
but oh no, it says demon, the black sheep of

76
00:05:12,548 --> 00:05:16,718
the inbox and Mercad Aspen. The recipient

77
00:05:16,814 --> 00:05:20,770
hits the panic button and complains to the ICP.

78
00:05:21,910 --> 00:05:26,058
Says being the messenger of truth relays the complaint

79
00:05:26,254 --> 00:05:29,750
back to you like a carry pinion with

80
00:05:29,820 --> 00:05:34,162
some bad news. So it's a brief

81
00:05:34,226 --> 00:05:38,150
explaining about the flow of Mayo Sandy

82
00:05:38,830 --> 00:05:42,026
and you can take a look in more detail if you want in the

83
00:05:42,048 --> 00:05:46,026
documentation. But the big picture is basically

84
00:05:46,208 --> 00:05:49,562
this. So let's take a look on the

85
00:05:49,616 --> 00:05:53,662
SAS components. SES components we have two

86
00:05:53,716 --> 00:05:57,774
components basically here to explain this in a

87
00:05:57,892 --> 00:05:59,440
summarized way.

88
00:06:01,010 --> 00:06:03,922
So what is a verified identity? Well,

89
00:06:04,056 --> 00:06:07,140
it's like having your name on the guest list.

90
00:06:07,910 --> 00:06:11,454
It proves you are legit

91
00:06:11,582 --> 00:06:15,230
and not just in email pressure trying to sneak into

92
00:06:15,320 --> 00:06:19,106
the party. So whether it's

93
00:06:19,138 --> 00:06:22,662
your domain, subdomain or email address,

94
00:06:22,796 --> 00:06:26,322
getting verified is like getting the stamp of approval

95
00:06:26,386 --> 00:06:30,150
for the email gods. From the email gods

96
00:06:31,390 --> 00:06:34,682
you have also got these things called

97
00:06:34,816 --> 00:06:38,314
configuration lets. Think of

98
00:06:38,352 --> 00:06:42,494
them as your party playlist. There are ses of

99
00:06:42,532 --> 00:06:46,014
rules you can apply to your verified identities to make

100
00:06:46,052 --> 00:06:49,710
sure your emails hit all the right notes

101
00:06:50,530 --> 00:06:54,754
with the congregation set you can fine tune how

102
00:06:54,792 --> 00:06:58,914
emails behave and where they go. Want to

103
00:06:58,952 --> 00:07:02,898
track who is opening your mails? Done. Need to

104
00:07:02,984 --> 00:07:06,790
monitor boss ranks or complaints? Easy peasy.

105
00:07:07,210 --> 00:07:11,030
Configuration set let you call the shots and

106
00:07:11,100 --> 00:07:15,074
keep your email game on point. So next time you are sending

107
00:07:15,122 --> 00:07:19,130
out those email invites or blasting out

108
00:07:19,200 --> 00:07:22,118
your latest new latest newsletter,

109
00:07:22,294 --> 00:07:26,022
remember, verified identities and configuration sets

110
00:07:26,086 --> 00:07:30,054
are your backstage crew making sure your email

111
00:07:30,182 --> 00:07:33,118
rock the box. Okay,

112
00:07:33,284 --> 00:07:37,406
so let's go to our

113
00:07:37,508 --> 00:07:40,350
common problems when using lets.

114
00:07:41,330 --> 00:07:45,482
Basically we have two common problems to summarize

115
00:07:45,546 --> 00:07:49,602
here. The biggest problem in my perspective is

116
00:07:49,656 --> 00:07:54,082
the email deliverability issue because

117
00:07:54,216 --> 00:07:57,618
we are trying to ensuring that email reach recipients

118
00:07:57,714 --> 00:08:02,342
in box and avoid being mercury as span could

119
00:08:02,396 --> 00:08:07,030
be challenging. Maintaining a good sender reputation,

120
00:08:07,450 --> 00:08:11,430
adhering to email sending best

121
00:08:11,580 --> 00:08:15,038
practices and regularly monitoring email

122
00:08:15,074 --> 00:08:18,790
deliverability metrics are essential to mitigate

123
00:08:18,870 --> 00:08:22,874
this issue and the second one is monitoring

124
00:08:22,922 --> 00:08:24,190
SES metrics.

125
00:08:26,530 --> 00:08:30,314
We have a lack of monitoring and reporting

126
00:08:30,442 --> 00:08:35,458
because we don't have things made

127
00:08:35,624 --> 00:08:39,714
directly by the AWS. So when

128
00:08:39,752 --> 00:08:42,660
we are analyzing mayo delivery data,

129
00:08:43,350 --> 00:08:47,026
we think it's a kind of essential thing for identifying

130
00:08:47,058 --> 00:08:50,870
issues and optimizing email campaigns.

131
00:08:51,530 --> 00:08:54,994
Users should regularly review bounce rates,

132
00:08:55,042 --> 00:08:59,298
complaint rates and other metrics to improve email deliverability

133
00:08:59,394 --> 00:09:03,306
and engagement. Like you are trying to

134
00:09:03,408 --> 00:09:07,130
figure out how many people

135
00:09:07,280 --> 00:09:11,882
clicked on your campaign about the new sneakers

136
00:09:11,946 --> 00:09:14,910
that you released yesterday.

137
00:09:15,570 --> 00:09:19,038
This kind of thing. You can improve your

138
00:09:19,124 --> 00:09:23,134
product, for instance, and give

139
00:09:23,172 --> 00:09:26,814
you more arguments and more

140
00:09:26,852 --> 00:09:30,318
things to think when you are trying to create a

141
00:09:30,324 --> 00:09:33,774
new product or trying to prove your

142
00:09:33,892 --> 00:09:37,062
concept to the product

143
00:09:37,196 --> 00:09:40,374
managers and something like that. Why should

144
00:09:40,412 --> 00:09:43,846
I track it? Yeah, tracking salesmetrics is

145
00:09:43,868 --> 00:09:47,094
a crucial because it's like having a dashboard for your

146
00:09:47,132 --> 00:09:51,018
mayor campaigns. It lets you see

147
00:09:51,184 --> 00:09:55,002
how your email perform, who is opening and

148
00:09:55,136 --> 00:09:58,346
ignoring them and where they get lost in

149
00:09:58,368 --> 00:10:02,110
the digital winderns. With this data,

150
00:10:02,180 --> 00:10:05,178
you can fine tune your email strategies,

151
00:10:05,354 --> 00:10:09,022
improve engagement and ensure your messages hit the

152
00:10:09,076 --> 00:10:12,910
mark every time. It's like having a GPS

153
00:10:13,430 --> 00:10:17,106
for email journey, helping you navigate the

154
00:10:17,128 --> 00:10:22,542
twists and turns of the digital landscape with let's

155
00:10:22,606 --> 00:10:25,730
understand a little bit about sesmetrics.

156
00:10:26,870 --> 00:10:30,950
Says metrics play a crucial role in the email delivery

157
00:10:32,490 --> 00:10:36,306
because this provide us insights

158
00:10:36,498 --> 00:10:40,214
into the performance and healthy over Mayo campaigns.

159
00:10:40,342 --> 00:10:44,550
These metrics help email senders understand how recipients

160
00:10:44,630 --> 00:10:49,290
engage with their email and identify areas for improvement.

161
00:10:49,870 --> 00:10:54,270
And here's why says metrics are significant.

162
00:10:54,610 --> 00:10:58,414
I'm going to explain a little bit about

163
00:10:58,532 --> 00:11:02,442
each metric so delivery hate the first

164
00:11:02,516 --> 00:11:06,542
metric here is SES metrics

165
00:11:06,606 --> 00:11:10,830
that track the delivery rate, indicating the percentage

166
00:11:10,910 --> 00:11:14,850
of email successfully delivered to recipients in boxes.

167
00:11:16,150 --> 00:11:19,618
High delivery rates ensure that emails

168
00:11:19,634 --> 00:11:23,670
reach intended recipients and are not lost or

169
00:11:23,740 --> 00:11:28,114
market as a spam. The open rate metrics

170
00:11:28,162 --> 00:11:31,306
show the percentage of recipients hoping at the

171
00:11:31,328 --> 00:11:35,030
email. A higher open rate suggests

172
00:11:35,110 --> 00:11:38,570
that the email content is engaging and relevant to

173
00:11:38,640 --> 00:11:42,746
recipients. The click through rate CTR

174
00:11:42,938 --> 00:11:46,874
CTR metrics measure the percentage

175
00:11:46,922 --> 00:11:50,462
of recipients who clicked on links within the email.

176
00:11:50,596 --> 00:11:55,330
A higher CTR indicates that the email contains resolated

177
00:11:56,070 --> 00:11:59,202
with recipients and encouraged to then to

178
00:11:59,256 --> 00:12:03,154
take an action. Important thing when

179
00:12:03,192 --> 00:12:07,030
you tracking to track your audience.

180
00:12:07,770 --> 00:12:11,414
After that we have bounce rate. I explained a little bit before,

181
00:12:11,532 --> 00:12:15,542
but bounce rate metrics track the percentage of emails that were

182
00:12:15,596 --> 00:12:19,362
not delivered successfully due to various

183
00:12:19,506 --> 00:12:23,558
reasons such as value email addresses or full inboxes.

184
00:12:23,734 --> 00:12:27,194
High bounce rate may indicate issues with

185
00:12:27,312 --> 00:12:30,322
email list, IGN or deliverability.

186
00:12:30,486 --> 00:12:34,030
There are two types of bounce we have hard bounce.

187
00:12:34,850 --> 00:12:37,998
Basically it's the email brick wall.

188
00:12:38,164 --> 00:12:41,310
Imagine your email hitting a brick wall but

189
00:12:41,380 --> 00:12:44,754
with few words instead of bricks. Yeah, that's a hard

190
00:12:44,792 --> 00:12:49,380
bounce. It's like sending a letter to Hogwarts where

191
00:12:49,910 --> 00:12:53,442
you are a Morgo and it's just not going to

192
00:12:53,496 --> 00:12:57,582
happen. Soft bounce is the Mayo

193
00:12:57,646 --> 00:13:01,842
trampoline. Picture this, your mayo hits a trampoline

194
00:13:01,906 --> 00:13:05,382
side of brick wall. It's a soft bounce like

195
00:13:05,436 --> 00:13:09,274
when you throw a ball too hard and it bounces back.

196
00:13:09,392 --> 00:13:14,010
The mailbox might be full or the Internet might

197
00:13:14,160 --> 00:13:18,026
be having a melted off. Then we have

198
00:13:18,208 --> 00:13:21,546
complaint rate. Complaint rate metrics indicate the

199
00:13:21,568 --> 00:13:25,454
percentage of recipients who market they email as

200
00:13:25,492 --> 00:13:29,582
a spun or unwanted. A high complaint rate can

201
00:13:29,636 --> 00:13:33,280
negatively impact sender reputation, so you need to.

202
00:13:34,710 --> 00:13:38,062
After that we have the rendering

203
00:13:38,126 --> 00:13:40,690
ferry, the hindering ferry.

204
00:13:41,190 --> 00:13:44,986
It's like you have a template mail and you forgot

205
00:13:45,038 --> 00:13:48,626
to send a parameter to the template

206
00:13:48,738 --> 00:13:52,534
so it will give you

207
00:13:52,732 --> 00:13:56,280
a handling failure. Basically,

208
00:13:57,690 --> 00:14:01,290
overall sales metrics empower email senders to

209
00:14:01,360 --> 00:14:05,530
monitor the effectiveness of their email campaigns

210
00:14:06,030 --> 00:14:10,194
and identify areas of improvement and optimize

211
00:14:10,262 --> 00:14:14,474
strategies to enhance deliverability and engagement

212
00:14:14,522 --> 00:14:15,870
with recipients.

213
00:14:17,650 --> 00:14:21,006
Let me show an example of metrics here.

214
00:14:21,108 --> 00:14:25,070
Here we have some SES metrics like bounce,

215
00:14:25,150 --> 00:14:28,370
click, compliance, delivery. Here welbe core

216
00:14:28,440 --> 00:14:33,294
having great peaks of sending email

217
00:14:33,342 --> 00:14:36,982
that was sent successfully. We don't have

218
00:14:37,036 --> 00:14:41,654
a lot of opens here, so this

219
00:14:41,772 --> 00:14:45,286
can give us an idea that welbe core

220
00:14:45,468 --> 00:14:50,102
not having a good couch

221
00:14:50,166 --> 00:14:53,820
to action emails. So this kind of thing

222
00:14:54,590 --> 00:14:58,502
could help you and help your product managers

223
00:14:58,566 --> 00:15:01,130
to understand your audience.

224
00:15:01,950 --> 00:15:05,338
So let's hands on because

225
00:15:05,424 --> 00:15:08,910
yeah, this talk we're going to get

226
00:15:08,980 --> 00:15:12,334
our hands dirty. Here we have the code.

227
00:15:12,372 --> 00:15:15,394
Let me give some zoom here.

228
00:15:15,592 --> 00:15:18,740
I think it's better to read now.

229
00:15:20,150 --> 00:15:23,934
Here we have basically an echoic structure.

230
00:15:24,062 --> 00:15:28,230
I'm going to share with you GitHub this

231
00:15:28,300 --> 00:15:31,800
structure about CDK and how you can configure that.

232
00:15:32,730 --> 00:15:37,074
Here we have the class called email developability

233
00:15:37,202 --> 00:15:40,618
that extends the stack. Stack is a part

234
00:15:40,704 --> 00:15:44,266
of the construct. In there you

235
00:15:44,288 --> 00:15:48,154
can create stacks of many kind

236
00:15:48,192 --> 00:15:52,000
of resources and put everything together.

237
00:15:52,770 --> 00:15:56,320
To start here we need to create a class

238
00:15:57,170 --> 00:16:01,166
and the context is email availability to

239
00:16:01,188 --> 00:16:04,654
be easier to achieve the names and IDs

240
00:16:04,702 --> 00:16:08,238
for the resources. Here we have the register

241
00:16:08,334 --> 00:16:12,354
event, but before the register event

242
00:16:12,552 --> 00:16:16,242
we need to create our configuration set. So here

243
00:16:16,296 --> 00:16:20,090
we create our config set, passing the sending

244
00:16:20,110 --> 00:16:23,720
enabled that we are going to know

245
00:16:26,090 --> 00:16:29,206
the configuration set name. Basically it's the

246
00:16:29,228 --> 00:16:32,566
context name. We are setting the habitration metrics

247
00:16:32,598 --> 00:16:37,674
because we are trying to know how

248
00:16:37,712 --> 00:16:41,806
many emails was sent and this kind

249
00:16:41,828 --> 00:16:45,882
of thing. So it's our objective

250
00:16:45,946 --> 00:16:49,658
here, trying to understand the reputation metrics.

251
00:16:49,674 --> 00:16:52,720
So we need to set this as true.

252
00:16:53,270 --> 00:16:58,462
And it's a pretty easy way to configure

253
00:16:58,526 --> 00:17:02,050
this. Here we are configuring the

254
00:17:02,120 --> 00:17:04,794
event destination like SNS,

255
00:17:04,942 --> 00:17:08,098
because here we have SNS topic.

256
00:17:08,194 --> 00:17:13,430
In this SNS topic we receive all

257
00:17:13,500 --> 00:17:17,234
our heputation metrics, like the sendings,

258
00:17:17,282 --> 00:17:20,378
the rejects, the bounces. So if you want to

259
00:17:20,464 --> 00:17:24,220
plug in a lambda to process all the information in

260
00:17:24,830 --> 00:17:28,106
a different way like we have, this could

261
00:17:28,128 --> 00:17:32,934
be your upstream resources upstream

262
00:17:32,982 --> 00:17:36,814
event, and then you can give this to

263
00:17:36,932 --> 00:17:40,686
your downstream system to process it as

264
00:17:40,788 --> 00:17:44,500
you want. So you can

265
00:17:45,190 --> 00:17:49,460
plug in metrics, another kind of thing

266
00:17:50,790 --> 00:17:54,846
to log this, like for instance

267
00:17:55,038 --> 00:17:58,386
data dog or any kind of thing you want.

268
00:17:58,568 --> 00:18:02,146
If you want to send everything to the clogue watts logs,

269
00:18:02,178 --> 00:18:05,160
you can basically do it using this.

270
00:18:05,850 --> 00:18:09,154
And then we have here some clothes watt dimension.

271
00:18:09,282 --> 00:18:14,300
Clogged watt dimension is where you can create

272
00:18:14,750 --> 00:18:18,294
the dimensions to classify your metrics

273
00:18:18,342 --> 00:18:21,840
like I showed before.

274
00:18:22,450 --> 00:18:26,158
And you can open up the metrics and see everything

275
00:18:26,244 --> 00:18:30,238
there. So you need to create some cloud watch dimensions to

276
00:18:30,404 --> 00:18:33,726
metrify your sending

277
00:18:33,758 --> 00:18:37,506
rate, your bounce rate, for instance. So here

278
00:18:37,608 --> 00:18:41,218
we are going to add another event

279
00:18:41,304 --> 00:18:44,802
destination, and this event destination needs

280
00:18:44,856 --> 00:18:49,042
a cloud watch dimensions. So because of that we are creating these

281
00:18:49,096 --> 00:18:52,758
cloud water dimensions here and using

282
00:18:52,844 --> 00:18:56,134
these events, passing all events we are trying to

283
00:18:56,172 --> 00:18:59,738
track. So the enable needs to

284
00:18:59,744 --> 00:19:04,026
be true because yeah, we are trying to track it. After that

285
00:19:04,208 --> 00:19:07,398
we have the creation of alarms.

286
00:19:07,574 --> 00:19:11,500
So here I'm passing the top

287
00:19:11,950 --> 00:19:14,570
because you have for instance,

288
00:19:15,870 --> 00:19:19,754
top and it's like you want to receive some notifications

289
00:19:19,802 --> 00:19:23,314
when everything crashes. So because of that we need

290
00:19:23,352 --> 00:19:27,218
that topic. It's a different topic from the

291
00:19:27,224 --> 00:19:31,762
another topic because the first topic we are trying to give

292
00:19:31,816 --> 00:19:35,910
information for downstream systems. And here welbe care, trying to notify

293
00:19:36,570 --> 00:19:39,746
our workforce,

294
00:19:39,938 --> 00:19:43,158
our employees, like our DevOps guy,

295
00:19:43,244 --> 00:19:46,742
or, I don't know, some person that

296
00:19:46,796 --> 00:19:50,474
can act when

297
00:19:50,512 --> 00:19:53,530
an alarm will be triggered.

298
00:19:54,110 --> 00:19:57,546
So here we are creating alerts. So I'm passing the

299
00:19:57,568 --> 00:20:01,470
top and events to alarm with threshold.

300
00:20:01,810 --> 00:20:05,134
The threshold is basically when you want

301
00:20:05,172 --> 00:20:08,346
to alarm it. Like when I have a bounce

302
00:20:08,378 --> 00:20:12,966
rate, I want to alarm it, for instance. So it's basically metrid

303
00:20:13,018 --> 00:20:16,526
by thresholds. So here we are passing

304
00:20:16,558 --> 00:20:19,220
that. So it's a record string here.

305
00:20:19,910 --> 00:20:23,506
So then we pass a list, I'm going

306
00:20:23,528 --> 00:20:27,800
to pass a list and then create an alarm for each event,

307
00:20:28,250 --> 00:20:31,826
like here. So we are creating a new alarm,

308
00:20:32,018 --> 00:20:36,066
passing the metric, in fact, namespace of the metric,

309
00:20:36,258 --> 00:20:39,466
the metric name the type of

310
00:20:39,648 --> 00:20:43,146
statistic in fact we can use Sam, you can

311
00:20:43,168 --> 00:20:46,262
use average, minimum,

312
00:20:46,326 --> 00:20:49,930
maximum P 99 for instance.

313
00:20:51,570 --> 00:20:55,022
And we have the evaluation period here,

314
00:20:55,156 --> 00:20:58,926
the comparison operator if you want this

315
00:20:59,108 --> 00:21:02,254
should be greater than only or greater than

316
00:21:02,292 --> 00:21:05,780
or equal to the threshold that you are passing here.

317
00:21:06,550 --> 00:21:10,402
We want to enable that actions and

318
00:21:10,456 --> 00:21:14,082
here description and the creating missing data,

319
00:21:14,216 --> 00:21:17,618
the treating disclosing data is when for instance

320
00:21:17,714 --> 00:21:20,598
when you don't have any kind of data here,

321
00:21:20,684 --> 00:21:24,386
you don't want to alert your workforce.

322
00:21:24,498 --> 00:21:28,154
So yeah of that we need you to

323
00:21:28,192 --> 00:21:31,414
pass away how you can want to treat missing

324
00:21:31,542 --> 00:21:35,242
data here. Okay. And then you

325
00:21:35,296 --> 00:21:39,260
are going to add alarm action you can use

326
00:21:40,130 --> 00:21:43,438
like I told you for this example

327
00:21:43,524 --> 00:21:47,054
we are going to choose topic to

328
00:21:47,092 --> 00:21:50,218
notify our worker core.

329
00:21:50,314 --> 00:21:53,566
But here you can basically trigger

330
00:21:53,758 --> 00:21:57,250
a lambda for instance or you can use

331
00:21:57,400 --> 00:22:00,914
another of action here like we

332
00:22:00,952 --> 00:22:04,834
have a couple action fix here. You can pass the iron of

333
00:22:04,872 --> 00:22:08,470
the action here as is the console.

334
00:22:08,890 --> 00:22:13,430
We are going to register event because first

335
00:22:13,500 --> 00:22:16,758
of all we provide the create alerts function

336
00:22:16,924 --> 00:22:20,266
and the configuration set function and then we

337
00:22:20,288 --> 00:22:23,994
have the register event to register everything

338
00:22:24,112 --> 00:22:27,174
we are trying to achieve. For instance

339
00:22:27,302 --> 00:22:31,582
here we have our topic. I don't know if you remember

340
00:22:31,716 --> 00:22:35,134
yet but before I told you, you can

341
00:22:35,172 --> 00:22:39,338
use l one, l two and l three constructs. Here it's

342
00:22:39,514 --> 00:22:43,374
l three constructs. Basically here we are creating

343
00:22:43,502 --> 00:22:47,362
a specific topic to handle all the

344
00:22:47,496 --> 00:22:51,250
configuration lets configuration set event

345
00:22:51,320 --> 00:22:54,962
destinations and here we have

346
00:22:55,016 --> 00:22:59,062
this topic, this lack topic. I'm importing this

347
00:22:59,116 --> 00:23:03,426
laptop. So because of that I have this import valley.

348
00:23:03,538 --> 00:23:07,838
So let's picture this. You have an infrastructure

349
00:23:08,034 --> 00:23:11,418
project and there you create

350
00:23:11,504 --> 00:23:15,238
all your core resources like topic.

351
00:23:15,414 --> 00:23:19,882
And after that we are going to call our

352
00:23:19,936 --> 00:23:23,574
configuration lets that we created before passing

353
00:23:23,622 --> 00:23:27,870
the mail delivery top. And here welbe core creating our

354
00:23:27,940 --> 00:23:31,502
alarms, passing the slack top. It's your

355
00:23:31,556 --> 00:23:37,460
notification top and with

356
00:23:37,990 --> 00:23:41,554
the object of event, the event you want to tracking to

357
00:23:41,592 --> 00:23:45,258
create alerts and it will show that you want to be notified

358
00:23:45,454 --> 00:23:49,186
if this could be greater

359
00:23:49,218 --> 00:23:52,786
than and as I explained in the preach

360
00:23:52,818 --> 00:23:57,014
alarm. For instance like I'm passing here, if I

361
00:23:57,052 --> 00:24:00,490
have one reject I'm going to

362
00:24:00,560 --> 00:24:04,554
alarm my work. So basically is

363
00:24:04,592 --> 00:24:08,540
this here. It's a quite simple way to

364
00:24:08,990 --> 00:24:13,150
achieve it. But yeah

365
00:24:13,300 --> 00:24:16,990
we have a lack of configuration

366
00:24:17,490 --> 00:24:21,210
and a lack of observability because SAS

367
00:24:21,290 --> 00:24:25,342
doesn't provide us a deep observability

368
00:24:25,486 --> 00:24:28,606
into the system. Because of this I'm

369
00:24:28,718 --> 00:24:32,210
trying to explain this is a discovered

370
00:24:32,550 --> 00:24:36,274
it is an unsync. Whenever you are working with

371
00:24:36,312 --> 00:24:40,166
SES you can have a lot of trouble trying to

372
00:24:40,268 --> 00:24:45,110
figure out who received it and who clicked your emails.

373
00:24:45,690 --> 00:24:49,820
Yeah, and I will tell you about a case

374
00:24:50,750 --> 00:24:54,202
we had at OLB. We were trying to find

375
00:24:54,256 --> 00:24:57,914
out how many people had received and

376
00:24:57,952 --> 00:25:01,966
made about safety regulation and we

377
00:25:01,988 --> 00:25:06,014
didn't have that visibility and so we

378
00:25:06,052 --> 00:25:10,170
had to develop a way to understanding of understanding

379
00:25:10,250 --> 00:25:14,162
our audience. And I think this is a crucial thing

380
00:25:14,216 --> 00:25:18,114
that you want. That we want because

381
00:25:18,312 --> 00:25:22,162
we need observability. We need to know the

382
00:25:22,216 --> 00:25:24,180
whys of our system.

383
00:25:25,770 --> 00:25:30,534
I think this is a brief way to

384
00:25:30,572 --> 00:25:35,734
understand SAS and everything you can take

385
00:25:35,772 --> 00:25:38,700
a look into the code. I'm going to share you.

386
00:25:39,790 --> 00:25:43,770
I hope you enjoyed and learned a little

387
00:25:43,840 --> 00:25:46,490
bit of SAS.

388
00:25:47,150 --> 00:25:50,254
If you have any questions please lets me know.

389
00:25:50,292 --> 00:25:55,006
Send me an email or you can find me at my

390
00:25:55,028 --> 00:25:59,198
name is Marcos Henrique. If you have

391
00:25:59,364 --> 00:26:02,238
some opinions and any feedback to share,

392
00:26:02,324 --> 00:26:05,440
please read this care code.

393
00:26:06,050 --> 00:26:13,134
I will enjoy your opinion because it

394
00:26:13,172 --> 00:26:17,174
was my debut. Talk them will enjoy your

395
00:26:17,212 --> 00:26:19,300
opinion so thank you.

