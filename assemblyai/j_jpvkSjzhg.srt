1
00:00:27,360 --> 00:00:31,312
Hey everyone, hi, I'm Pritam. I'm currently working as a

2
00:00:31,448 --> 00:00:34,720
back end developer at Uber. So today

3
00:00:34,792 --> 00:00:38,472
in my talk, I'm going to talk about dynamic resource allocation and how it is

4
00:00:38,488 --> 00:00:42,604
the most cost efficient tool for cloud computing.

5
00:00:43,384 --> 00:00:46,792
To go over the topics, we'll start with

6
00:00:46,808 --> 00:00:50,560
a brief introduction. We'll talk about few autoscaling,

7
00:00:50,632 --> 00:00:54,638
how it works in the real world and what are

8
00:00:54,646 --> 00:00:58,022
the cost savings and how do we use

9
00:00:58,118 --> 00:01:01,534
auto scaling systems. And also we'll talk about

10
00:01:01,574 --> 00:01:05,634
the future trends, which is regarding the serverless computing and

11
00:01:05,934 --> 00:01:09,878
what is the future direction we are going with cloud

12
00:01:09,926 --> 00:01:13,502
computing and how dynamic resource allocation

13
00:01:13,558 --> 00:01:17,774
is gonna play a pivotal role in it. And then

14
00:01:17,814 --> 00:01:21,286
we'll also briefly touch upon the future research opportunities that

15
00:01:21,310 --> 00:01:24,354
are available on this particular topic.

16
00:01:24,694 --> 00:01:28,526
So to start with, what is dynamic resource allocation

17
00:01:28,590 --> 00:01:32,326
and why is it very important in cloud computing?

18
00:01:32,510 --> 00:01:36,166
So computing is always

19
00:01:36,310 --> 00:01:40,194
resource intense. Computing is all about using,

20
00:01:40,534 --> 00:01:43,574
is very heavy on various resources,

21
00:01:43,654 --> 00:01:46,966
may be the data storage or the

22
00:01:46,990 --> 00:01:51,576
memory for computing and so on. So the

23
00:01:51,600 --> 00:01:55,208
dynamic resource allocation is a

24
00:01:55,256 --> 00:01:58,696
great technique which would help the

25
00:01:58,720 --> 00:02:02,404
cloud providers efficiently manage these resources.

26
00:02:02,864 --> 00:02:04,964
What we mean by that is,

27
00:02:05,544 --> 00:02:08,688
depending on the computational needs of a particular

28
00:02:08,776 --> 00:02:12,480
service or particular application, the resources are

29
00:02:12,512 --> 00:02:15,884
dynamically allocated to it. And when there is a

30
00:02:15,924 --> 00:02:20,356
certain downtime or when there is not very heavy traffic during that application,

31
00:02:20,540 --> 00:02:23,544
the resources are clubbed out of it.

32
00:02:23,924 --> 00:02:27,340
To give you a better example, if you are talking about an e commerce

33
00:02:27,372 --> 00:02:31,276
application, the business during the business hours is when they

34
00:02:31,300 --> 00:02:34,884
need much of the resources. And when there is a fire sale or

35
00:02:34,924 --> 00:02:38,868
certain event that is happening, that's when that application would require

36
00:02:38,956 --> 00:02:42,640
maximum resources. And during the store closed

37
00:02:42,672 --> 00:02:46,524
hours or during the non business hours,

38
00:02:47,224 --> 00:02:50,496
you don't need much of the computational resources.

39
00:02:50,680 --> 00:02:53,592
So based on these schedule,

40
00:02:53,728 --> 00:02:57,872
the cloud can provide certain, can allocate more resources

41
00:02:57,928 --> 00:03:02,024
during the business hours and even more resources during certain events,

42
00:03:02,064 --> 00:03:06,320
like we mentioned, like file sale or something, and reduce

43
00:03:06,472 --> 00:03:10,304
the resources and use those resources elsewhere when there is not

44
00:03:10,344 --> 00:03:13,560
much of the activity going on. So by

45
00:03:13,592 --> 00:03:17,344
this concept of reallocating the resources

46
00:03:17,464 --> 00:03:21,360
as per as per need basis, it has twofold advantages.

47
00:03:21,432 --> 00:03:25,192
It is it helps the business provide

48
00:03:25,248 --> 00:03:28,688
the services to their consumers in a more efficient way

49
00:03:28,736 --> 00:03:32,824
and also helps business to reduce

50
00:03:32,864 --> 00:03:36,752
their costs. So that's why this is one of the most important game

51
00:03:36,808 --> 00:03:40,274
changing features in cloud computing.

52
00:03:41,414 --> 00:03:45,262
So how does auto scaling work in

53
00:03:45,278 --> 00:03:48,638
today's world? Almost all cloud providing services

54
00:03:48,726 --> 00:03:52,718
like AWS, Google Cloud, Azure, everyone offers

55
00:03:52,846 --> 00:03:55,554
a wide range of auto scaling capabilities.

56
00:03:56,174 --> 00:03:59,954
So with we can

57
00:04:00,294 --> 00:04:03,838
majorly look at, there are multiple techniques here and

58
00:04:03,926 --> 00:04:07,674
most of these techniques can be broadly categorized into two categories.

59
00:04:08,064 --> 00:04:11,760
One is predictive scaling and

60
00:04:11,792 --> 00:04:15,472
the other one is reactive scaling. So, predictive scaling, as the

61
00:04:15,488 --> 00:04:19,744
name itself mentions, it's like it forecasts what

62
00:04:19,784 --> 00:04:23,888
would be the better time or what would be the resource usage

63
00:04:23,936 --> 00:04:27,752
at a given instance. So like a, like the ecommerce

64
00:04:27,848 --> 00:04:31,320
example we mentioned before, like, you can

65
00:04:31,352 --> 00:04:35,084
anticipate that you need the maximum resources during,

66
00:04:36,004 --> 00:04:38,908
during any sale event,

67
00:04:38,996 --> 00:04:42,724
and you need a moderate number of resources during your

68
00:04:42,764 --> 00:04:46,684
business service and the least number of resources during your downtime.

69
00:04:46,804 --> 00:04:50,548
So that is an example of like predictive scaling. So based

70
00:04:50,596 --> 00:04:54,276
on these predictions, we can pre allocate these resources.

71
00:04:54,460 --> 00:04:57,916
And reactive scaling is like the name mentions,

72
00:04:57,980 --> 00:05:01,388
it is a reactive like, for whatever reason, there is a sudden

73
00:05:01,436 --> 00:05:04,870
rush for business going with the same hour ecommerce

74
00:05:04,902 --> 00:05:07,954
example, when there is a sudden rush for business,

75
00:05:09,054 --> 00:05:13,438
we instead of our systems going down or becoming unavailable,

76
00:05:13,606 --> 00:05:17,430
more resources are dynamically allocated to

77
00:05:17,542 --> 00:05:21,114
keep the business afloat and not ruin the user experience.

78
00:05:22,814 --> 00:05:26,726
And so, and this,

79
00:05:26,830 --> 00:05:31,030
the pioneers in this are Netflix and Airbnb. They were very

80
00:05:31,102 --> 00:05:35,412
effective. Netflix in particular was very heavily

81
00:05:35,588 --> 00:05:39,300
was and is heavily using the dynamic

82
00:05:39,332 --> 00:05:42,424
resource allocation on their AWS cloud.

83
00:05:43,324 --> 00:05:47,588
Netflix predominantly uses this predictive scaling approaches

84
00:05:47,636 --> 00:05:51,100
based on their ton of data on the

85
00:05:51,132 --> 00:05:55,780
users, on their viewing patterns and everything. They predict

86
00:05:55,932 --> 00:05:59,824
the usage of their services and

87
00:06:00,134 --> 00:06:03,758
accordingly they schedule the resource allocation for their

88
00:06:03,806 --> 00:06:07,022
services on the cloud with the

89
00:06:07,038 --> 00:06:11,038
cloud providers. So moving

90
00:06:11,086 --> 00:06:14,230
on. Like, is it really useful? So this is according

91
00:06:14,302 --> 00:06:17,902
to a survey produced by AWS

92
00:06:17,958 --> 00:06:21,838
on their auto scaling. So they took all the consumers

93
00:06:21,886 --> 00:06:26,094
they have and they quantified the value

94
00:06:26,214 --> 00:06:30,040
they were able to produce. With the auto scaling, they could

95
00:06:30,072 --> 00:06:33,416
clearly see that both the average

96
00:06:33,600 --> 00:06:36,768
daily costs and monthly costs were reduced by 50%

97
00:06:36,856 --> 00:06:40,384
for their customers. So this

98
00:06:40,424 --> 00:06:44,352
is like the big testimony by one of the leading providers that

99
00:06:44,528 --> 00:06:47,736
auto scaling techniques are actually beneficial, both for the

100
00:06:47,760 --> 00:06:51,296
cloud providers and also for the

101
00:06:51,320 --> 00:06:52,484
cloud customers.

102
00:06:55,644 --> 00:06:59,044
And then when coming to how do we configure

103
00:06:59,084 --> 00:07:00,824
these auto scaling systems?

104
00:07:02,844 --> 00:07:06,644
So one of the key things for auto scaling is

105
00:07:06,684 --> 00:07:10,284
we need to have a great observability and monitoring around it,

106
00:07:10,404 --> 00:07:14,268
because say, for example, if you go with the predictive

107
00:07:14,316 --> 00:07:19,344
analysis, which is more cost efficient than reactive

108
00:07:20,224 --> 00:07:23,480
scaling techniques, we need

109
00:07:23,512 --> 00:07:27,016
to have this robust observability and

110
00:07:27,080 --> 00:07:30,256
alert systems in order to identify

111
00:07:30,320 --> 00:07:34,004
if anything is going bad or if it is not meeting the needs.

112
00:07:35,944 --> 00:07:39,360
So, and again, another major thing, again,

113
00:07:39,472 --> 00:07:43,704
there are multiple case studies here in the early stages of this auto scaling

114
00:07:43,864 --> 00:07:47,312
thing. Like we need to always beware

115
00:07:47,368 --> 00:07:50,800
of the thresholds. We need to set down so we should always put

116
00:07:50,832 --> 00:07:56,494
the upper bound and lower bound thresholds while opting

117
00:07:56,534 --> 00:07:59,798
for the auto scaling systems. Like the reason for that

118
00:07:59,846 --> 00:08:04,670
is the upper bound threshold stops

119
00:08:04,822 --> 00:08:08,334
the cloud providers from providing abundant of systems.

120
00:08:08,374 --> 00:08:11,550
And the problem with providing abundant of systems

121
00:08:11,582 --> 00:08:15,470
is the cost exponentially increase when more and more

122
00:08:15,582 --> 00:08:17,754
resources are added to the service.

123
00:08:18,124 --> 00:08:21,852
So based on the business needs, that could really

124
00:08:21,908 --> 00:08:26,068
lead to a big bill at the end. So the system should

125
00:08:26,196 --> 00:08:30,396
configure an upper limit threshold so that with

126
00:08:30,460 --> 00:08:33,780
the number of resources allocated are not more than a certain limit.

127
00:08:33,892 --> 00:08:38,544
And similarly we need to also maintain certain cooling cooldown periods

128
00:08:39,044 --> 00:08:43,532
after heavy d scaling. You don't want to immediately downgrade

129
00:08:43,588 --> 00:08:47,446
to the lower volume after the teeth.

130
00:08:47,470 --> 00:08:51,054
So the cooldown mechanisms have to be followed so that

131
00:08:51,094 --> 00:08:54,714
we don't lose, we don't lose any transactionality of

132
00:08:55,054 --> 00:08:58,606
the transactions that were happening during

133
00:08:58,670 --> 00:09:01,834
that time and others and other things.

134
00:09:03,254 --> 00:09:06,342
So this is a very, so the configuring this auto

135
00:09:06,358 --> 00:09:10,518
scaling system needs to be this careful balance of performance and cost.

136
00:09:10,686 --> 00:09:14,946
So like I mentioned, we cannot put

137
00:09:15,090 --> 00:09:18,642
very high upper limit because that would negatively impact

138
00:09:18,818 --> 00:09:22,970
the cost that needs to be paid to the cloud provider. So that

139
00:09:23,002 --> 00:09:27,018
is the careful balance during the configuration

140
00:09:27,066 --> 00:09:30,570
that we should consider that we should optimize for performance,

141
00:09:30,682 --> 00:09:34,162
but also budget in the cost we are willing to pay

142
00:09:34,338 --> 00:09:38,274
for our services to the cloud. And this is where

143
00:09:38,434 --> 00:09:42,022
the machine learning integration is playing,

144
00:09:42,118 --> 00:09:45,942
already playing a pivotal role and also would be the future in

145
00:09:45,958 --> 00:09:48,994
my opinion. So this predictive analytics,

146
00:09:50,054 --> 00:09:53,782
when powered by the machine learning models can actually become

147
00:09:53,838 --> 00:09:57,870
very, very powerful because using the,

148
00:09:58,062 --> 00:10:01,078
using a lot of data that is accumulated over the years,

149
00:10:01,126 --> 00:10:05,046
the machine learning algorithms or machine learning models

150
00:10:05,190 --> 00:10:09,172
can come up with a very accurate prediction

151
00:10:09,268 --> 00:10:13,292
on the resource usage that would

152
00:10:13,468 --> 00:10:17,324
really, employing these would really

153
00:10:17,444 --> 00:10:20,908
empower in coming up with a perfect schedule or near

154
00:10:20,956 --> 00:10:24,548
perfect schedule for the, for this auto scaling and

155
00:10:24,636 --> 00:10:28,108
resource allocation, thus optimizing both the cost and

156
00:10:28,156 --> 00:10:31,704
also not compromising on the performance of the services.

157
00:10:33,704 --> 00:10:37,520
And apart from this, the, and the auto scaling

158
00:10:37,552 --> 00:10:41,136
is going to become more and more important with the future of how

159
00:10:41,160 --> 00:10:44,560
the cloud is moving on. Now we hear this term called

160
00:10:44,672 --> 00:10:48,120
serverless computing. So this is a new

161
00:10:48,152 --> 00:10:51,644
paradigm in the cloud computing world.

162
00:10:52,544 --> 00:10:56,864
What do we mean by serverless computing? Is all

163
00:10:56,904 --> 00:10:59,752
the, your entire application and all the resource,

164
00:10:59,808 --> 00:11:03,334
all the services frameworks that needs to run that

165
00:11:03,374 --> 00:11:07,198
application is not allocated to a single server,

166
00:11:07,366 --> 00:11:11,318
more or less. There you can imagine this. And Docker

167
00:11:11,366 --> 00:11:15,142
is one of the great examples here where you put, you create

168
00:11:15,198 --> 00:11:18,566
these containers which has all the things that

169
00:11:18,590 --> 00:11:22,654
are required to run your service or power your service.

170
00:11:22,814 --> 00:11:26,202
And this docker can be hosted on any of the servers.

171
00:11:26,358 --> 00:11:30,386
That is the, at a very, very high level, that's what

172
00:11:30,490 --> 00:11:34,178
we can think of as a serverless computing. So,

173
00:11:34,266 --> 00:11:37,698
and as you can imagine, we don't have the server, so it is.

174
00:11:37,826 --> 00:11:41,254
And that's where the auto scaling becomes even more important

175
00:11:42,154 --> 00:11:45,978
in this scenario, because we are not dedicating the services

176
00:11:46,066 --> 00:11:49,354
to a single server, which means these services can

177
00:11:49,394 --> 00:11:53,062
be put on various servers as per the need or replicated

178
00:11:53,118 --> 00:11:56,834
across various servers as per the need, thus providing greater services.

179
00:11:57,534 --> 00:12:01,198
So with the future going to a serverless computing,

180
00:12:01,246 --> 00:12:05,470
auto scaling is only going to grow in importance and going

181
00:12:05,502 --> 00:12:08,194
to be the key feature for it.

182
00:12:09,654 --> 00:12:13,134
And talking about the future trends,

183
00:12:13,254 --> 00:12:17,910
like I mentioned, reinforcement learning techniques,

184
00:12:18,102 --> 00:12:21,494
they hold a great promise in this auto scaling

185
00:12:21,534 --> 00:12:25,276
policy. So auto scaling is all about how we determine the

186
00:12:25,300 --> 00:12:29,148
policy for auto trading depending on our business needs and

187
00:12:29,316 --> 00:12:31,784
what the service is going to offer.

188
00:12:32,924 --> 00:12:35,684
So this reinforcement learning techniques,

189
00:12:35,804 --> 00:12:39,692
the machine learning models are going to only help

190
00:12:39,748 --> 00:12:43,300
us positively in improving this decision making process.

191
00:12:43,492 --> 00:12:47,284
They can, like I mentioned before, they can go through the churns of

192
00:12:47,444 --> 00:12:51,534
tons of data and evaluate them correctly and

193
00:12:51,724 --> 00:12:55,082
produce these schedules or suggestions

194
00:12:55,138 --> 00:12:58,174
on the configurations and so on.

195
00:13:01,714 --> 00:13:05,066
So and again, integrating cloud services with IoT

196
00:13:05,130 --> 00:13:09,122
and edge computing can enable real time processing and resource management

197
00:13:09,218 --> 00:13:12,698
for time sensitive applications. And also

198
00:13:12,786 --> 00:13:16,258
the new paradigm that is happening in the cloud

199
00:13:16,306 --> 00:13:19,166
computing world are these concepts of hybrid cloud,

200
00:13:19,330 --> 00:13:23,574
where an application which is performed by various services and

201
00:13:23,614 --> 00:13:27,238
each of these services could be hosted on different clouds. Like you

202
00:13:27,246 --> 00:13:31,634
could have one of your microservices on AWS and one of your services on

203
00:13:31,934 --> 00:13:35,526
Google Cloud, and maybe you can have your database on Azure and

204
00:13:35,590 --> 00:13:39,774
all these work together seamlessly to serve your application.

205
00:13:39,934 --> 00:13:43,774
So in the hybrid cloud world, auto scaling

206
00:13:43,814 --> 00:13:48,030
strategies also are, are going to be very interesting.

207
00:13:48,102 --> 00:13:52,070
And that leads us to the research opportunities. The biggest research

208
00:13:52,142 --> 00:13:55,566
opportunity, in my opinion, in this area of

209
00:13:55,590 --> 00:13:59,614
dynamic resource allocation and auto scaling is around these

210
00:13:59,734 --> 00:14:02,934
multi cloud or hybrid cloud initiatives.

211
00:14:03,094 --> 00:14:06,902
So during the hybrid cloud initiatives, when the auto

212
00:14:06,918 --> 00:14:10,374
scaling happens on one cloud, you need

213
00:14:10,414 --> 00:14:14,114
to have the similar auto scaling happening on the

214
00:14:14,154 --> 00:14:17,362
other corresponding clouds as well. Otherwise you would,

215
00:14:17,458 --> 00:14:21,242
you are open to rate limitings and so many other

216
00:14:21,378 --> 00:14:25,054
issues again, which causes a degraded performance.

217
00:14:25,514 --> 00:14:29,074
So that is a very keen

218
00:14:29,114 --> 00:14:32,602
area right now, and there is a lot of collaborated

219
00:14:32,738 --> 00:14:36,210
work between various cloud providers on this. And that

220
00:14:36,242 --> 00:14:40,242
would be a great interesting research opportunity

221
00:14:40,298 --> 00:14:43,876
over there. Also, one of the, one of the

222
00:14:43,900 --> 00:14:46,344
major challenges on this cloud,

223
00:14:47,204 --> 00:14:50,652
auto scaling is always the complexity,

224
00:14:50,788 --> 00:14:54,380
it's adding more resources doesn't automatically

225
00:14:54,452 --> 00:14:58,436
work for most of the services, so the resources added

226
00:14:58,540 --> 00:15:02,724
need to be consumed accordingly. And when you and that,

227
00:15:02,764 --> 00:15:06,084
there is always a lot of technical complexity around that

228
00:15:06,124 --> 00:15:09,764
area which needs to be addressed. And, and each

229
00:15:09,804 --> 00:15:14,188
application also needs to evaluate accordingly how what

230
00:15:14,236 --> 00:15:17,684
type of auto scaling and how auto scaling would have impacted

231
00:15:17,724 --> 00:15:21,156
them. Their services or applications and

232
00:15:21,260 --> 00:15:25,584
data privacy and regulatory components are also the

233
00:15:26,404 --> 00:15:30,284
future directions in which the cloud companies

234
00:15:30,364 --> 00:15:34,104
and also the cloud usage

235
00:15:35,024 --> 00:15:39,000
companies are going to or investing their research focus

236
00:15:39,072 --> 00:15:42,688
on. And as always

237
00:15:42,776 --> 00:15:46,240
with any research in computer science, a great collaboration

238
00:15:46,312 --> 00:15:49,880
is required between the industry and academia to

239
00:15:49,992 --> 00:15:53,848
drive further innovation in this particular field

240
00:15:53,896 --> 00:15:55,564
of dynamic resource allocation.

241
00:15:58,144 --> 00:16:01,640
So to conclude the talk, I want to again

242
00:16:01,712 --> 00:16:05,194
emphasize the importance of auto scaling,

243
00:16:05,234 --> 00:16:08,994
how it plays a pivotal role in the cloud

244
00:16:09,034 --> 00:16:12,914
computing landscape. Like this is almost be

245
00:16:12,954 --> 00:16:16,786
like going to be like the fundamental feature

246
00:16:16,850 --> 00:16:19,614
or aspect of cloud computing going forward,

247
00:16:20,754 --> 00:16:27,106
because that is, and also

248
00:16:27,210 --> 00:16:31,402
like the hybrid cloud is going to be the future

249
00:16:31,538 --> 00:16:35,256
of a lot of research and investment that is going to happen.

250
00:16:35,320 --> 00:16:38,488
And the, the machine learning models,

251
00:16:38,656 --> 00:16:41,816
the usage of machine learning models in coming up

252
00:16:41,840 --> 00:16:45,204
with the predictive scaling policies and

253
00:16:45,624 --> 00:16:49,072
all that is going to be like the,

254
00:16:49,128 --> 00:16:52,632
in the very near future, that is how we would be using

255
00:16:52,768 --> 00:16:56,256
AI and ML in this particular dynamic

256
00:16:56,280 --> 00:17:00,772
resource allocation and auto scaling. And this

257
00:17:00,868 --> 00:17:04,308
unlocks an unprecedented levels of efficiency and

258
00:17:04,396 --> 00:17:07,900
scalability. So like I mentioned again,

259
00:17:08,092 --> 00:17:12,260
this is going to be the most important

260
00:17:12,452 --> 00:17:16,784
cost efficient feature on the cloud computing landscape.

261
00:17:18,284 --> 00:17:22,044
Thank you everyone for attending the talk and I hope you have a great day.

