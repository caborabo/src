{"language_code": "en_us", "audio_url": "https://cdn.assemblyai.com/upload/13361d13-590d-43d8-8059-e563501e89e6", "punctuate": true, "format_text": true, "dual_channel": null, "webhook_url": null, "webhook_auth_header_name": null, "webhook_auth_header_value": null, "audio_start_from": null, "audio_end_at": null, "word_boost": ["abstractions", "applications", "arts", "business", "by", "cloud", "conf fourty two", "coupang", "from", "genai", "healthcare", "industries", "integrations", "karan khanna", "leveraging", "projected", "revolutionizing", "scalability", "technologies", "transforming", "trillion"], "boost_param": "high", "filter_profanity": false, "redact_pii": false, "redact_pii_audio": false, "redact_pii_audio_quality": null, "redact_pii_policies": null, "redact_pii_sub": null, "speaker_labels": false, "speakers_expected": null, "content_safety": false, "content_safety_confidence": null, "iab_categories": false, "custom_spelling": null, "disfluencies": false, "sentiment_analysis": false, "auto_chapters": false, "entity_detection": false, "summarization": true, "summary_model": "informative", "summary_type": "bullets_verbose", "auto_highlights": true, "language_detection": false, "speech_threshold": null, "speech_model": null, "id": "15a67400-2af1-42f6-b11a-676ae3fde0c2", "status": "completed", "error": null, "text": "Thanks for joining me here for my talk leveraging cloud abstractions to drive generative AI, scalability, efficiency and diverse applications. This talk is based on my own personal views and hopefully adds value to you. In this talk, we'll go over basics of Chenai cloud abstractions and how cloud abstractions fuel the Chenai use cases. We'll also see some of the industry transformative use cases with the advent of genai running on the shoulders of abstractions. So the content of this talk is introduction to GenAi as well as cloud abstraction, cloud abstractions by examples and then we'll switch over to how genai deployment occurs, what are the different strategies behind it, what are the different building blocks around it, how cloud abstraction benefits, and what is the cloud adoption in general in our industry? Then we'll talk about we'll specifically talk about healthcare and creative content. So direction to Gen AI Genai is generative artificial intelligence. It is a subset of deep learning that employs training on supervised, semi supervised, or even unsupervised learnings. It differs from the in the manner it operates. That is, it creates new content is no more identifying a cat, but producing a cat out of the data it was trained on. In simple terms, Genai is a kind of AI that can produce output in multiple formats like text, audio, images, animations, you name it. This is a huge leap from being able to just pattern, match, recommend or identify the objects. Genai has emerged as a transformative technology, enabling machines to create advanced context aware outputs across various domains. Some of the popular examples are Delhi, Chatgpt, Gemini, Firefly, next, lithium. In our talk it is really important to understand do they deploy? So let's start with foundational models, also known as FM's. So foundational model is an AI neural network trained on huge raw data, generally with unsupervised learning that can be adapted to accomplish a broad range of tasks. It is a multimodal in nature, meaning it can interact from text to text, text to or any other combination. GPT clip next is LLM. LLMs are subset of foundational models, but they are specifically trained on a large neural language data set. They are specifically designed for generating human language based use cases. Train model the train model is the instance of model which includes learn parameters and weights. This is a crucial component. This is the model which generates new content based on different conditions. The next building block is inference code. This is typically a bridge between model and your application. This handles interaction with the train model. It manages input processing, encoding, decoding and even managing the generation process. This component ensures that the user applications can effectively building block in GenaI would be data pipelines. Those pipelines are required for pre processing input data or formatting the output data. These pipelines ensure that the input data is correctly formatted. Next we have to send and receive in form of web or app layer. This allows application to send request which would be text prompts or image conditions and receive generated outputs that would be generated text images or generated text itself in response. A simple example would be Delhi where you go and you prompt and then you get the output back. So Delhi would have a API running or the UI running to process your request. Other example could be moving now to the what is cloud abstractions? Well, cloud abstractions are the mechanisms to hide the internal and complex detail of infrastructure where somehow cloud abstractions empower running of services. Application bad job. Streaming models consider the abstraction as a filter to put away the complex detail asides to be able to see. Now there are different types of established abstractions which have been in our industry since few years now. Those are infrastructure as a service, platform as a service, software as a service and function as a service. The last one is the latest entry into the field of extractions. It is also known as serverless computing. We will talk about these all entities, but let's talk about them in a real world analogy. We can relate to it quickly. I'm pretty sure everybody has gone through the pain of buying a house or renting a room. So probably this. Let's start with infrastructure as a service. Infrastructure as a service is a foundational abstraction where the tier zero resources like virtual machines, storage, disk network bandwidth, etcetera provided to you. You don't have to build your own data center to get those. That's the idea behind it. Someone like Amazon or Google or Oracle will provide these resources to you so that you ec two Google compute engine Azure. Compare this to the land you get from a builder so that you don't have to do all the work of identifying the land going through different regulatory in order to build your home. You just out of the box, you get the land and you start building your own home on top of it. That would be example of iis. The next layer would be PaaS or the platform as a service which offers a managed platform for deploying applications without the need to manage the underlying infrastructure. You don't need to set up your own subnet or routing or firewalls if you operate on PaaS. Example would be Heroku. Let's say that you're not building homes, you don't just want the land, but you also want a home. And you're thinking to probably use your expertise in up leveling the rooms, right? But there could be times where you don't hide to build the room. You can customize your room, but you're not interested in building your room or building a house or getting a land. So that is something which is known as SAS software as a service. Shopify HubSpot are common examples of it. SAS provides capabilities to companies and developers so that they can focus on their product and they can build their product on a manage. You might have heard about function as a service or as I mentioned, serverless computing. This is the latest entry in abstractions where you just get the room, rent a room, and so it's basically serverless computing where you're in your full application, you can execute your functionality and run that functionality on an existing server. For example Google cloud functions or Amazon Lambda example could be trigger based counter which when there is a. When there is a. Okay, now you have seen some narrative about cloud abstractions and what are those? Let's move on to the so what is Genai deployment story? Like any other distributed system, Genai system is a combination of different components in order to ensure the use case is being served. When you go to chat GPT, for example, when you enter any text prompt, it doesn't give you the answer by itself. It actually has a lot of revolving pieces that is needed there to empower that. So some of the, some of the building blocks we have talked about it would be models, inference code, data pipelines, web services, and there are few behind the scene which would be monitoring and alerting some of the infrastructure pieces like load balancer gateways, auto scaling groups, some of the integration services, CICD and some of the regulatory and security gates. So if you closely see there are numerous components behind Genai and we need to deploy that, let's see how those are being deployed. Various ways or strategies to deploy these components we talked about in previous slide in order to have an end to end gen capable system, there are three major deployment strategies. First would be in house or private deployment. Second would be hybrid deployment. The third or the one is SAS deployment. So the in house deployment is basically gives you end to end control, but it also involves managing everything on your own. And different organizations could choose different ways of deploying this depending upon the requirement, regulatory requirement, data privacy requirement and their resources. But a common theme which we will try to extract from all three would be that the cloud based deployments are a common theme across the industries. So in house deployments basically means that, you know, having the foundational models, the LLMs, everything in house in your own data centers, running everything in house, including the app, including the service layer. And that requires a lot of resources, computational resources as well as expertise. Example would be generative AI system in the autonomous driving, which few car companies have done on their own. They're using Nvidia system for training and inference. And that's obviously even if you go this route of private deployment, most of the organization which are doing this would have some kind of orchestration tools to manage the resources and provide the rights of sections. Maybe they are using Tupperware, maybe they're using Borg or Kubernetes or just Mesos, but they have some kind of empower this. A recent example would be a healthcare provider could develop a Genai powered medical assistant website in house, leveraging their own FM's and LLMs to provide personal patient support. This approach allows for complete control of sensitive patient data and ensures regulations. The other use case I confuse defense where there would be a stricter next is hybrid deployment. In hybrid deployment, organizations can choose to use third party or openly available models, be it foundational models or pre trained models or even pre trained APIs to bootstrap their applications to use them. The application code could still be in house while some of the models may be in the cloud. Hence the hybrid model libraries such as model Garden from Google is one of the example where you actually have the offering to choose whatever model you would like as per your resource. There are advanced offerings in this field, for example vertex, AI or sagemaker where you get not only the model but end to end platform which empowers you to get services from exters. Example would be many organizations would opt for a hybrid approach using pre built GenAi services like OpenAI GPT-3 to accelerate development and reduce cost. This approach allows companies to focus on their core competencies while benefiting from the so this hybrid deployment could be applicable to most of the use cases today where the regulatory running application in house or managed services like Google or AWS. In a hybrid model also the organizations will have to basically use some of the abstractions with the flexibility they can actually as needed. Next would be the SAS deployment. In this deployment the clients get access to variety of models, variety of tools, variety of tools to tune the models and also automated to production lies. The models can also be same or different cloud, so no need of running in house anything. So that would be example of SAS deployment. A lot of cloud vendors who are providing these abstractions. They are right now providing it with right controls, be it GDPR or any other regulatory. Google AI studio is one such example. The low or no code deployment model is the new entry in this abstraction field where it is an extension of SAS deployment where you just don't need to even write the code and you drag and drop. So you drag and drop your features and you have the funnel. There are app builder solutions which are 100% in cloud which gives the apps without knowing how to write the code. Chatbots Knowledge systems these are the common use cases for this type of now that we have seen different type of deployment strategies, let's see how cloud abstractions benefit genai underneath. So in all the different ways of genai deployment strategies we have seen, there is a need to manage the resources. Even if you run on Amazon or your own data center, you can't burn your resources. So the cloud abstractions provide you efficient resources. They focus on reducing waste and giving you the best ROI. By leveraging, for example, by leveraging serverless computing and auto scaling capabilities, organizations or companies can ensure that their Jennifer system can handle spikes or varying workloads. So be it any model you need beat any model or deployment, there is a clear need to manage the allocation and utilization, and that cloud abstraction provides it. The next benefit of cloud abstraction to genai use cases would be streamlined processes. So cloud abstractions empower the standardization of pipelines, be it CI continuous integration, continuous deployment. They also provide with the streamline the agility, the much needed agility in order to move quickly with a rapid piece scalability. So the cloud abstractions ensure that the scalability and the quality of user experience is always there. Cloud restrictions allow Genai systems to scale seamlessly, accommodating growing user bases or ensuring a consistent quality of experience. By leveraging the global and high speed networks, organizations can deliver low latency or even a full scale application or even a viral use case. Sagemaker was used to scale a Genai based content recommendation system. The scale was not less, it was millions of users and gaining the performance and reliability. There are other numerous other benefits to the cloud abstraction which we have not discussed, for example, segregation and high availability. The no code model, for example, utilizes the abstraction underneath to empower a user to safely create an app using drag and drop. The JNA studio places the right controls to choose the safe models and mitigate the risk in doing so. So the existing and established offerings like monitoring, auto scaling, alerting, those are the results of already established abstractions, something that we let's move forward with the current state option and kubernetes. So most of the organizations deploy some piece of cloud native technologies today and one of them in general. Cloud adoption is essential for managing and scaling Jennair workloads. Cloud abstractions play a crucial role in your scalability. Genai is a transformative technology and it is definitely inspiring industry transformations. I am pretty sure we cannot discuss every industry here, so we will focus on creative content. Jennia is also inspiring new growth opportunities and paving the way. So healthcare transformation, let's talk about it. Healthcare is a field where the regulatory concerns would be very high due to sensitive data. But this is also one of the fields which requires innovative the most. For example, Clara it's a genii tool in healthcare. It reduces the phone interaction by 50%. That means that no longer you have to be on the call hourly call to get some help. This increases the user experience privacy. This has led to new and improved outcomes and it has also helped streamline the healthcare processes. Overall, Genai has a very positive transformation. Cloud the next industry which has seen the most impact after healthcare is creative content with AI driven tools like Delhi or Adobe Firefly. The way you could create an image or audio has changed. Generation of digital artwork has improved miles and miles. Now more and more individuals are exploring these tools, expressing their artistic creativity. This has also made the content creation future potential of Genai is very positive with cloud technologies. They both drive innovation and accessibility. There is a symbiotic relationship and cloud abstractions. It unlocks new possibilities and increases trees. We will reiterate that there is a symbiotic relationship between genai and cloud abstractions. Cloud abstractions are essential enablers for deploying managing your geni workloads. They provide necessary scalability, they ensure efficiency, they support diverse applications. Streamlining the processes the future of Jennia is closely tied to continued evaluation. With that, thank you.", "words": [], "utterances": null, "confidence": 0.906551654757427, "audio_duration": 1359.0, "webhook_status_code": null, "webhook_auth": false, "summary": "- In this talk, we'll go over basics of Chenai cloud abstractions. We'll also see some of the industry transformative use cases. This talk is based on my own personal views and hopefully adds value to you.\n- Genai is a subset of deep learning that employs training on supervised, semi supervised, or even unsupervised learnings. Can produce output in multiple formats like text, audio, images, animations. Has emerged as a transformative technology, enabling machines to create advanced context aware outputs across various domains.\n- Cloud abstractions are the mechanisms to hide the internal and complex detail of infrastructure where somehow cloud abstractions empower running of services. There are different types of established abstractions which have been in our industry since few years now. The latest entry into the field of extractions is serverless computing.\n- Like any other distributed system, Genai system is a combination of different components in order to ensure the use case is being served. There are three major deployment strategies. First would be in house or private deployment. Second would be hybrid deployment. Third or the one is SAS deployment.\n- The other use case I confuse defense where there would be a stricter next is hybrid deployment. In hybrid deployment, organizations can choose to use third party or openly available models. The application code could still be in house while some of the models may be in the cloud.\n- The next benefit of cloud abstraction to genai use cases would be streamlined processes. Cloud restrictions allow Genai systems to scale seamlessly. Cloud adoption is essential for managing and scaling Jennair workloads. Jennia is inspiring new growth opportunities and paving the way.\n- Next industry which has seen the most impact after healthcare is creative content with AI driven tools like Delhi or Adobe Firefly. There is a symbiotic relationship between genai and cloud abstractions. Streamlining the processes the future of Jennia is closely tied to continued evaluation.", "auto_highlights_result": {"status": "success", "results": [{"count": 16, "rank": 0.08, "text": "cloud abstractions", "timestamps": [{"start": 26796, "end": 28068}, {"start": 43484, "end": 44676}, {"start": 45292, "end": 46092}, {"start": 63484, "end": 64644}, {"start": 303880, "end": 305044}, {"start": 306520, "end": 307416}, {"start": 315784, "end": 316712}, {"start": 545928, "end": 547080}, {"start": 977744, "end": 979244}, {"start": 1000860, "end": 1002024}, {"start": 1048894, "end": 1050078}, {"start": 1070738, "end": 1071810}, {"start": 1184404, "end": 1185764}, {"start": 1324114, "end": 1325334}, {"start": 1334418, "end": 1335534}, {"start": 1335994, "end": 1337394}]}, {"count": 1, "rank": 0.07, "text": "Chenai cloud abstractions", "timestamps": [{"start": 42068, "end": 44676}]}, {"count": 2, "rank": 0.07, "text": "cloud abstractions empower", "timestamps": [{"start": 315784, "end": 317200}, {"start": 1048894, "end": 1050646}]}, {"count": 1, "rank": 0.06, "text": "trained models", "timestamps": [{"start": 789512, "end": 790112}]}, {"count": 4, "rank": 0.06, "text": "foundational models", "timestamps": [{"start": 167484, "end": 168956}, {"start": 198194, "end": 199454}, {"start": 691004, "end": 692092}, {"start": 787800, "end": 788888}]}, {"count": 1, "rank": 0.06, "text": "Google cloud functions", "timestamps": [{"start": 529926, "end": 531022}]}, {"count": 2, "rank": 0.06, "text": "established abstractions", "timestamps": [{"start": 330822, "end": 332094}, {"start": 1157224, "end": 1158920}]}, {"count": 3, "rank": 0.06, "text": "Train model", "timestamps": [{"start": 211994, "end": 213094}, {"start": 213730, "end": 214474}, {"start": 236490, "end": 237322}]}, {"count": 1, "rank": 0.06, "text": "cloud technologies", "timestamps": [{"start": 1316482, "end": 1317654}]}, {"count": 1, "rank": 0.06, "text": "model Garden", "timestamps": [{"start": 805316, "end": 806692}]}, {"count": 1, "rank": 0.06, "text": "Streaming models", "timestamps": [{"start": 320430, "end": 322074}]}, {"count": 1, "rank": 0.06, "text": "Genai deployment story", "timestamps": [{"start": 552624, "end": 554072}]}, {"count": 2, "rank": 0.06, "text": "Cloud adoption", "timestamps": [{"start": 80854, "end": 81662}, {"start": 1178716, "end": 1180068}]}, {"count": 1, "rank": 0.06, "text": "Cloud restrictions", "timestamps": [{"start": 1077594, "end": 1078642}]}, {"count": 1, "rank": 0.06, "text": "cloud vendors", "timestamps": [{"start": 915280, "end": 916208}]}]}, "content_safety_labels": null, "iab_categories_result": null, "chapters": null, "sentiment_analysis_results": null, "entities": null}