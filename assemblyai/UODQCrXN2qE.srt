1
00:00:23,720 --> 00:00:27,958
Hi everyone, I'm really glad to be here. I'm Carlos Boschen.

2
00:00:28,006 --> 00:00:31,926
I'm a research software engineer at the Netherlands ESI center.

3
00:00:32,030 --> 00:00:36,014
In this talk, I will give you an overview about QC

4
00:00:36,054 --> 00:00:40,126
two, a modular open source software for quantum chemistry

5
00:00:40,230 --> 00:00:43,678
with quantum computers. Before going on,

6
00:00:43,726 --> 00:00:47,286
I will be giving you an overview about my organization.

7
00:00:47,430 --> 00:00:51,582
The Netherlands Escience center is the center of spurges

8
00:00:51,718 --> 00:00:54,950
in research software in the Netherlands and we

9
00:00:54,982 --> 00:00:58,982
are founded by the dutch research Consumpt and Discernment.

10
00:00:58,998 --> 00:01:02,830
The Netherlands Design center is a center around two

11
00:01:02,862 --> 00:01:06,374
main ambitions, and the first one, we work

12
00:01:06,454 --> 00:01:10,606
with researchers collaboratively to develop open

13
00:01:10,670 --> 00:01:13,950
source research software, and this is done

14
00:01:14,062 --> 00:01:18,714
via open call or even external projects.

15
00:01:19,254 --> 00:01:23,314
In the second ambition, we build and seek to provide

16
00:01:23,434 --> 00:01:26,690
digital expertise for researchers in the

17
00:01:26,722 --> 00:01:30,614
Netherlands. And for this we also provide workshops

18
00:01:31,034 --> 00:01:35,090
hanging from basic to intermediate python, good practices

19
00:01:35,162 --> 00:01:39,330
in software engineered and also more involved topics like

20
00:01:39,402 --> 00:01:42,730
the CudA program and QC two is

21
00:01:42,762 --> 00:01:45,714
a direct outcome of one of such projects,

22
00:01:45,794 --> 00:01:50,070
QC for QC, which is collaborative effort between

23
00:01:50,142 --> 00:01:55,074
the Netherlands Design center surf and a full Amsterdam.

24
00:01:55,614 --> 00:01:59,286
The main objective of this project was to develop a

25
00:01:59,310 --> 00:02:02,838
dedicated software that I'll be reviewing here as UC

26
00:02:02,886 --> 00:02:06,974
two to facilitate the interoperability between

27
00:02:07,094 --> 00:02:11,110
traditional quantum chemistry codes and byted

28
00:02:11,222 --> 00:02:14,750
quantum computing libraries, essentially to facilitate

29
00:02:14,822 --> 00:02:19,074
users to perform quantum chemistry calculations using quantum

30
00:02:19,114 --> 00:02:23,810
computers. Quantum chemistry may be abused in various contexts

31
00:02:23,882 --> 00:02:26,922
and show several bases as well.

32
00:02:27,058 --> 00:02:30,842
So there are researchers that are interested in you study

33
00:02:30,938 --> 00:02:35,494
a very big systems, for example like the folding octane.

34
00:02:35,834 --> 00:02:39,346
And for this system, because they are so big, the researchers

35
00:02:39,410 --> 00:02:42,938
have to rely on very push made

36
00:02:43,066 --> 00:02:46,254
mathematical or physical models, for example,

37
00:02:46,374 --> 00:02:50,286
relying on classical mechanics. For other medium

38
00:02:50,390 --> 00:02:54,198
sized systems, we can indeed apply some

39
00:02:54,286 --> 00:02:58,438
formally, physically, mathematically sound quantum

40
00:02:58,526 --> 00:03:01,854
mechanical or chemistry methods like the

41
00:03:01,894 --> 00:03:05,206
density functional. But it is for

42
00:03:05,230 --> 00:03:09,294
these molex systems that we so far can apply

43
00:03:09,374 --> 00:03:13,112
or test the most accurate state of the art

44
00:03:13,208 --> 00:03:17,232
quantum chemistry and quantum mechanical models. And these are

45
00:03:17,288 --> 00:03:20,824
the ones that UC two is currently dealing with

46
00:03:20,944 --> 00:03:24,848
and that are focused during this presentation.

47
00:03:25,016 --> 00:03:28,680
Atoms and molecules are indeed true manifestation

48
00:03:28,752 --> 00:03:32,384
of quantum offsets and they show discrete

49
00:03:32,464 --> 00:03:35,920
characterized by discrete energy levels that

50
00:03:35,952 --> 00:03:39,430
are actually the discrete spectrum of

51
00:03:39,462 --> 00:03:42,434
the corresponding molecular hamiltonian.

52
00:03:42,854 --> 00:03:47,254
And this can be naturally described by solving the corresponding Schrodinger

53
00:03:47,294 --> 00:03:51,646
equation that I show here in a very simplified form.

54
00:03:51,710 --> 00:03:56,102
So as you can see here, this is an eigenvalue problem where

55
00:03:56,158 --> 00:04:00,590
a is the molecular hamiltonian, c is the corresponding

56
00:04:00,702 --> 00:04:04,270
wave function of your system that completely describe

57
00:04:04,422 --> 00:04:08,798
describes your target molecule, and e is associated

58
00:04:08,886 --> 00:04:12,654
discrete energy associated with this wave

59
00:04:12,694 --> 00:04:16,486
function. Unfortunately, this equation can only be solved

60
00:04:16,550 --> 00:04:20,078
exactly for one electron systems, for example,

61
00:04:20,126 --> 00:04:23,806
like the hydrogen atom, and for all other atoms

62
00:04:23,830 --> 00:04:27,790
and molecules. We must rely therefore on approximate

63
00:04:27,982 --> 00:04:31,848
mathematical and physical models that seem only to

64
00:04:31,896 --> 00:04:35,088
approximate the exact solution of the Schrodinger

65
00:04:35,136 --> 00:04:39,552
equation. Perhaps among the most popular strategies

66
00:04:39,688 --> 00:04:43,360
to perform these approximate solutions in quantum

67
00:04:43,392 --> 00:04:47,752
chemistry, and perhaps also in quantum mechanics, is by researching

68
00:04:47,848 --> 00:04:51,192
through the so called variational principle. And here,

69
00:04:51,288 --> 00:04:55,868
the unknown wave function of your system is approximately

70
00:04:55,976 --> 00:04:59,524
given as a linear combination of

71
00:04:59,604 --> 00:05:03,588
known basis functions, and the corresponding coefficients

72
00:05:03,716 --> 00:05:07,244
are then obtained in a variational manner

73
00:05:07,284 --> 00:05:11,036
in such a way to minimize as much as possible the

74
00:05:11,100 --> 00:05:14,984
energy or the ground state or most stable energy of the system.

75
00:05:15,284 --> 00:05:19,300
Essentially, when they are resorting to the quantum chemistry

76
00:05:19,452 --> 00:05:22,904
method based on the variational principle,

77
00:05:23,004 --> 00:05:27,160
your classical computers are essentially trying

78
00:05:27,272 --> 00:05:31,844
to diagonalize very large, very rude matrices

79
00:05:32,464 --> 00:05:36,296
and in such a way as to obtain a diagonal matrix

80
00:05:36,440 --> 00:05:39,656
containing the corresponding eigenvalue energy

81
00:05:39,720 --> 00:05:43,880
values of your ground state or even excited state systems.

82
00:05:43,992 --> 00:05:48,112
This process consists certainly the computational bottom

83
00:05:48,168 --> 00:05:51,804
end of classical computers. So, just to give you here

84
00:05:51,844 --> 00:05:55,492
some idea, one of the prime or

85
00:05:55,588 --> 00:05:59,268
most accurate methodologies to perform high degron

86
00:05:59,316 --> 00:06:03,220
state or even side state energies, show exponential

87
00:06:03,332 --> 00:06:07,636
complexity in relation to the number of

88
00:06:07,700 --> 00:06:10,624
the electrons containing your target system.

89
00:06:11,324 --> 00:06:15,296
Okay, now that you have overhauled idea on how we approach quantum

90
00:06:15,420 --> 00:06:18,656
chemistry using classical computer,

91
00:06:18,800 --> 00:06:22,592
let's try to then approach start approaching how

92
00:06:22,688 --> 00:06:27,224
we use then quantum chemistry and quantum

93
00:06:27,264 --> 00:06:30,720
computing to also perform oplasmate solutions

94
00:06:30,832 --> 00:06:34,384
through this Schrodinger equation. In the noisy intermediate

95
00:06:34,464 --> 00:06:38,248
scale quantum theorem, quantum chemistry is traditionally

96
00:06:38,376 --> 00:06:41,800
approached, and approximate solutions

97
00:06:41,872 --> 00:06:45,892
to this Schrodinger equation are traditionally approached

98
00:06:45,948 --> 00:06:49,516
using hybrid quantum classical algorithms

99
00:06:49,660 --> 00:06:53,012
like the variational quantum eigen solver, in which

100
00:06:53,068 --> 00:06:57,076
QC two and several other Python quantum computing libraries

101
00:06:57,140 --> 00:06:59,504
are primarily based on.

102
00:06:59,884 --> 00:07:03,924
As you may know, in this algorithm, we start with a set

103
00:07:03,964 --> 00:07:07,676
of qubits in specific or

104
00:07:07,700 --> 00:07:11,016
initial states, and to this we apply a

105
00:07:11,040 --> 00:07:14,960
variational form that contains a series of quantum

106
00:07:14,992 --> 00:07:18,512
gates that depend on certain rotational

107
00:07:18,608 --> 00:07:22,240
qubit rotation parameters. If this parameterized quantum

108
00:07:22,272 --> 00:07:25,696
cpu and associated appropriate form of

109
00:07:25,720 --> 00:07:29,424
the molecular amygdala, we are then able to measure the

110
00:07:29,464 --> 00:07:33,648
spectation values, or in simple words, the energy of

111
00:07:33,696 --> 00:07:36,962
the molecular system that depends on the

112
00:07:37,018 --> 00:07:40,490
circuit parameters. This is obviously

113
00:07:40,522 --> 00:07:43,882
a cost function that we can be optimized.

114
00:07:44,018 --> 00:07:48,330
We're sorting to, or using an external classical optimizer

115
00:07:48,442 --> 00:07:52,522
that will then guess the best meters which

116
00:07:52,578 --> 00:07:56,434
to evaluate the circuit. So this process continues

117
00:07:56,554 --> 00:08:00,074
on and on until we obtain via convergence,

118
00:08:00,154 --> 00:08:04,120
the lowest possible energy of your system. I'm not

119
00:08:04,152 --> 00:08:08,632
going deep into details, but I just would like to let

120
00:08:08,648 --> 00:08:13,016
you know that UC two and any VQE algorithm need

121
00:08:13,120 --> 00:08:16,792
some initial information to start with

122
00:08:16,928 --> 00:08:20,392
and when we are talking about quantum chemistry, this initial

123
00:08:20,448 --> 00:08:24,624
information can only be done by running or by resorting

124
00:08:24,744 --> 00:08:28,648
before that traditional quantum chemistry

125
00:08:28,696 --> 00:08:32,310
goals. This will supply information like

126
00:08:32,382 --> 00:08:36,502
those needed, for example the buildup of the reference

127
00:08:36,598 --> 00:08:40,234
quantum circuit, and also some physical information

128
00:08:41,094 --> 00:08:44,510
that will be later on or physical quantities that will

129
00:08:44,542 --> 00:08:47,750
be later on be used to build up

130
00:08:47,822 --> 00:08:51,646
the molecular amygdalin in qubit representation.

131
00:08:51,830 --> 00:08:56,586
It's obvious that we need to provide a proper variational form

132
00:08:56,770 --> 00:09:00,722
or sats that will be used

133
00:09:00,898 --> 00:09:04,522
and in compunction chemistry it is very traditional

134
00:09:04,658 --> 00:09:08,898
to use physically motivated and satsy like

135
00:09:08,946 --> 00:09:12,334
those derived from dario couplet.

136
00:09:13,034 --> 00:09:17,482
Just to give you some overview here of the core design principles

137
00:09:17,538 --> 00:09:21,746
of QC two. QC two has been primarily designed

138
00:09:21,810 --> 00:09:25,734
to leverage existing tools and are as I'll be discussing

139
00:09:25,774 --> 00:09:29,422
later on the next slide, it uses very

140
00:09:29,478 --> 00:09:33,318
popular quantum chemistry python libraries like atomic

141
00:09:33,406 --> 00:09:37,302
simulation environment calculators and also standard

142
00:09:37,398 --> 00:09:40,878
data schemas to offload the necessary

143
00:09:40,966 --> 00:09:45,030
information. Initial information to build that deep start

144
00:09:45,142 --> 00:09:49,310
the quantum algorithm. Also, the CGU has

145
00:09:49,342 --> 00:09:52,904
decided to smoothly integrate with popular quantum

146
00:09:52,944 --> 00:09:56,768
computing libraries like Qskit, Nature and Benellan

147
00:09:56,816 --> 00:10:00,416
Qgan. QC two is also designed to be

148
00:10:00,520 --> 00:10:03,968
highly modular and features are built in algorithm

149
00:10:04,016 --> 00:10:07,936
package that is designed also to make

150
00:10:07,960 --> 00:10:11,704
it easier any extension and advancements

151
00:10:11,784 --> 00:10:15,384
individually. It's also very user friendly and

152
00:10:15,424 --> 00:10:19,344
has a very intuitive interface. As I'll be discussing

153
00:10:19,384 --> 00:10:23,084
later on, that enables users to

154
00:10:23,124 --> 00:10:26,836
focus on that research, obviously with minimal technical

155
00:10:26,980 --> 00:10:31,228
things. Here just give you an overview also of the workflow

156
00:10:31,316 --> 00:10:34,956
of QC two, as you can see here. For example, QC two

157
00:10:35,020 --> 00:10:39,180
uses Python bindings or custom

158
00:10:39,292 --> 00:10:43,436
atomic simulation environment calculators that run

159
00:10:43,580 --> 00:10:47,470
on the back behind the curtains your previewed

160
00:10:47,582 --> 00:10:50,822
quantum gems three program. This will then

161
00:10:50,918 --> 00:10:55,806
the SCE will then get the relevant information and

162
00:10:55,870 --> 00:10:59,750
save this into formatted data files that will

163
00:10:59,782 --> 00:11:03,662
be later on read by QC two. For example

164
00:11:03,758 --> 00:11:07,234
to build up Erb zeros, quantum circuit

165
00:11:07,774 --> 00:11:11,398
Er, molecular hamiltonian incubate representation,

166
00:11:11,486 --> 00:11:14,604
and also instantiate algorithm classes

167
00:11:14,724 --> 00:11:18,700
that will then be run using Qscape nature and penny lane

168
00:11:18,732 --> 00:11:22,828
QK. Here I just give you a very minimal

169
00:11:22,916 --> 00:11:26,612
minimal input of QC two to perform

170
00:11:26,708 --> 00:11:29,384
a CQE calculation on water.

171
00:11:29,844 --> 00:11:33,784
So as you can see here, after importing some important modules,

172
00:11:34,604 --> 00:11:38,224
the key aspect of QC two here starts with

173
00:11:39,174 --> 00:11:42,494
of its QC two data class that

174
00:11:42,534 --> 00:11:46,054
will contain information about the target system that

175
00:11:46,094 --> 00:11:49,550
we want to deal with and also provide a

176
00:11:49,582 --> 00:11:53,398
file name in which will be all the output of the calculation

177
00:11:53,526 --> 00:11:57,558
will be saved and might be also used to restart

178
00:11:57,646 --> 00:12:01,086
a new calculation the second step here is

179
00:12:01,110 --> 00:12:04,654
to specify and run an appropriate custom QC

180
00:12:04,694 --> 00:12:08,850
two is ase calculation calculator for

181
00:12:08,882 --> 00:12:11,986
your refuted quantum camp SQL. Here I'm

182
00:12:12,010 --> 00:12:15,774
just using the one from Byscf.

183
00:12:16,314 --> 00:12:20,682
Here we need to instantiate the corresponding algorithm class

184
00:12:20,818 --> 00:12:24,690
that will also be run afterwards. And that's

185
00:12:24,722 --> 00:12:27,614
it. Very simple and very straightforward.

186
00:12:28,434 --> 00:12:32,106
Here also I show another input which now uses

187
00:12:32,170 --> 00:12:35,658
or performs an ortho optimized VQE

188
00:12:35,706 --> 00:12:39,914
calculation, which is extension of VQE

189
00:12:40,034 --> 00:12:43,218
in which we are not only here optimizing

190
00:12:43,386 --> 00:12:47,874
the circuit parameters, but also allowing the initial molecular

191
00:12:47,914 --> 00:12:51,554
orbitals to be relaxing throughout

192
00:12:51,594 --> 00:12:54,426
the calculation. And as you can see here,

193
00:12:54,530 --> 00:12:58,762
the structure of the boot is exactly the same. The only difference

194
00:12:58,818 --> 00:13:02,076
here that we are now instantiating corresponding

195
00:13:02,140 --> 00:13:06,544
o VQE class. And this certainly reflects

196
00:13:06,964 --> 00:13:10,772
the modularity of juice in which we can play

197
00:13:10,828 --> 00:13:15,004
around with some blocks or some pieces and

198
00:13:15,044 --> 00:13:19,104
maintain the same structure of the input.

199
00:13:19,444 --> 00:13:23,740
Finally, I just show here some representative benchmark results

200
00:13:23,892 --> 00:13:27,824
using these qc two input examples.

201
00:13:28,504 --> 00:13:33,044
And here I show the ground state energy convergence

202
00:13:33,784 --> 00:13:37,688
of water in its equilibrium structure as obtained

203
00:13:37,736 --> 00:13:41,608
with qc two using CQE algorithm and

204
00:13:41,656 --> 00:13:45,284
ortho optimized VQe or oofqe

205
00:13:45,864 --> 00:13:50,144
using also qcg. Also here I show the expected

206
00:13:50,304 --> 00:13:54,540
convergent energies of ground state water as

207
00:13:54,572 --> 00:13:58,724
obtained using traditional quantum chemistry methods.

208
00:13:58,884 --> 00:14:02,660
And as you can clearly see here, the OVQE energy

209
00:14:02,772 --> 00:14:07,044
is financially well below the corresponding VQE

210
00:14:07,084 --> 00:14:10,732
as expected, right? And converges quite

211
00:14:10,788 --> 00:14:14,756
nicely and is nearly exactly to the traditional

212
00:14:14,860 --> 00:14:17,944
energy obtained using gas SES.

213
00:14:18,484 --> 00:14:22,426
So just, just a final remark. QC two

214
00:14:22,530 --> 00:14:26,490
is an ever growing open source project that is constantly

215
00:14:26,602 --> 00:14:31,154
being enriched by new algorithms and new features.

216
00:14:31,194 --> 00:14:34,906
And as an open source software we are warmly welcome

217
00:14:35,010 --> 00:14:38,186
any type of contribution, either if

218
00:14:38,210 --> 00:14:42,226
it's uncommon, new ideas, new approaches,

219
00:14:42,290 --> 00:14:45,882
or even folks. And here I put the link,

220
00:14:46,018 --> 00:14:49,730
full link of QC two GitHub free to go and

221
00:14:49,762 --> 00:14:53,066
visit and make your contribution. And thank

222
00:14:53,090 --> 00:14:56,290
you very much for inviting me and I wish you all

223
00:14:56,362 --> 00:14:59,654
an amazing Confi 42 quantum computing

224
00:15:00,034 --> 00:15:01,434
congressional.

