{"language_code": "en_us", "audio_url": "https://cdn.assemblyai.com/upload/a4892a3e-da24-4a6e-999c-15d5559306f2", "punctuate": true, "format_text": true, "dual_channel": null, "webhook_url": null, "webhook_auth_header_name": null, "webhook_auth_header_value": null, "audio_start_from": null, "audio_end_at": null, "word_boost": ["alexandre evangelista de souza", "bot", "but", "can", "ceo founder", "chats", "conf fourty two", "golang", "indev web", "javascript", "langchain", "llm", "using"], "boost_param": "high", "filter_profanity": false, "redact_pii": false, "redact_pii_audio": false, "redact_pii_audio_quality": null, "redact_pii_policies": null, "redact_pii_sub": null, "speaker_labels": false, "speakers_expected": null, "content_safety": false, "content_safety_confidence": null, "iab_categories": false, "custom_spelling": null, "disfluencies": false, "sentiment_analysis": false, "auto_chapters": false, "entity_detection": false, "summarization": true, "summary_model": "informative", "summary_type": "bullets_verbose", "auto_highlights": true, "language_detection": false, "speech_threshold": null, "speech_model": null, "id": "f9952594-17e3-4adc-961b-8bd1d3bad4ce", "status": "completed", "error": null, "text": "Hi everyone, today I will talk about length shingle. First let's do it myself. My name is Alessio Majelista. I live in Brazil and I am skilled in node, JS, Python, Php, NGo. What is Langchango? Langchango is a part or fork of LangChain. So this document is new and not decomplete. You can use linko with it lemma. It's very simple. This simple is here I'll open AI, you have example. If you can use it with OpenAI Mistro this is a new victory. Have some agents memories models about where it says use local is not completely documentation and in GitHub you can see the preview of new victories like Marita ki. This model from Brazil individual is some place I don't know and heavy memory adds accurations and other features here perplexity. So why can't use this for using you can use vector, stars, properties, document loaders for Reggie agents, LMS, exchanges, link have integrations with OpenAI, Polyama, Mix, Row, Google AI, LMA, CPp, LMA file, Nvidia, Perplex and Whisper is coming for let's write a code with langchango. First you need the import some packages. After this and my main method you have the new instance of OpenAI. For example I can use open AI and I use call function. This function is very simple because I set the syntax, my context and a prompt. A simple prompt you can use temperature for default is default is six and you can use the stopworks or not. Default is empty. Around this the first man to walk on the moon has nail because the next work is Aristotle. When used lengthango you can do integration on other APIs like OpenAI schema we have integration with Grok. It's very very simple. I set model, I set token and base rail. The code is equal above the difference is options parents. Then I have new OpenAI context call methods. I run this. The first main to walk on the mob has neo. Okay I can use with envision two when using Vg like an API you can't use AMD. So if you use Nvidia you can't use MD for rag. Okay I set by Israel model token run this. The output is here. This example I use something different like I use message content. The type system is system and shaft message type woman is user. I use content generate content sorry. And I set with maxtoken and I use stream funk. This functions return and show here. So now I show for you when you can use langchango with reg. Now I will show for you how use language for rag applications. How does it work? First you need to load the document of rpdfe or test file or database. You do split for this document save in vector star do a revade split or carry and then use prompt send for lms. It's very simple. Okay for example you need to use some packages like vector store. I'm using quidrant for example but you can you you could use the pipe or pages vector store and agent chains document loader images OpenAI for example I use this OpenAI because I want to use the Nvidia but Nvidia this dot heavy images for this version of ncingo schemas attach the splitter and vector star hydrogen the first step I need to get my file this case PDF file and create split for document. For this I create the function PDF text around this this function get a PDF and split for docs schemas okay I am using the leaderpress PDF I run this I have a first document is here okay this function get the content and send for kidrange cloud I am set URL API key collection name aimed if I run this one time and save one time if I run this two time the save two time okay for use with PDF text and save in my store when I release this message send this doc for credential after this I can use for carries I run this and output it is how I can search without save again I create a new method I remove this called store add document so I create query send for credit and get results. My new method is here has star this method not have add document so here I can I have the I can add documents because I have added documents okay in next function I remove disclose so disclose I get to only hidden instance and return my vector store release then my full code for this verizon line shango version is 10 you need set model don't use default model don't use MSD default model because in this version having default values I create a new OpenAI I create my new ember so apnei can't have it. If I use any video I can't use this I set my vector star square this seven use new function has stored because I don't want to send again the doc for quadrant I need only vectorstore instance so my search card what is sbn book and send this for kidrant I get this docs and use agents for send if my prompts for agent initialize alum new and use agent conversation react description my context exam and I get h docs and add in my context. My prompt is very simple, my context regression. I use my temperature zero dot h and use chains for ROM. Run this and my response is the ESPN number is here. Very simple, very easy. Thank you for watching. I see you next.", "words": [], "utterances": null, "confidence": 0.803244973488866, "audio_duration": 751.0, "webhook_status_code": null, "webhook_auth": false, "summary": "- Langchango is a part or fork of LangChain. Can use vector, stars, properties, document loaders for Reggie agents, LMS, exchanges, link have integrations with OpenAI, Polyama, Mix, Row, Google AI. When used lengthango you can do integration on other APIs like OpenAI.", "auto_highlights_result": {"status": "success", "results": [{"count": 1, "rank": 0.08, "text": "new OpenAI context call methods", "timestamps": [{"start": 267094, "end": 272126}]}, {"count": 1, "rank": 0.07, "text": "new function", "timestamps": [{"start": 656246, "end": 657006}]}, {"count": 2, "rank": 0.07, "text": "set model", "timestamps": [{"start": 247880, "end": 248744}, {"start": 619808, "end": 621164}]}, {"count": 3, "rank": 0.07, "text": "vector store", "timestamps": [{"start": 404130, "end": 405214}, {"start": 415146, "end": 416294}, {"start": 600736, "end": 601764}]}, {"count": 2, "rank": 0.06, "text": "default model", "timestamps": [{"start": 623984, "end": 625056}, {"start": 627016, "end": 628326}]}, {"count": 1, "rank": 0.06, "text": "new victories", "timestamps": [{"start": 98814, "end": 99742}]}, {"count": 3, "rank": 0.06, "text": "vector star", "timestamps": [{"start": 386054, "end": 387074}, {"start": 443486, "end": 444450}, {"start": 650954, "end": 651882}]}, {"count": 1, "rank": 0.06, "text": "document loaders", "timestamps": [{"start": 140959, "end": 141839}]}, {"count": 1, "rank": 0.06, "text": "MSD default model", "timestamps": [{"start": 626192, "end": 628326}]}, {"count": 1, "rank": 0.06, "text": "agent chains", "timestamps": [{"start": 417930, "end": 419874}]}, {"count": 1, "rank": 0.06, "text": "agent conversation react description", "timestamps": [{"start": 697866, "end": 700574}]}, {"count": 1, "rank": 0.06, "text": "vector star hydrogen", "timestamps": [{"start": 443486, "end": 445574}]}, {"count": 1, "rank": 0.06, "text": "PDF file", "timestamps": [{"start": 451842, "end": 452974}]}, {"count": 1, "rank": 0.06, "text": "Reggie agents", "timestamps": [{"start": 142135, "end": 144039}]}, {"count": 1, "rank": 0.05, "text": "content generate content", "timestamps": [{"start": 335912, "end": 338592}]}]}, "content_safety_labels": null, "iab_categories_result": null, "chapters": null, "sentiment_analysis_results": null, "entities": null}