1
00:00:20,650 --> 00:00:23,674
Hello. Hello people. My name is Andrea.

2
00:00:23,802 --> 00:00:27,702
I'm from Brazil and I have been working with

3
00:00:27,756 --> 00:00:31,590
Python for over five years and with

4
00:00:31,660 --> 00:00:33,960
RPA for over two years.

5
00:00:35,450 --> 00:00:39,046
I work at a company here in Brazil that provides

6
00:00:39,078 --> 00:00:41,340
accounting and tax services.

7
00:00:43,470 --> 00:00:47,610
My job here is to help my colleagues to

8
00:00:47,680 --> 00:00:51,550
reduce their time spent on repetitive tasks.

9
00:00:53,250 --> 00:00:56,750
I will divide my presentation into two parts.

10
00:00:57,570 --> 00:01:00,362
The first one is a sequence of slides,

11
00:01:00,506 --> 00:01:04,226
and the second one I will bring you a

12
00:01:04,248 --> 00:01:07,410
real case of a task automated by a bot.

13
00:01:10,390 --> 00:01:14,114
So first of all, I make

14
00:01:14,152 --> 00:01:18,310
a disclaimer here for the english speakers.

15
00:01:18,650 --> 00:01:21,800
I apologize for the accent sometimes,

16
00:01:22,250 --> 00:01:27,318
and I will try to make myself clear

17
00:01:27,404 --> 00:01:31,158
enough and make this presentation

18
00:01:31,254 --> 00:01:34,940
at least understandable for you. Okay?

19
00:01:36,190 --> 00:01:40,086
So imagine that

20
00:01:40,128 --> 00:01:44,000
you can apply this to any system

21
00:01:45,010 --> 00:01:49,118
in your company, be it an rep

22
00:01:49,284 --> 00:01:53,218
like SAP system or any other

23
00:01:53,384 --> 00:01:57,682
internal system in your company, or even a

24
00:01:57,736 --> 00:02:01,620
web application. We will see

25
00:02:02,070 --> 00:02:07,442
how to do this. So RPA

26
00:02:07,586 --> 00:02:12,198
stands for robotic process. Automation is

27
00:02:12,284 --> 00:02:16,290
the use of technology to handle repetitive

28
00:02:16,370 --> 00:02:21,062
tasks, freeing up human workers

29
00:02:21,126 --> 00:02:23,690
for more complex responsibilities.

30
00:02:25,150 --> 00:02:26,460
Let's move on.

31
00:02:30,130 --> 00:02:34,030
Why Python is a popular choice for RPA

32
00:02:37,010 --> 00:02:40,234
Python has a simple syntax,

33
00:02:40,362 --> 00:02:44,386
extensive libraries, and a huge community

34
00:02:44,488 --> 00:02:45,140
support.

35
00:02:49,190 --> 00:02:52,942
Some of benefits of using RPA

36
00:02:53,086 --> 00:02:56,226
in a day to work are time efficiency,

37
00:02:56,418 --> 00:03:00,390
error reduction, and cost savings.

38
00:03:01,370 --> 00:03:05,826
For time efficiency, one of the primary advantages

39
00:03:06,018 --> 00:03:09,034
of RPA is

40
00:03:09,072 --> 00:03:12,090
its ability to accelerate tasks,

41
00:03:14,590 --> 00:03:18,698
freeing up valuable time for

42
00:03:18,864 --> 00:03:22,926
employees to focus on more strategic and value

43
00:03:23,028 --> 00:03:24,750
added activities.

44
00:03:27,970 --> 00:03:31,258
By automating repetitive tasks,

45
00:03:31,434 --> 00:03:35,442
employees can channel their energy towards more

46
00:03:35,496 --> 00:03:39,220
meaningful work. There is

47
00:03:39,990 --> 00:03:41,540
reduction too,

48
00:03:43,670 --> 00:03:46,230
and cost savings.

49
00:03:47,130 --> 00:03:51,042
Implementing RPA can resulting in substantial

50
00:03:51,106 --> 00:03:54,390
cost savings for any organizations.

51
00:04:02,260 --> 00:04:05,760
How RPA automates repetitive tasks

52
00:04:07,540 --> 00:04:09,890
in three main ways.

53
00:04:10,820 --> 00:04:14,372
Automated workflows it

54
00:04:14,426 --> 00:04:19,110
has efficient data handling and

55
00:04:21,640 --> 00:04:24,980
for the result of this increase

56
00:04:26,060 --> 00:04:29,736
or productivity, will you

57
00:04:29,758 --> 00:04:33,268
see here some examples of RPA applications

58
00:04:33,364 --> 00:04:36,890
in some industries? Okay,

59
00:04:39,820 --> 00:04:44,764
financing, healthcare, retail, chimeshafue in

60
00:04:44,802 --> 00:04:48,700
financing, automating, transaction processing,

61
00:04:50,160 --> 00:04:53,680
report generation, and compliance tasks

62
00:04:54,340 --> 00:04:58,384
is some of the

63
00:04:58,422 --> 00:05:02,016
tasks that be automated by

64
00:05:02,038 --> 00:05:02,880
a bot.

65
00:05:05,560 --> 00:05:09,744
To illustrate the practical application of RPA

66
00:05:09,792 --> 00:05:13,830
in Python, let's consider a case study

67
00:05:14,920 --> 00:05:18,920
involving an invoice in processing.

68
00:05:20,300 --> 00:05:23,000
Let's imagine a following scenario.

69
00:05:23,660 --> 00:05:27,860
A company has receives an invoice via

70
00:05:28,020 --> 00:05:29,870
email daily, okay?

71
00:05:31,360 --> 00:05:35,468
So the accounts payable team

72
00:05:35,634 --> 00:05:39,468
manually extracts relevant information such

73
00:05:39,554 --> 00:05:43,970
as invoice number, date, and total amount

74
00:05:44,580 --> 00:05:49,136
from each invoice. So with

75
00:05:49,238 --> 00:05:53,308
that data, integers it into

76
00:05:53,494 --> 00:05:57,524
the accounting system or an

77
00:05:57,562 --> 00:05:59,990
excel worksheet or whatever.

78
00:06:01,080 --> 00:06:05,120
So this is a classical

79
00:06:05,200 --> 00:06:09,864
repetitive tasks, tasks that can

80
00:06:09,902 --> 00:06:14,164
be automated by a bot, by an RPA

81
00:06:14,212 --> 00:06:15,000
solution.

82
00:06:18,240 --> 00:06:21,608
We can build an RPA solution

83
00:06:21,784 --> 00:06:24,350
with Python, of course,

84
00:06:26,320 --> 00:06:30,044
that checks the email inbox that

85
00:06:30,162 --> 00:06:33,584
open the PDF file in

86
00:06:33,622 --> 00:06:38,352
that email from that person that

87
00:06:38,406 --> 00:06:42,736
sent to us the invoice here

88
00:06:42,918 --> 00:06:46,980
and apply some OCR

89
00:06:47,960 --> 00:06:52,004
techniques to extract data from

90
00:06:52,042 --> 00:06:55,572
this PEDF and save this

91
00:06:55,626 --> 00:06:59,096
information in whatever

92
00:06:59,198 --> 00:07:02,170
place we want. Okay,

93
00:07:05,420 --> 00:07:09,308
so this is one of

94
00:07:09,394 --> 00:07:13,032
example of how an RPA

95
00:07:13,096 --> 00:07:17,064
solution can help us in our daily

96
00:07:17,112 --> 00:07:20,750
work here.

97
00:07:21,600 --> 00:07:25,260
Some libraries for RPA development in Python,

98
00:07:26,960 --> 00:07:30,700
some of them is Pyautogi,

99
00:07:31,440 --> 00:07:35,712
selenium board, numpy pandas

100
00:07:35,856 --> 00:07:39,190
and among others. Okay,

101
00:07:39,640 --> 00:07:43,572
let's go to my computer screen to

102
00:07:43,626 --> 00:07:47,064
see a real case of

103
00:07:47,102 --> 00:07:49,610
a task by automated by a bot. Okay,

104
00:07:55,240 --> 00:07:56,710
let's do this.

105
00:08:01,820 --> 00:08:03,550
What I need to do here,

106
00:08:04,880 --> 00:08:08,620
I need to search some codes from

107
00:08:08,690 --> 00:08:13,004
this excel worksheet in application

108
00:08:13,122 --> 00:08:16,976
desktop and bring back

109
00:08:17,158 --> 00:08:21,440
the description from each code and

110
00:08:21,510 --> 00:08:23,730
save it here.

111
00:08:26,980 --> 00:08:32,260
I will do this manually one

112
00:08:32,330 --> 00:08:33,590
or two times.

113
00:08:37,800 --> 00:08:40,740
So this is my application desktop.

114
00:08:43,260 --> 00:08:46,952
I click here and I need

115
00:08:47,006 --> 00:08:49,530
to click here.

116
00:08:51,660 --> 00:08:54,330
This is what I have to do.

117
00:08:57,120 --> 00:09:00,876
So I put this code here

118
00:09:00,978 --> 00:09:06,432
and search as a result this

119
00:09:06,486 --> 00:09:10,412
bring me this description

120
00:09:10,556 --> 00:09:14,320
and receive

121
00:09:15,140 --> 00:09:18,050
and control v.

122
00:09:19,080 --> 00:09:23,092
Okay I will

123
00:09:23,146 --> 00:09:26,948
do this again for the second

124
00:09:27,034 --> 00:09:29,750
one search.

125
00:09:31,500 --> 00:09:34,890
Okay, there is another description here,

126
00:09:37,020 --> 00:09:40,250
control c, control v.

127
00:09:41,900 --> 00:09:45,228
So here I have five codes but

128
00:09:45,314 --> 00:09:49,244
imagine if

129
00:09:49,282 --> 00:09:52,940
I have 100 codes, 1000 codes,

130
00:09:54,320 --> 00:09:58,336
and to do this again and again and again and again.

131
00:09:58,518 --> 00:10:01,868
So this is a tasks that a bot

132
00:10:01,964 --> 00:10:05,756
can help me a lot. I wrote this code in Python

133
00:10:05,788 --> 00:10:08,210
that do that for me. Okay,

134
00:10:10,260 --> 00:10:13,616
this code import an excel file with the codes

135
00:10:13,648 --> 00:10:17,956
I need to consult, access a

136
00:10:17,978 --> 00:10:21,992
desktop application, query one

137
00:10:22,046 --> 00:10:26,136
code at a time, extract the description and save it

138
00:10:26,238 --> 00:10:28,916
into my Excel file.

139
00:10:29,028 --> 00:10:33,004
Okay, so let's see this

140
00:10:33,042 --> 00:10:33,980
in action.

141
00:10:51,030 --> 00:10:53,940
I will import my Excel file here.

142
00:11:11,580 --> 00:11:16,476
So hands up the

143
00:11:16,498 --> 00:11:20,030
bot, execute these steps for me. Okay,

144
00:11:23,120 --> 00:11:26,828
here it search

145
00:11:26,914 --> 00:11:30,464
the first code, get the description, save it

146
00:11:30,582 --> 00:11:32,320
into my Excel file.

147
00:11:33,220 --> 00:11:37,250
So search the second one,

148
00:11:38,740 --> 00:11:42,420
get the description, save it in my excel,

149
00:11:43,480 --> 00:11:46,980
search the third and do this

150
00:11:47,050 --> 00:11:50,324
again and again and again and

151
00:11:50,362 --> 00:11:53,960
again. Okay, so this is a huge benefit

152
00:11:54,940 --> 00:11:58,952
because some tasks like

153
00:11:59,006 --> 00:12:02,564
that can be automated by RPA

154
00:12:02,612 --> 00:12:06,430
solution. That's saving my time.

155
00:12:07,200 --> 00:12:09,710
That's the real benefit. Okay,

156
00:12:10,640 --> 00:12:15,230
so let's see the result here.

157
00:12:22,990 --> 00:12:26,602
Okay, all the description saved here.

158
00:12:26,736 --> 00:12:27,420
Okay,

159
00:12:29,950 --> 00:12:34,726
so let's

160
00:12:34,758 --> 00:12:36,430
go back to my presentation.

161
00:12:43,560 --> 00:12:48,004
Let's drag to

162
00:12:48,042 --> 00:12:50,580
here in a conclusion.

163
00:12:51,580 --> 00:12:55,380
An RPA solution in Python

164
00:12:55,540 --> 00:12:59,976
offers so many benefits

165
00:13:00,158 --> 00:13:02,920
for any company, for any organization.

166
00:13:06,240 --> 00:13:10,568
By automating repetitive tasks, RPA liberates

167
00:13:10,664 --> 00:13:13,710
employees from repetitive work,

168
00:13:14,320 --> 00:13:18,652
allowing them to focus on strategic

169
00:13:18,716 --> 00:13:22,336
initiatives that drive business

170
00:13:22,438 --> 00:13:24,290
growth. Okay,

171
00:13:27,140 --> 00:13:31,410
thank you. Thank you so much for this opportunity.

172
00:13:32,180 --> 00:13:35,564
I hope this overview has provided

173
00:13:35,612 --> 00:13:39,600
you some insights into the world of

174
00:13:39,670 --> 00:13:44,712
RPA and its potential to

175
00:13:44,766 --> 00:13:47,096
help our daily work.

176
00:13:47,198 --> 00:13:51,610
Okay. And special thanks for

177
00:13:52,540 --> 00:13:55,540
the conf, for the two organizers.

178
00:13:55,620 --> 00:13:59,016
Okay, thank you. Thank you.

