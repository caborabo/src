1
00:00:00,200 --> 00:00:07,620
Hi everyone, a survey done by state of
digital operations this year found that

2
00:00:07,949 --> 00:00:13,599
there's a 13 percent year over year
increase in customer facing incidents and

3
00:00:13,600 --> 00:00:20,649
that's little puzzling because when you
compare to all the advancements happening

4
00:00:20,789 --> 00:00:25,839
in tech industry you would think this is
something which should be coming down.

5
00:00:28,339 --> 00:00:31,539
And also, a survey done by options.

6
00:00:31,540 --> 00:00:39,660
Bob Stramp AI Ops study found that 58
percent enterprise think anomaly detection

7
00:00:39,660 --> 00:00:42,140
is one of the key AI Ops use case.

8
00:00:43,620 --> 00:00:45,830
I think this tells a good story.

9
00:00:47,080 --> 00:00:53,120
The idea is that a lot of organizations
being dependent on traditional monitoring

10
00:00:53,199 --> 00:00:58,540
or enable observability but based on
traditional way of looking at things

11
00:00:58,940 --> 00:01:01,390
have understood that we have to move.

12
00:01:01,540 --> 00:01:08,690
The thresholds are never static,
it's getting varied and you have

13
00:01:08,690 --> 00:01:14,679
to understand the baselines of your
applications and it's all about baselining

14
00:01:14,679 --> 00:01:20,440
something and getting alert or getting
informed if that baseline is breached.

15
00:01:21,670 --> 00:01:26,520
So that means that a
lot of enterprises think

16
00:01:28,730 --> 00:01:29,510
in order to

17
00:01:31,730 --> 00:01:32,100
enable.

18
00:01:32,480 --> 00:01:37,828
If you want to have high customer
experience or reduce the service impacting

19
00:01:37,828 --> 00:01:40,210
issues, you have to embrace AIOps.

20
00:01:41,210 --> 00:01:41,840
Hi, everyone.

21
00:01:42,370 --> 00:01:46,150
Welcome to Incident Management
2024 organized by CON42.

22
00:01:47,040 --> 00:01:48,469
My name is Indiki Vimalsurya.

23
00:01:49,529 --> 00:01:55,370
During probably next 20 to 30 minutes,
I'll walk you through about AIOps in AWS.

24
00:01:56,370 --> 00:01:58,999
I'll walk you through how AIOps works.

25
00:01:59,280 --> 00:02:07,780
You can implement a comprehensive or
robust AIOps framework in AWS to support

26
00:02:09,400 --> 00:02:12,750
the applications you have hosted in AWS.

27
00:02:14,960 --> 00:02:20,430
My presentation will look at having
a quick introduction of AIOps and

28
00:02:21,150 --> 00:02:23,380
concept into predictive maintenance.

29
00:02:23,990 --> 00:02:27,540
And then we'll directly jump in
to three implementation approach.

30
00:02:28,520 --> 00:02:29,110
Number one.

31
00:02:29,550 --> 00:02:32,260
observability based approach,
where we will look at how we

32
00:02:32,260 --> 00:02:37,890
can leverage CloudWatch and
implement the AIOps framework.

33
00:02:38,840 --> 00:02:44,219
Then we will look at data lake based
approach, where we will use quite a lot of

34
00:02:44,220 --> 00:02:51,110
AWS services to build a data lake and on
top of that, develop AIOps capabilities.

35
00:02:52,390 --> 00:02:59,159
And finally, we will look at one of the
AIOps offering provided by CloudWatch.

36
00:03:00,050 --> 00:03:05,680
AWS, and how you can leverage
that to enable AIOps.

37
00:03:06,440 --> 00:03:10,020
And we'll wrap it up with some of the
effective strategies and best practices.

38
00:03:12,829 --> 00:03:14,169
Quick intro about myself.

39
00:03:14,270 --> 00:03:16,069
I'm based out of Colombo, Sri Lanka.

40
00:03:16,850 --> 00:03:22,760
I am experiencing SRE,
observability, AIOps, and Gen AI.

41
00:03:23,960 --> 00:03:27,839
I'm a passionate technical
trainer and a technical blogger.

42
00:03:28,660 --> 00:03:29,340
I'm very proud.

43
00:03:29,500 --> 00:03:34,000
How to be an AWS community builder
under cloud operations category, and

44
00:03:34,000 --> 00:03:36,550
also ambassador at DevOps Institute.

45
00:03:37,550 --> 00:03:40,000
With that over, let's dive into our topic.

46
00:03:41,460 --> 00:03:43,060
And we'll look at

47
00:03:45,219 --> 00:03:51,670
why AIOps is needed and why
predictive maintenance is important

48
00:03:51,680 --> 00:03:55,310
for the enterprise applications.

49
00:03:56,310 --> 00:04:00,090
As you have seen, what's happening
in the industry, industries keep on

50
00:04:00,130 --> 00:04:02,380
evolving and things are getting better.

51
00:04:03,340 --> 00:04:07,169
And we used to have monolithic
systems, now moving to microservices.

52
00:04:08,019 --> 00:04:13,089
And we used to be on prem, now
we have moved into cloud, where

53
00:04:13,120 --> 00:04:19,850
provisioning of servers are a matter
of seconds, or probably minutes.

54
00:04:20,850 --> 00:04:25,239
And we have already moved from
server based to serverless as well.

55
00:04:25,239 --> 00:04:25,579
this is it.

56
00:04:25,579 --> 00:04:29,809
This is all good, and this has
improved things significantly.

57
00:04:30,579 --> 00:04:37,459
We also have seen, because this
advancement has resulted in we

58
00:04:37,479 --> 00:04:42,259
developing more and more complex
systems leveraging these capabilities.

59
00:04:42,909 --> 00:04:48,599
And that has resulted in expansion of
data sources, surge in data volumes

60
00:04:48,599 --> 00:04:54,209
coming out, and more importantly,
the number of failure scenarios.

61
00:04:54,889 --> 00:04:57,809
Because if you add So, if you
have 9 microservices, you might

62
00:04:57,809 --> 00:05:06,869
have, I would say, 15 to 20 or 40
microservices, where it used to be

63
00:05:06,869 --> 00:05:09,339
a one gigantic monolith application.

64
00:05:11,249 --> 00:05:17,499
Now this, the microservice architecture
has made things simple, so you can

65
00:05:17,719 --> 00:05:23,659
focus, your developers can focus on
a small functionality and then work

66
00:05:23,659 --> 00:05:25,559
on that, but that has created a lot.

67
00:05:25,580 --> 00:05:31,037
they are using a lot of dependencies
and this managing these dependencies

68
00:05:31,037 --> 00:05:34,221
are one of the biggest pain points.

69
00:05:34,221 --> 00:05:39,615
And these can result in a lot of
failure scenarios in your state as well.

70
00:05:40,615 --> 00:05:45,425
again, OpsRamp AI FCP study, they
have asked this question from

71
00:05:45,425 --> 00:05:48,215
the top, enterprise customers.

72
00:05:48,685 --> 00:05:49,515
What are their

73
00:05:51,895 --> 00:05:52,395
importance?

74
00:05:52,605 --> 00:05:52,685
And

75
00:05:53,685 --> 00:05:58,905
what are their important
aspects when it comes to AIOps?

76
00:05:59,905 --> 00:06:06,255
And what this study shows is 60
percent of the enterprise customers,

77
00:06:06,855 --> 00:06:09,165
they want to, reduce the noise.

78
00:06:09,495 --> 00:06:12,485
They want more accuracy
when it comes to data.

79
00:06:13,655 --> 00:06:18,145
And around 51 percent of enterprise
customers, they used to have

80
00:06:18,155 --> 00:06:19,955
better root cause analysis.

81
00:06:21,135 --> 00:06:26,755
And then around same percentage wants
to understand dependencies better.

82
00:06:27,775 --> 00:06:32,475
And half, 50 percent of the
customers again mentioned that

83
00:06:32,485 --> 00:06:34,625
they want to reduce their MTTTR.

84
00:06:35,625 --> 00:06:43,635
And these are some of the very
genuine problems anyone is facing

85
00:06:43,795 --> 00:06:48,255
if you are managing a relatively
complex system in production.

86
00:06:49,935 --> 00:06:51,635
Because data is very important.

87
00:06:52,525 --> 00:06:58,915
And as I mentioned, now we have so
much of data, but more data with less

88
00:06:58,915 --> 00:07:04,125
care will not provide you a lot of
information or meaningful insights.

89
00:07:04,375 --> 00:07:08,195
So that's why the accuracy
of data is very important.

90
00:07:08,925 --> 00:07:13,575
And because now we have so much of
data coming in, so in case of actual

91
00:07:13,575 --> 00:07:19,535
issue, identifying the root causes
or isolating things And ability

92
00:07:19,535 --> 00:07:23,545
to narrow down your root cause
investigation is really challenging.

93
00:07:23,825 --> 00:07:25,625
We have, everyone needs some help.

94
00:07:26,645 --> 00:07:33,625
And as I touch upon with microservices,
we have this problem of dependencies,

95
00:07:34,155 --> 00:07:35,515
understanding dependencies.

96
00:07:35,725 --> 00:07:38,155
So those are some of the challenges

97
00:07:40,225 --> 00:07:45,025
the enterprise customers are having
these days and challenges where AIOps

98
00:07:45,215 --> 00:07:47,175
can definitely provide you a solution.

99
00:07:49,505 --> 00:07:54,585
So if you look at a typical AIOps
implementation, so what you want

100
00:07:54,585 --> 00:07:59,745
is, you have your customers, and
they will probably start accessing

101
00:07:59,745 --> 00:08:03,895
your system, and they will try to
get the benefit of your system.

102
00:08:05,615 --> 00:08:11,325
And on top of your distributed system,
what you have done is, you probably

103
00:08:11,325 --> 00:08:14,685
have some self healing bots, so
that whenever issues are happening,

104
00:08:14,965 --> 00:08:16,565
you can self heal your system.

105
00:08:17,745 --> 00:08:19,965
You might have you will have
intelligent compliance, so that

106
00:08:19,995 --> 00:08:24,875
your systems are compliant, and
you will build a lot of intelligent

107
00:08:25,165 --> 00:08:31,005
capacity methodologies as well, auto
scaling being one of the example.

108
00:08:31,955 --> 00:08:35,095
And then you will look at
predictive maintenance and

109
00:08:35,095 --> 00:08:36,225
intelligent threat detection.

110
00:08:36,235 --> 00:08:40,465
So you have a lot of things out
of your observability layer.

111
00:08:41,025 --> 00:08:45,445
So on top of these things you have
enabled, what you want to do is, you

112
00:08:45,445 --> 00:08:47,935
want to go out of traditional way of.

113
00:08:49,185 --> 00:08:55,355
Looking at things, which is threshold
based, which is a statistic, approach.

114
00:08:55,695 --> 00:09:00,285
Or, it's a very static based thresholds.

115
00:09:00,835 --> 00:09:05,075
And we want to come out of
that, and we want to do things

116
00:09:05,075 --> 00:09:06,325
in a more intelligent way.

117
00:09:06,585 --> 00:09:07,525
And how we do that?

118
00:09:07,925 --> 00:09:11,455
We want to do anomaly detection,
which is about understanding a

119
00:09:11,465 --> 00:09:15,695
baseline of and getting alert
when this baseline is breached.

120
00:09:16,435 --> 00:09:18,605
And of course you want to do
some noise reduction as well.

121
00:09:20,135 --> 00:09:21,225
And this can be done.

122
00:09:21,595 --> 00:09:26,575
And while we do this, we can enable some
intelligent business impacts so that

123
00:09:26,575 --> 00:09:30,755
whenever live issues are happening, we
have understanding what the impact and

124
00:09:30,755 --> 00:09:36,255
we have intelligent knowledge bases
and we have the ability of extracting

125
00:09:36,275 --> 00:09:38,365
things or the root causes intelligently.

126
00:09:39,035 --> 00:09:42,875
So when these customers are trying to
engage with the operational teams, we

127
00:09:42,875 --> 00:09:45,605
can provide chatbots using AI so that.

128
00:09:46,185 --> 00:09:50,955
AdBots can be integrated with your
observability and entire your platform so

129
00:09:50,955 --> 00:09:56,795
it can detect things, learn, and it can
provide some intelligent answers to your

130
00:09:56,795 --> 00:10:01,405
customers and also help them when it comes
to their day to day operation support.

131
00:10:02,385 --> 00:10:08,265
And we can obviously bring in
intelligence to our pipelines and

132
00:10:08,345 --> 00:10:14,695
especially the guardrails and this
will help us developing some of

133
00:10:14,755 --> 00:10:16,495
the really good AI observables.

134
00:10:16,495 --> 00:10:20,215
Use cases to provide value
to enterprise customers.

135
00:10:20,845 --> 00:10:24,235
So in summary, what we are trying
to do is we are trying to bringing

136
00:10:24,235 --> 00:10:29,125
in intelligent alerting with support
of anomaly detection or forecasting.

137
00:10:29,455 --> 00:10:33,015
And we also want to cut down the
noise and we want to automate

138
00:10:33,015 --> 00:10:34,785
some of these resolutions as well.

139
00:10:36,415 --> 00:10:43,795
And also we have using some of these other
AIOps use cases, we can definitely bring a

140
00:10:43,795 --> 00:10:47,665
lot of value to your enterprise customers.

141
00:10:50,115 --> 00:10:54,785
Moving on, let's also be very clear
what we are trying to achieve.

142
00:10:55,595 --> 00:11:00,945
So what we want AI ops or
artificial intelligence for IT

143
00:11:00,945 --> 00:11:03,505
operation is number one, right?

144
00:11:03,505 --> 00:11:07,995
So example, if you look at this,
so that if you look at this as an

145
00:11:07,995 --> 00:11:13,275
application or enterprise system,
which is green and suddenly you see

146
00:11:13,275 --> 00:11:18,755
something going wrong and then it's
getting fixed and back to normal.

147
00:11:19,325 --> 00:11:20,895
So if you look at this.

148
00:11:21,035 --> 00:11:24,705
So this is the time where you identify
there is a service impacting issue.

149
00:11:25,405 --> 00:11:30,975
And what we want is AIOps to understand
these things in advance so that we

150
00:11:30,975 --> 00:11:34,815
can actually eliminate these issues.

151
00:11:35,395 --> 00:11:40,365
We call it predictive maintenance when
it eliminates potential issues which

152
00:11:40,365 --> 00:11:43,005
could have impacted the end users.

153
00:11:44,525 --> 00:11:49,195
There's nothing great about picking
something after it has happened.

154
00:11:49,755 --> 00:11:54,195
So what we want AIOps to do is to
be intelligent, understand this

155
00:11:55,335 --> 00:12:01,075
small, relatively non impactive
behavior changes in our systems.

156
00:12:01,715 --> 00:12:06,905
And that which can help us to
identify these issues in advance.

157
00:12:08,015 --> 00:12:12,275
Because otherwise what will happen
is, these small issues might

158
00:12:12,275 --> 00:12:16,185
cause into ice ball and then
it might have a bigger impact.

159
00:12:17,655 --> 00:12:22,055
And now that we have a predictive
maintenance, which is about eliminating

160
00:12:22,055 --> 00:12:24,375
incidents and what is needed to do that.

161
00:12:24,865 --> 00:12:27,665
I think next part is, we
also have to be realistic.

162
00:12:28,335 --> 00:12:31,665
There are chances that sometimes
we might not be eliminate things,

163
00:12:32,635 --> 00:12:34,535
even though we like to do that.

164
00:12:34,935 --> 00:12:41,015
So in that case, what we want is
detect things little faster and

165
00:12:41,035 --> 00:12:43,355
then fixing things much faster.

166
00:12:43,895 --> 00:12:48,655
So those are the key,
three important aspects.

167
00:12:48,985 --> 00:12:53,385
When it comes to AIOps, we want to
first eliminate these incidents and

168
00:12:53,385 --> 00:12:57,865
whatever the task we are doing part of
that, we call it predictive maintenance

169
00:12:57,865 --> 00:13:00,785
and then we are being realistic.

170
00:13:01,055 --> 00:13:05,795
So we understand that there's a
percentage of issues we might struggle

171
00:13:05,795 --> 00:13:10,605
to detect early to eliminate, but
we want to still nevertheless detect

172
00:13:10,645 --> 00:13:14,475
them as quickly as possible so that
we can fix it as quickly as possible.

173
00:13:14,645 --> 00:13:18,825
So in this case, without a long outage.

174
00:13:19,015 --> 00:13:25,170
H probably we could have fixed it much
short outage window, which is a win-win.

175
00:13:26,170 --> 00:13:29,290
So how we do that, as I mentioned,
there are three approach I'm

176
00:13:29,290 --> 00:13:30,400
going to discuss with you.

177
00:13:31,000 --> 00:13:31,330
Approach.

178
00:13:31,330 --> 00:13:35,440
Number one is observability base,
and it's predominantly enabling

179
00:13:35,590 --> 00:13:40,960
observability and then developing
AIOps capabilities on top of that.

180
00:13:41,960 --> 00:13:49,950
AWS is offering a very wide range
of observable related capabilities.

181
00:13:50,830 --> 00:13:53,360
CloudWatch sits on top of everything.

182
00:13:54,250 --> 00:13:58,880
what we generally do is we'll have
to instrument the system, probably

183
00:13:58,880 --> 00:14:04,100
with CloudWatch agent, or to
enable tracers with OpenTelemetry.

184
00:14:04,750 --> 00:14:10,120
And this will enable our foundations,
which are the metrics, logs and tracers.

185
00:14:10,870 --> 00:14:13,980
And then On top of this, we can
build dashboards, we can explore

186
00:14:13,980 --> 00:14:17,520
metrics, or we can define our
service level objectives as well.

187
00:14:18,970 --> 00:14:22,680
There are a lot of insights AWS
is providing, or the CloudWatch is

188
00:14:22,680 --> 00:14:27,450
providing, like Container Insight,
Lambda Insight, Log Insight, Application

189
00:14:27,450 --> 00:14:30,050
Signals, EC2 Health, and Live Trail.

190
00:14:31,170 --> 00:14:34,570
And on top of that, we can build
digital experience monitoring

191
00:14:34,860 --> 00:14:39,500
using Trail User Monitoring, or
we call it FRUM, or Developing

192
00:14:39,520 --> 00:14:41,330
Synthetic Tests, which is about it.

193
00:14:41,330 --> 00:14:45,630
we have got mimicking, actual
inducer behaviors, and finally

194
00:14:45,630 --> 00:14:47,090
using application signals.

195
00:14:47,790 --> 00:14:52,090
And on top of all of this, what
capabilities Cloud work providing

196
00:14:52,090 --> 00:14:58,100
is, we are able to do metric
anomaly detection, which is by far

197
00:14:58,490 --> 00:14:59,970
one of the most important things.

198
00:15:00,340 --> 00:15:04,700
As I mentioned, that is what the
enterprise customers need as well.

199
00:15:04,700 --> 00:15:10,140
most of our alerting, we are based
on, most of the time, majority

200
00:15:10,140 --> 00:15:11,670
of it is based on metrics.

201
00:15:12,140 --> 00:15:13,800
And of course, we look at logs as well.

202
00:15:14,860 --> 00:15:18,020
And they are also, what you
want is anomaly detection.

203
00:15:18,300 --> 00:15:22,010
So if you can implement metric anomaly
detection and log anomaly detection,

204
00:15:22,580 --> 00:15:28,580
that is very strong to AIFs use cases.

205
00:15:29,650 --> 00:15:33,430
And that will enable you to
be on top of your operations.

206
00:15:34,200 --> 00:15:38,860
And CloudWatch also provide AI
driven language query generation,

207
00:15:39,270 --> 00:15:42,710
intelligent insights, which is
related to your containers, the like.

208
00:15:42,710 --> 00:15:44,870
Lambda and other things.

209
00:15:45,140 --> 00:15:49,760
So these are key capabilities which
CloudWatch is providing you if you

210
00:15:50,510 --> 00:15:56,510
build the observability correctly,
which you can easily leverage to

211
00:15:56,510 --> 00:15:59,970
enable a solid AIOps platform.

212
00:16:02,090 --> 00:16:07,610
So in summary, the key capabilities
the CloudWatch or AWS is offering

213
00:16:07,610 --> 00:16:13,120
part of the observability capabilities
which support AIOps anomaly detection.

214
00:16:13,540 --> 00:16:13,990
So we did.

215
00:16:14,180 --> 00:16:16,910
It takes unusual patterns and inform you.

216
00:16:17,150 --> 00:16:21,960
So it will just check whether are
you inside your baseline, or are

217
00:16:21,960 --> 00:16:25,300
you outside, which, if that is
the case, then you will get alert.

218
00:16:26,370 --> 00:16:30,580
And the application signals will
use ML to understand, the different

219
00:16:30,580 --> 00:16:32,770
application issues and behavior changes.

220
00:16:33,440 --> 00:16:39,420
Likewise, contain insights, which will
analyze the containers and understand

221
00:16:39,620 --> 00:16:41,670
whenever there are changes happening

222
00:16:43,940 --> 00:16:45,090
related to the baseline.

223
00:16:46,300 --> 00:16:46,750
And continue.

224
00:16:47,030 --> 00:16:54,250
AI analysis, which is causing
unstability in the platform.

225
00:16:56,150 --> 00:16:59,640
And one of the other most important
thing is log anomaly detection.

226
00:16:59,840 --> 00:17:05,110
So it's about analyzing logs to understand
unusual events, the new errors, spikes,

227
00:17:05,610 --> 00:17:10,210
so that AI can do it intelligently.

228
00:17:11,210 --> 00:17:15,340
So next option is developing
a data lake based approach.

229
00:17:15,930 --> 00:17:20,050
So here, what we'll focus is,
we'll try to get all the data.

230
00:17:20,140 --> 00:17:24,820
All our telemetry data into a particular
storage where we can go with S3.

231
00:17:25,910 --> 00:17:30,560
And then once we have the data, which
is your, the logs, metrics, traces,

232
00:17:30,630 --> 00:17:34,870
events, and if you want, you can connect
your ITSM tools and other things.

233
00:17:35,240 --> 00:17:40,130
And this will actually help
you to consolidate all your

234
00:17:40,130 --> 00:17:43,470
telemetry data in one place.

235
00:17:44,470 --> 00:17:48,320
Then what you can do is we can use
Kinesis Data Firehouse if you want

236
00:17:48,320 --> 00:17:52,370
to stream some of this data, or if
you want to go with some ETL based

237
00:17:52,520 --> 00:17:54,820
approach, you can use AWS Glue as well.

238
00:17:55,720 --> 00:18:00,130
And then we will create our data
lake, or which is about enabling

239
00:18:00,130 --> 00:18:03,440
the data governance, and we can
use Amazon Lake for mention.

240
00:18:04,460 --> 00:18:07,560
And then when it comes to the
data processing and analyzing,

241
00:18:07,900 --> 00:18:10,360
we can use EMR or Amazon Glue.

242
00:18:11,670 --> 00:18:17,650
And then in order to Get access to
machine learning models to enable

243
00:18:18,040 --> 00:18:22,100
our anomaly detection, forecasting,
and other key capabilities.

244
00:18:22,580 --> 00:18:25,220
We can use, Amazon search maker.

245
00:18:25,860 --> 00:18:30,050
And so we dump all this data,
the process data to search maker.

246
00:18:30,300 --> 00:18:32,520
And on top of that, we
can build our models.

247
00:18:33,180 --> 00:18:37,100
And if required, you can use some
of the AWS offerings like AWS

248
00:18:37,100 --> 00:18:41,920
lookout for metrics and the Amazon,
the metric forecasting as well.

249
00:18:42,300 --> 00:18:44,320
So that will also provide you more.

250
00:18:45,650 --> 00:18:48,920
And then this you have can send
it to the QuickSight and we can

251
00:18:48,920 --> 00:18:50,380
connect with CloudWatch again.

252
00:18:50,640 --> 00:18:57,190
So here, what we are doing is we are
able to develop a data lake and on

253
00:18:57,190 --> 00:19:02,910
top of that, run machine learning
models developed using SearchMaker to

254
00:19:05,580 --> 00:19:07,870
Enable this AIOps capabilities.

255
00:19:08,220 --> 00:19:12,460
So this is little hard and complex
when you look at the observability

256
00:19:12,460 --> 00:19:17,160
based approach, the observability based
approach, it's more of like you enable

257
00:19:17,330 --> 00:19:23,330
observability and leverage cloud, the
cloud watch, and then pretty much use

258
00:19:23,370 --> 00:19:30,230
the native capabilities coming from
the cloud watch to enable AIOps, but

259
00:19:30,240 --> 00:19:35,280
here you have more control, so you
can, ship as much as data you want.

260
00:19:35,900 --> 00:19:40,460
So that's one thing and you can build a
lot of good data governance and you can

261
00:19:40,460 --> 00:19:42,920
be on top of the data processing as well.

262
00:19:43,400 --> 00:19:48,760
And you have luxury of bringing in
a lot of models in search maker and

263
00:19:48,760 --> 00:19:54,320
that can be sometimes customized to
your application or the business or

264
00:19:54,320 --> 00:19:56,780
the domain which you are working.

265
00:19:57,490 --> 00:20:01,190
So this will provide you
more, flexibilities and more

266
00:20:01,200 --> 00:20:05,320
opportunities for you when you
are developing an AIOps framework.

267
00:20:05,850 --> 00:20:10,100
But the other side is, it's, this
is take time, you need SMEs and,

268
00:20:10,400 --> 00:20:11,880
it will take a bit of time as well.

269
00:20:14,760 --> 00:20:21,510
So if you look at the, other approaches,
so AI, Amazon or AWS provide this

270
00:20:21,530 --> 00:20:25,360
tool called DevOps Guru, which is
a machine learning powered, cloud

271
00:20:25,360 --> 00:20:29,740
operation capability to provide more
visibility into your application.

272
00:20:30,070 --> 00:20:35,330
So what you can do is you can select
the coverage, what sort of coverage the

273
00:20:35,660 --> 00:20:40,180
DevOps Guru provides Guru should have for
in your system and you can add your data

274
00:20:40,180 --> 00:20:45,360
sources and it can be your CloudWatch,
the CloudConfig, X Ray and other things.

275
00:20:45,800 --> 00:20:51,230
And then what DevOps Guru will do is it
will continuously analyze and stream this

276
00:20:51,230 --> 00:20:57,020
data and monitor relevant metrics and it
will try to establish normal application

277
00:20:57,020 --> 00:21:03,690
pattern and behavior and whenever there's
a change, it will start informing you.

278
00:21:04,320 --> 00:21:06,810
So when it comes to
DevOps Guru queue, things.

279
00:21:06,920 --> 00:21:12,400
It's able to work on account level, or
once you select the entire coverage,

280
00:21:12,700 --> 00:21:16,840
it can look at your metrics, it can
look at the relevant events, and it can

281
00:21:16,870 --> 00:21:18,550
come up with recommendations as well.

282
00:21:18,780 --> 00:21:23,200
So this is a very powerful tool because
at this time what you have to do is

283
00:21:23,250 --> 00:21:28,450
just enable it and then DevOps Guru will
take care of most of the heavy lifting.

284
00:21:30,080 --> 00:21:33,270
And if you look at some of the
capabilities DevOps Guru is providing,

285
00:21:33,570 --> 00:21:38,030
it's able to do anomaly detection, so it
can automatically detect unusual patterns.

286
00:21:38,170 --> 00:21:44,310
It's in metrics, logs, and alert you, and
it can do intelligent root cause analysis,

287
00:21:44,390 --> 00:21:49,010
identify the root cause of operational
issues, trying to correlate with other

288
00:21:49,030 --> 00:21:51,300
problem so that it's able to reduce noise.

289
00:21:52,100 --> 00:21:56,910
And it's also able to provide a lot of
proactive insights when it comes to, your

290
00:21:57,010 --> 00:21:58,930
systems and other tech stack as well.

291
00:21:59,480 --> 00:22:03,440
So it's able to optimize resources
by providing suggestions.

292
00:22:03,780 --> 00:22:08,060
It is able to monitor your databases
and provide more intelligent.

293
00:22:08,120 --> 00:22:12,290
information and able to support you when
it comes to the capacity management,

294
00:22:12,600 --> 00:22:14,660
especially capacity forecasting.

295
00:22:16,000 --> 00:22:19,300
It also provide cross service
correlation, so which is about

296
00:22:19,300 --> 00:22:24,010
analyzing relationships in between
AWS services for holistic insights.

297
00:22:24,720 --> 00:22:29,870
And it's also integrated serverless, so
you can get the Lambda insights as well.

298
00:22:30,310 --> 00:22:34,100
It can support you when it comes
to security and compliance, and

299
00:22:34,110 --> 00:22:38,560
we can obviously build remediation
capabilities on top of here as well.

300
00:22:39,560 --> 00:22:41,500
So we have looked at three approaches.

301
00:22:41,500 --> 00:22:45,950
One based on observability where
we leverage CloudWatch and then we

302
00:22:45,950 --> 00:22:50,690
enable some of these high profile,
highly requested AIOps capabilities.

303
00:22:51,210 --> 00:22:56,960
Our second option is we build a data lake
solution and then we use Amazon search

304
00:22:57,000 --> 00:23:03,290
maker to build models and we pretty much
build machine learning models on top of

305
00:23:03,290 --> 00:23:09,010
the data lake and have a AIOps framework
which is very aligned to our needs.

306
00:23:10,110 --> 00:23:13,450
If not, you can use DevOps Guru,
which is again, a very powerful thing.

307
00:23:13,470 --> 00:23:18,100
You can select, you can, select the
coverage and based on that AWS will start

308
00:23:18,120 --> 00:23:22,710
baselining things and alert you whenever
there are deviations are happening.

309
00:23:23,040 --> 00:23:29,610
So finally, before we wrapped up, so
some of the strategies you have to be

310
00:23:29,610 --> 00:23:34,720
mindful is, so when it comes to AIOps,
having a clear goal is very important.

311
00:23:35,010 --> 00:23:39,270
It's sometimes one of the, key thing
which is missing and which is So that

312
00:23:39,270 --> 00:23:46,540
will make a difference in implementing a
solid AIOps platform for your customers.

313
00:23:48,950 --> 00:23:52,800
And next, we'll look at data.

314
00:23:53,060 --> 00:23:54,480
So data is very important.

315
00:23:54,750 --> 00:23:58,260
So you can integrate all of your
observability data, ITSM related

316
00:23:58,260 --> 00:24:01,810
data, and other, your wiki,
confluence pages, knowledge artifacts,

317
00:24:03,200 --> 00:24:05,150
so that, there's solid data.

318
00:24:06,380 --> 00:24:09,780
And you have to also be mindful of
team collaborations, because there

319
00:24:09,850 --> 00:24:14,000
will be various teams like operations
teams, the data center teams.

320
00:24:14,250 --> 00:24:19,460
So you had to get everyone into the table
and then come up with your approach.

321
00:24:20,470 --> 00:24:25,420
And key thing is you'll have to
enable real time monitoring and

322
00:24:25,430 --> 00:24:26,970
detecting things much faster.

323
00:24:27,650 --> 00:24:28,750
Automation is key.

324
00:24:28,850 --> 00:24:33,230
Even though we have not discussed much
in this presentation, whenever you have

325
00:24:33,230 --> 00:24:37,510
this intelligent alerting based on anomaly
detection on the forecasting, you have

326
00:24:37,510 --> 00:24:39,420
to have that action automated as well.

327
00:24:40,810 --> 00:24:42,560
And we can do a lot of tool integration.

328
00:24:42,610 --> 00:24:44,647
I'm going to show you how you can use
AIOps implementation to support this.

329
00:24:44,647 --> 00:24:49,189
And also, we had to look at some of
the aspects like training, because

330
00:24:49,909 --> 00:24:54,869
AIOps engagements has to gel with your
team, and that is one of the easiest

331
00:24:54,869 --> 00:24:57,199
way to get the best, the benefit.

332
00:24:58,339 --> 00:25:02,089
And one of the other most important
thing is making sure that you understand

333
00:25:02,089 --> 00:25:05,899
what is your success criteria when
it comes to AIOps implementation.

334
00:25:06,369 --> 00:25:11,569
Understand customer experience is key,
then you look at NPS, or you look at

335
00:25:11,569 --> 00:25:13,449
the system availability, reliability.

336
00:25:13,839 --> 00:25:17,429
And the improvements related to mean
time for detection, mean time for

337
00:25:17,439 --> 00:25:19,669
resolution, mean time between failure.

338
00:25:20,299 --> 00:25:26,699
And if possible, look at percentage of
incident self heal and look at overall

339
00:25:26,789 --> 00:25:32,319
what this should lead is ability for us
to deploy more frequent changes with high

340
00:25:33,449 --> 00:25:35,849
velocity, but it's still high reliability.

341
00:25:36,869 --> 00:25:41,789
And this should also allow us to
ensure that our development teams

342
00:25:41,789 --> 00:25:44,259
and the operations team has not.

343
00:25:44,479 --> 00:25:48,139
Spending unnecessary times on
firefighting, but they are able

344
00:25:48,139 --> 00:25:51,999
to spend some quality times
on what is actually needed.

345
00:25:52,389 --> 00:25:56,559
And then probably spend time on
technical eliminations and those things.

346
00:25:56,969 --> 00:26:01,309
So that finally the teams are
enabled to do things much faster.

347
00:26:01,309 --> 00:26:04,449
So you will see positive impact when
it comes to lead time for change.

348
00:26:04,979 --> 00:26:08,219
And also with all of this, we
should be able to reduce the

349
00:26:08,309 --> 00:26:09,309
change failure rate as well.

350
00:26:09,949 --> 00:26:13,039
So in very high level, this
is about understanding your

351
00:26:13,039 --> 00:26:14,319
service level objectives.

352
00:26:14,709 --> 00:26:18,309
Understanding what you assign
up with your customers and using

353
00:26:18,339 --> 00:26:20,499
AIOps to deliver that promise.

354
00:26:22,419 --> 00:26:29,869
With that, I hope you enjoy this
session and this is about how we can

355
00:26:31,689 --> 00:26:34,879
develop AIOps capabilities with AWS.

356
00:26:35,649 --> 00:26:36,839
Thank you for taking time.

357
00:26:37,179 --> 00:26:40,169
There are a lot of other interesting
presenters doing presentations

358
00:26:40,169 --> 00:26:42,929
part of Incident Management 2024.

359
00:26:43,019 --> 00:26:48,769
I request you to go around and watch
these sessions and get your ideas.

360
00:26:48,769 --> 00:26:54,995
Transcripts provided by
Transcription Outsourcing, LLC.

