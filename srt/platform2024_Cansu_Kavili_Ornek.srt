1
00:00:14,429 --> 00:00:15,059
Hello, everybody.

2
00:00:15,070 --> 00:00:19,729
Welcome to our talk, Principles of Team
Topologies and Platform Engineering.

3
00:00:19,729 --> 00:00:20,499
hello everyone.

4
00:00:20,549 --> 00:00:25,099
My name is Valionchev and, over the past
seven years or so, I've been working very

5
00:00:25,099 --> 00:00:29,939
closely with Jansu, building platforms in
many different environments, different.

6
00:00:30,579 --> 00:00:32,559
Business domains, different technologies.

7
00:00:32,989 --> 00:00:36,639
We're not going to talk only about
platforms in the cloud native context.

8
00:00:36,929 --> 00:00:41,269
We're going to cover platforms
in any other kind of context.

9
00:00:41,389 --> 00:00:41,999
That's me.

10
00:00:42,089 --> 00:00:44,009
Over to you Jansu to tell us about you.

11
00:00:44,389 --> 00:00:45,299
My name is Jansu.

12
00:00:45,319 --> 00:00:49,549
I'm an architect in Red Hat and as
Val said that I'm mainly focusing

13
00:00:49,549 --> 00:00:53,539
on building the platforms that help
organizations that fits for their

14
00:00:53,839 --> 00:00:56,159
needs and goals and their purposes.

15
00:00:56,489 --> 00:01:00,419
And also, helping to, build the
platform teams that are like high

16
00:01:00,419 --> 00:01:04,129
functioning, self sufficient and
able to maintain and sustain the

17
00:01:04,129 --> 00:01:05,849
platforms that we built together.

18
00:01:07,849 --> 00:01:08,619
Let's start that.

19
00:01:09,209 --> 00:01:09,829
Let's start.

20
00:01:10,049 --> 00:01:13,089
I'm actually representing here
Team Topologist and leading

21
00:01:13,089 --> 00:01:14,299
the team at Team Topologist.

22
00:01:14,609 --> 00:01:15,889
I'll let Johnson talk about it.

23
00:01:16,779 --> 00:01:17,279
It's so cool.

24
00:01:18,079 --> 00:01:22,549
If you haven't heard about, Team
Topologies, or, if you haven't had a

25
00:01:22,549 --> 00:01:27,169
chance to read it, we highly suggest you
to do it because it is one of the best

26
00:01:27,199 --> 00:01:31,809
product management book and best, one
of the best leadership book out there.

27
00:01:31,939 --> 00:01:34,259
If you want to know more, you can
go to the website teamtopologies.

28
00:01:35,379 --> 00:01:39,559
com or, if you like what you read and
if you like what you hear today, you

29
00:01:39,559 --> 00:01:42,139
can also contact us to learn more.

30
00:01:42,299 --> 00:01:42,439
but.

31
00:01:43,589 --> 00:01:46,089
Unfortunately, we have 30
minutes in here, so we are not

32
00:01:46,099 --> 00:01:47,749
going to deep dive on the book.

33
00:01:47,809 --> 00:01:52,569
We just assume that you have an interest
in that and you already read it.

34
00:01:52,589 --> 00:01:57,159
So we're going to focus on the principles
coming from team topologies and how this

35
00:01:57,159 --> 00:02:01,769
helps us to guide, to build a platform
that actually helps the organizations.

36
00:02:03,924 --> 00:02:06,104
Let's start, let's talk about platforms.

37
00:02:06,414 --> 00:02:11,684
One of the things that I learned early
on is that it's really important to align

38
00:02:11,684 --> 00:02:14,104
on what we mean when we say platforms.

39
00:02:14,434 --> 00:02:18,574
Most of the times that we start talking
about platforms, many people think

40
00:02:18,584 --> 00:02:21,074
about Kubernetes or like container.

41
00:02:22,244 --> 00:02:25,834
And while they are right, because
Kubernetes literally, the definition

42
00:02:25,834 --> 00:02:29,324
is an open source platform that,
that runs the containerized

43
00:02:29,354 --> 00:02:32,159
services, It is not just Kubernetes.

44
00:02:32,309 --> 00:02:37,169
So only having a Kubernetes cluster
having in our organization is not gonna

45
00:02:37,169 --> 00:02:41,219
exactly help us what we want to, when
we are thinking about platform, we

46
00:02:41,219 --> 00:02:45,869
need to go beyond the Kubernetes and
like we need to think about maybe some

47
00:02:45,869 --> 00:02:50,364
commercial of the shelf products and
infrastructure or some other services.

48
00:02:51,269 --> 00:02:53,419
We either build or get from outside.

49
00:02:53,629 --> 00:02:57,349
So we need to broaden our perspective
when we are thinking about platform

50
00:02:57,349 --> 00:03:02,029
and talking a little bit above,
not just on the tooling side.

51
00:03:02,029 --> 00:03:06,614
So for that, we need to align on
this and that's why while it's

52
00:03:06,614 --> 00:03:09,734
gonna give us like what we mean
when actually we say platforms.

53
00:03:10,004 --> 00:03:11,864
Yeah, platform is a loaded term.

54
00:03:11,894 --> 00:03:13,814
everybody means something else.

55
00:03:14,154 --> 00:03:18,254
And go and ask a Salesforce consultant
in Ontario that they have a platform.

56
00:03:18,524 --> 00:03:22,154
And it's probably correct from a
King's policy principles point of view.

57
00:03:22,564 --> 00:03:26,644
the platform is a thing that
is existing with the sole

58
00:03:26,644 --> 00:03:29,154
purpose of these three, things.

59
00:03:30,384 --> 00:03:32,734
a platform needs to
accelerate the flow of value.

60
00:03:33,124 --> 00:03:37,574
It simplifies things, it accelerates,
the work that development teams,

61
00:03:37,604 --> 00:03:38,954
application teams are doing.

62
00:03:40,119 --> 00:03:44,439
It needs to reduce cognitive load for the
people that are consuming the platform.

63
00:03:44,439 --> 00:03:48,639
So it needs to reduce the cognitive load
in the whole, socio technical system.

64
00:03:49,119 --> 00:03:53,109
And last but not least, it needs
to enable substantial autonomy of

65
00:03:53,109 --> 00:03:54,409
the teams that are consuming it.

66
00:03:54,789 --> 00:03:55,819
because we all want that.

67
00:03:55,859 --> 00:03:59,849
We want autonomous product teams
that are able to deliver vast value.

68
00:04:00,259 --> 00:04:03,779
and a platform needs to
fulfill all these three jobs.

69
00:04:04,249 --> 00:04:08,249
Again, it needs to accelerate flow
value, it needs to reduce the cognitive

70
00:04:08,289 --> 00:04:12,119
load, and it needs to allow for
substantial autonomy of the teams.

71
00:04:12,619 --> 00:04:15,749
Now, platform is an ambiguous term.

72
00:04:15,779 --> 00:04:18,209
Platform team is an even
more ambiguous term.

73
00:04:18,599 --> 00:04:23,864
And a lot of people use it, not
necessarily, Referring to the way, we use

74
00:04:23,864 --> 00:04:26,824
it in Team Topology's concept, context.

75
00:04:26,974 --> 00:04:31,864
from Team Topology's perspective, the
platform team is a grouping of many teams.

76
00:04:32,234 --> 00:04:33,684
It is not necessarily one team.

77
00:04:33,974 --> 00:04:38,064
A lot of people say a platform team and
they mean a department that happens to be

78
00:04:38,064 --> 00:04:39,934
responsible for some platform services.

79
00:04:40,344 --> 00:04:45,244
In Team Topology's, it is a grouping
of teams, different team types.

80
00:04:45,244 --> 00:04:50,124
It could be streamlined teams, it could
be complicated, subsystem teams, and they

81
00:04:50,124 --> 00:04:54,974
have the purpose to produce a product,
a platform service that is consumable

82
00:04:55,264 --> 00:04:59,764
and easy, make it easy for, developers,
people consuming it, let's say the team

83
00:04:59,764 --> 00:05:02,374
consuming it to deliver value fast.

84
00:05:04,504 --> 00:05:07,959
Before we dive in into the
principles to achieve actually.

85
00:05:08,589 --> 00:05:11,169
we want to just a little,
just in the words of cautious.

86
00:05:11,199 --> 00:05:15,169
So we're gonna, we don't have enough
time to dive into all the principles,

87
00:05:15,219 --> 00:05:19,139
but, we are mainly, we decided to
mainly talking about the value that we

88
00:05:19,139 --> 00:05:24,319
get out of these principles based on
our experiences in the field with the

89
00:05:24,499 --> 00:05:29,139
different organizations and how we can
actually, a little bit of guidance on how

90
00:05:29,189 --> 00:05:31,189
that you can also achieve the same thing.

91
00:05:31,339 --> 00:05:33,489
But what we actually want to do is to.

92
00:05:33,854 --> 00:05:35,174
Act like the great artists.

93
00:05:35,194 --> 00:05:37,515
We want you to, not steal
them, but, I'm sorry.

94
00:05:37,515 --> 00:05:40,355
We want you to, Don't
copy them, steal them.

95
00:05:40,355 --> 00:05:40,995
Don't copy them.

96
00:05:40,995 --> 00:05:41,305
Sorry.

97
00:05:41,305 --> 00:05:41,595
Yes.

98
00:05:42,115 --> 00:05:45,875
We don't want you to copy them as well,
but we want you to steal with creativity.

99
00:05:46,195 --> 00:05:49,975
we are hoping that these principles
and this discussion will inspire you

100
00:05:49,975 --> 00:05:53,475
to come up with your own principles
that can, That can actually achieve

101
00:05:53,855 --> 00:05:56,985
what you are sent to achieve, what
you are, where you want to go.

102
00:05:57,315 --> 00:06:01,295
So you'll, with that, these
are the principles that we

103
00:06:01,295 --> 00:06:02,185
are going to go through.

104
00:06:02,445 --> 00:06:03,935
we're going to get the slides as well.

105
00:06:03,955 --> 00:06:06,065
We're going to publish them
so you can also go through

106
00:06:06,065 --> 00:06:08,095
them, as on your time, time.

107
00:06:08,155 --> 00:06:12,065
And, we all have our own favorite
principles among those things.

108
00:06:12,075 --> 00:06:15,485
So I will hand over to Val to start
with his new favorite principle.

109
00:06:18,275 --> 00:06:18,665
Oh, sorry.

110
00:06:20,305 --> 00:06:20,515
Yes.

111
00:06:21,615 --> 00:06:22,095
Thank you.

112
00:06:22,635 --> 00:06:27,375
So the first principle we're gonna talk
about is the team is the smallest unit

113
00:06:27,375 --> 00:06:33,375
of delivery, and that quite often is
very much misunderstood by leaders.

114
00:06:33,535 --> 00:06:37,165
I see more and more leaders that are
focused on developer productivity.

115
00:06:38,010 --> 00:06:43,240
Their focus on developer experience
and that subtle change in language,

116
00:06:43,610 --> 00:06:45,570
forces them to look at individuals.

117
00:06:45,640 --> 00:06:48,360
And when you look at individuals,
you're not necessarily

118
00:06:48,620 --> 00:06:49,860
achieving the best results.

119
00:06:50,510 --> 00:06:54,870
From a team topology perspective,
the smallest units you need to

120
00:06:54,870 --> 00:06:56,730
deal with as a leader is the team.

121
00:06:57,200 --> 00:07:01,250
Productivity, impact, experience,
all of these things should

122
00:07:01,260 --> 00:07:02,780
be measured on a team level.

123
00:07:03,050 --> 00:07:06,570
The value of your platform should
be measured on the team level.

124
00:07:06,980 --> 00:07:10,380
Because if the team is the unit
that delivers the value, delivers

125
00:07:10,380 --> 00:07:14,370
the product, produces product and
delivers it to, to your end customer.

126
00:07:14,990 --> 00:07:18,370
So let's start by changing
a little bit the language.

127
00:07:18,400 --> 00:07:21,110
Instead of speaking about
developer productivity, let's speak

128
00:07:21,110 --> 00:07:23,050
about development productivity.

129
00:07:23,395 --> 00:07:27,125
Instead of speaking about developer
experience, let's talk about

130
00:07:27,135 --> 00:07:31,205
development experience and let's
start shifting the focus on the team.

131
00:07:33,555 --> 00:07:36,745
And the other principle is the
platform reduces cognitive load

132
00:07:36,795 --> 00:07:38,675
and accelerates flow of value.

133
00:07:39,055 --> 00:07:44,225
So the first question that we need to
answer is that we really need a platform.

134
00:07:44,415 --> 00:07:47,045
If you're thinking about the
definition that Val gave us.

135
00:07:47,460 --> 00:07:51,050
platforms are basically here
to be a catalyst of effects,

136
00:07:51,100 --> 00:07:52,820
efficiency and effectiveness.

137
00:07:53,110 --> 00:07:56,430
It should provide, I don't know,
easy to use, tools, some clear

138
00:07:56,430 --> 00:08:00,150
guidelines and helping developers to
reduce, reduce their cognitive load.

139
00:08:01,410 --> 00:08:06,370
If your platform fails to achieve
these two key benefits, it may

140
00:08:06,370 --> 00:08:09,100
not just justify its existing.

141
00:08:09,140 --> 00:08:12,970
So a couple of years ago, we were
working with this, organization

142
00:08:13,010 --> 00:08:14,430
and they formed a platform team.

143
00:08:14,855 --> 00:08:18,555
And they were really coming from
a good place with good intentions.

144
00:08:18,605 --> 00:08:23,945
They identified some common services,
and they wanted to take that load from

145
00:08:23,945 --> 00:08:29,045
their developers and provide some easy to
use, off the shelf type services to them.

146
00:08:30,205 --> 00:08:32,855
Soon enough, they became a
blocker because they were not

147
00:08:32,905 --> 00:08:34,249
really, following the good path.

148
00:08:34,690 --> 00:08:39,280
way of, providing services, they
became this, blocker and bottleneck.

149
00:08:39,510 --> 00:08:43,090
So actually, if you look overall,
instead of they are really reducing the

150
00:08:43,090 --> 00:08:45,090
cognitive load, they did the opposite.

151
00:08:45,090 --> 00:08:48,770
and they really didn't give the
benefit that, they, they sent

152
00:08:48,770 --> 00:08:49,940
to achieve at the beginning.

153
00:08:50,420 --> 00:08:53,740
And just because that's your immense
money on time, it doesn't mean that

154
00:08:53,940 --> 00:08:55,110
you should actually push for this.

155
00:08:55,970 --> 00:09:00,170
If you are really failing at these
two key benefits, like providing them

156
00:09:00,460 --> 00:09:04,380
and maybe should start re evaluate
and, maybe even decommission that

157
00:09:04,380 --> 00:09:06,640
platform and start from scratch.

158
00:09:08,430 --> 00:09:11,670
Yeah, to be or not to be, that's
the biggest question to ask about

159
00:09:11,670 --> 00:09:15,790
platforms and, in Team Topology's
sense, we speak about the thinnest

160
00:09:15,790 --> 00:09:20,480
viable platform, which is, what's the
minimum implementation you need to do?

161
00:09:20,580 --> 00:09:21,780
quite often we see.

162
00:09:22,275 --> 00:09:28,305
product owners or teams trying to build
magnificent castles and, something

163
00:09:28,305 --> 00:09:31,895
really big when the developer actually
needs a skateboard or just a tent.

164
00:09:32,345 --> 00:09:38,625
so do or not try to, allow this kind of
anti pattern to trick you into building a

165
00:09:38,625 --> 00:09:40,655
platform that actually becomes a botanic.

166
00:09:40,655 --> 00:09:43,405
Remember the three jobs
that the platform have.

167
00:09:44,090 --> 00:09:47,830
It has, from the morphology's
perspective, it needs to accelerate value.

168
00:09:48,530 --> 00:09:50,250
it needs to reduce the cognitive load.

169
00:09:50,990 --> 00:09:54,540
It needs to be easy to
consume by, your developers.

170
00:09:54,720 --> 00:09:56,140
So how do you actually do that?

171
00:09:56,700 --> 00:10:02,600
cognitive load should be the main
factor that drives your decision making.

172
00:10:03,010 --> 00:10:06,710
You need to focus again, the
smallest unit is the key.

173
00:10:06,800 --> 00:10:09,690
So we're talking about a team
of teams designs, not roles and

174
00:10:09,700 --> 00:10:11,740
responsibilities within a team.

175
00:10:12,070 --> 00:10:16,920
How do we distribute the work across
multiple different teams, within the

176
00:10:16,920 --> 00:10:21,570
design that we are meeting in order to
reduce the cognitive load in the system

177
00:10:21,570 --> 00:10:25,920
as a whole and accelerate the value in
the whole system, this so sociotechnical

178
00:10:25,920 --> 00:10:30,320
system, what you see there on, on
the images, one of the teams we were

179
00:10:30,350 --> 00:10:32,430
working with, building a very complex.

180
00:10:33,190 --> 00:10:36,360
platform that took, several
dozens of teams to develop.

181
00:10:36,720 --> 00:10:38,680
And what on the wall is
the domain driven design.

182
00:10:38,680 --> 00:10:39,770
This is event storming.

183
00:10:40,120 --> 00:10:43,650
the same technique that you apply in
order to build sound microservices,

184
00:10:44,520 --> 00:10:48,240
sound cloud native designs, you can
also apply it on your platforms.

185
00:10:48,500 --> 00:10:52,600
And it allows you to define good
boundaries for different platform teams.

186
00:10:52,880 --> 00:10:57,450
Different teams that are going to build
platform services to accelerate the value

187
00:10:57,470 --> 00:10:59,649
for the teams consuming the platforms.

188
00:11:00,350 --> 00:11:05,500
Another technique that we found, really
useful to reduce the cognitive load is

189
00:11:05,500 --> 00:11:10,250
worldly mapping, because it allows you
on one hand side to again, identify

190
00:11:10,270 --> 00:11:14,720
the different boundaries of services,
looking at the value chain, that you

191
00:11:14,720 --> 00:11:19,380
would need to build, but it also allows
you to make, build or buy decisions.

192
00:11:19,880 --> 00:11:24,180
So if something is available as a
commodity, don't spend time and effort.

193
00:11:24,230 --> 00:11:27,330
and actually they, the whole, creativity.

194
00:11:27,785 --> 00:11:30,635
of one of your teams, go ahead and buy it.

195
00:11:30,685 --> 00:11:34,875
I have worked with an organization in the
past that build their own service mesh.

196
00:11:34,875 --> 00:11:36,595
For Christ's sake, why?

197
00:11:37,085 --> 00:11:41,255
I, if it makes such a huge,
differentiation for you and you build

198
00:11:41,275 --> 00:11:44,445
something that does not exist on the
market, which is far on the left,

199
00:11:44,665 --> 00:11:46,455
okay, go ahead, invest and build it.

200
00:11:46,885 --> 00:11:51,105
But if you're building exactly what
already exists, do yourself a favor.

201
00:11:51,325 --> 00:11:52,805
Just take it off the shelf.

202
00:11:52,915 --> 00:11:54,345
Have somebody configure it.

203
00:11:55,055 --> 00:11:58,555
And conceal it, or you could even conceal
it as a service from the marketplace.

204
00:12:00,145 --> 00:12:03,095
So that going back to what
Giles was talking about earlier.

205
00:12:03,545 --> 00:12:05,255
Should this platform exist?

206
00:12:05,575 --> 00:12:08,265
What's the minimum version
of it that should exist?

207
00:12:08,635 --> 00:12:14,035
Don't try to build a magnificent castle
if a tent or a caravan is good enough.

208
00:12:15,625 --> 00:12:19,085
And the other principle is treating
the platforms as a product.

209
00:12:19,155 --> 00:12:20,405
This became super popular.

210
00:12:21,925 --> 00:12:26,105
It became like really, quite popular
recently, and it is all right to

211
00:12:26,105 --> 00:12:31,395
be popular, actually, because it
emphasized to, the importance of, the

212
00:12:31,395 --> 00:12:35,995
importance of applying the same level
of attention and chair and strategic

213
00:12:35,995 --> 00:12:37,405
thinking, that, transcripting.

214
00:12:37,785 --> 00:12:41,745
That you would apply to a, any
customer facing product applying the

215
00:12:41,745 --> 00:12:45,615
same attention, care, and strategic
thinking into your platform.

216
00:12:46,255 --> 00:12:51,595
Basically, it puts your users in the
center and design some pla design a

217
00:12:51,595 --> 00:12:55,795
platform that actually your user would
like to use, would, would like to,

218
00:12:55,895 --> 00:12:59,665
come and use that they find their real
platform and then very compelling.

219
00:12:59,665 --> 00:13:03,865
So by viewing the platform
as a product we commit.

220
00:13:05,225 --> 00:13:08,035
We're coming to have a continuous
improvement, like gathering the

221
00:13:08,045 --> 00:13:14,255
user feedback and iterating on
features of the platform to have a

222
00:13:14,255 --> 00:13:16,225
better usability and effectiveness.

223
00:13:16,465 --> 00:13:21,945
So this mindset helps you to ensure that
the platform remains relevant, valuable,

224
00:13:21,985 --> 00:13:24,235
and aligned with the needs of your users.

225
00:13:24,565 --> 00:13:29,425
and align with the teams that is actually
get a benefit off the platform, which

226
00:13:29,485 --> 00:13:31,685
drives the actually satisfaction for that.

227
00:13:32,555 --> 00:13:37,385
Just like the any product that actually
you are buying, like you are paying money.

228
00:13:37,615 --> 00:13:40,765
You should also think the same
way for your platforms as well.

229
00:13:40,875 --> 00:13:43,155
No one is pushing for
you to buy a product.

230
00:13:43,165 --> 00:13:46,795
No one is, you are not going
to use any product that is not

231
00:13:46,825 --> 00:13:50,955
relevant to this technology or
not making anything easy for you.

232
00:13:50,955 --> 00:13:52,215
So you should think the same.

233
00:13:52,565 --> 00:13:57,115
you should bring the same mindset to your
platform development approach and making

234
00:13:57,125 --> 00:14:02,575
sure that actually your platform is,
simplifying the needs for your end users,

235
00:14:02,855 --> 00:14:07,915
be, creating and creating an experience
that actually based on their needs and

236
00:14:08,755 --> 00:14:11,035
Sounds like a very convoluted term.

237
00:14:11,085 --> 00:14:14,115
Let's pull it apart and look
in practice what it means.

238
00:14:14,845 --> 00:14:15,035
True.

239
00:14:16,035 --> 00:14:18,515
Okay, so the real needs,
the real customers.

240
00:14:18,545 --> 00:14:22,355
As I said that this platform as a
product mindset puts the user, in

241
00:14:22,355 --> 00:14:26,675
the center and understand, what
kind of needs that our users, what

242
00:14:26,675 --> 00:14:27,905
kind of things that our users need.

243
00:14:28,005 --> 00:14:31,165
So in order to do that, we need to
really answer the question, the type

244
00:14:31,165 --> 00:14:33,365
of questions like, who is our customer?

245
00:14:33,365 --> 00:14:34,075
Like what?

246
00:14:34,295 --> 00:14:35,935
What do they need today?

247
00:14:35,935 --> 00:14:38,585
And what kind of things that
they are trying to achieve and

248
00:14:38,585 --> 00:14:39,875
they are using our platform.

249
00:14:40,075 --> 00:14:42,695
So in this picture that you
are seeing, there is a, what

250
00:14:42,695 --> 00:14:44,025
we call like user interview.

251
00:14:44,065 --> 00:14:48,605
So we are talking with the user and
understanding, how they are today,

252
00:14:48,655 --> 00:14:50,115
interacting with the platform.

253
00:14:50,115 --> 00:14:52,255
What is their expectation
from the platform?

254
00:14:52,475 --> 00:14:55,625
How they would like to, what
kind of features or services

255
00:14:55,645 --> 00:14:56,740
that they would like to.

256
00:14:56,890 --> 00:15:00,600
See, so that we understand what is
their motivation, what is the pain

257
00:15:00,600 --> 00:15:04,090
points, what kind of opportunities
that we have to bring to the platform,

258
00:15:04,490 --> 00:15:09,060
so that we can actually address the
user needs, so the actual user needs.

259
00:15:09,880 --> 00:15:12,800
And we don't really have one
user of a platform, so different

260
00:15:12,810 --> 00:15:14,400
users have different needs.

261
00:15:14,875 --> 00:15:17,535
So probably needs to talk about
different customer groups.

262
00:15:18,065 --> 00:15:22,035
And that was more about,
different needs people may have.

263
00:15:22,815 --> 00:15:26,865
So, when we are building a platform,
and when we are treating our

264
00:15:26,875 --> 00:15:31,965
platform as a product, we really,
need to meet our users needs.

265
00:15:32,165 --> 00:15:35,405
And as you said that there might
be not just one type of users.

266
00:15:35,405 --> 00:15:36,405
Our organization says.

267
00:15:37,020 --> 00:15:40,210
Multiple teams and different
teams with different needs.

268
00:15:40,280 --> 00:15:44,660
So a couple of years ago we were working
with this government agency and they

269
00:15:44,660 --> 00:15:48,780
want to build a platform to address
their all developers and build something

270
00:15:48,790 --> 00:15:51,370
that all the developers can benefit off.

271
00:15:51,800 --> 00:15:55,600
And together we identified a couple of
different personas, different developers,

272
00:15:55,630 --> 00:15:59,270
which was actually quite brilliant
and enlightening for me as well.

273
00:15:59,330 --> 00:16:03,170
So during our interviews, during
our engagements with the developers,

274
00:16:03,370 --> 00:16:07,100
we identified, one of these
personas was, for example, what

275
00:16:07,100 --> 00:16:09,520
we can call default pet users.

276
00:16:09,940 --> 00:16:13,260
So there were some developers
who would like to just consume

277
00:16:13,260 --> 00:16:16,730
the platform services, not really
interested in how those services are

278
00:16:16,730 --> 00:16:20,790
made or how they can, I don't know,
change stuff or bring new stuff.

279
00:16:20,790 --> 00:16:22,390
So they just want to consume this.

280
00:16:22,710 --> 00:16:26,740
services and like they want to
follow some standard pets, but

281
00:16:26,820 --> 00:16:28,700
it is becomes quite famous.

282
00:16:28,740 --> 00:16:30,110
it's called like golden pets.

283
00:16:30,300 --> 00:16:33,180
They just want to follow this
golden pads and bring their

284
00:16:33,180 --> 00:16:36,550
implications to the platform,
consume the services and that's all.

285
00:16:37,020 --> 00:16:40,500
Like our platform needs to address
this kind of developers needs.

286
00:16:40,620 --> 00:16:44,665
And there was this another persona,
what we can call Adaptive users.

287
00:16:44,975 --> 00:16:49,495
So adaptive users are like, they're happy
about what you provide, but they also

288
00:16:49,495 --> 00:16:53,285
want to tweak a little bit things to
have a better fit for their own project.

289
00:16:53,555 --> 00:16:56,785
So you need to think about how
you can build services that are

290
00:16:56,815 --> 00:16:58,775
configurable and address their needs.

291
00:16:58,935 --> 00:17:02,885
If you think about this golden path,
for example, this type of persona is.

292
00:17:03,495 --> 00:17:07,585
Let's say they're happy with how, how they
build their application on the platform,

293
00:17:07,585 --> 00:17:12,135
happy they have the containerization
work, but they maybe want to, bring

294
00:17:12,155 --> 00:17:16,725
this, they want to tweak the testing
bits because their use case requires

295
00:17:16,785 --> 00:17:21,295
something a little bit different, and you
need to address, bring this flexibility

296
00:17:21,315 --> 00:17:25,135
and freedom to them so that they can
actually, They can actually achieve

297
00:17:25,195 --> 00:17:26,975
what they need from your platform.

298
00:17:26,975 --> 00:17:31,435
So they, they were quite happy when
actually we bring these services in a

299
00:17:31,435 --> 00:17:34,285
reusable components, a configurable way.

300
00:17:34,285 --> 00:17:35,395
They will say Oh, that's great.

301
00:17:35,395 --> 00:17:38,655
I can tweak the things that I need and
I can get the things that I, there's

302
00:17:38,665 --> 00:17:40,405
off the shelf things that actually also.

303
00:17:40,810 --> 00:17:43,610
No, I need, and I can bring
those things together and achieve

304
00:17:43,610 --> 00:17:45,800
my, achieve what I said to do.

305
00:17:46,400 --> 00:17:50,380
And that was on the other side
of the, spectrum, what we can

306
00:17:50,380 --> 00:17:52,460
call these like innovative users.

307
00:17:52,770 --> 00:17:57,791
They were like always on the edge,
following the new, new products or the

308
00:17:57,791 --> 00:18:02,080
new, frameworks coming in and they want to
try these things to see if they want, if

309
00:18:02,140 --> 00:18:06,550
this is more, helpful for their projects,
if it's going to make their life easier.

310
00:18:06,800 --> 00:18:10,620
So you need to have this kind of
balance in your platform and address

311
00:18:10,640 --> 00:18:15,320
also give them enough flexible
flexibility and freedom to, to

312
00:18:15,320 --> 00:18:17,150
make them this kind of experiments.

313
00:18:17,870 --> 00:18:22,600
And also set them a way to, contribute
their learning to the platform back

314
00:18:22,600 --> 00:18:26,800
so that everybody can actually get
benefit of what they learned, what

315
00:18:26,800 --> 00:18:28,750
they experimented and what they say.

316
00:18:29,040 --> 00:18:33,620
So when we say that we treat platform as
a product, we must recognize that we have

317
00:18:33,650 --> 00:18:38,800
different type of users and what we, This
one size fits all might not actually,

318
00:18:39,410 --> 00:18:41,700
wouldn't work, but it would never work.

319
00:18:42,060 --> 00:18:46,200
One size fits all in this, in this
platform concept is not going to help us.

320
00:18:46,230 --> 00:18:51,310
So we have different teams with different
needs and a successful implementation of

321
00:18:51,320 --> 00:18:53,840
platform can address all these, needs.

322
00:18:54,290 --> 00:18:56,710
And I can already imagine some
of the questions in the chat.

323
00:18:56,750 --> 00:18:59,910
you keep talking about the team
being the smallest unit and you

324
00:18:59,910 --> 00:19:04,330
keep referring to us focusing on
the developers and talking to them.

325
00:19:04,740 --> 00:19:07,930
the team is still the smallest unit,
but you need to talk to individual

326
00:19:07,930 --> 00:19:11,080
users, you need to talk to individual
developers in order to understand

327
00:19:11,370 --> 00:19:14,790
different perspectives on the experience
that is happening within the team.

328
00:19:15,310 --> 00:19:17,800
but don't forget that principle,
it's really important.

329
00:19:17,810 --> 00:19:19,250
The team is the smallest unit.

330
00:19:20,140 --> 00:19:24,240
And, while you need to treat the
platform as a product and go and talk to

331
00:19:24,280 --> 00:19:30,350
individual representatives of the team,
what you want to focus on is how this

332
00:19:30,380 --> 00:19:36,985
developer freedom For how this development
freedom, applies to the individual teams.

333
00:19:37,245 --> 00:19:40,865
And the way you do this, you don't
build a platform for everyone.

334
00:19:40,945 --> 00:19:43,575
in marketing, they say, you should
try to build a product for everyone.

335
00:19:43,585 --> 00:19:45,525
You build nothing for no one.

336
00:19:45,985 --> 00:19:47,995
so the same is valid for platforms.

337
00:19:47,995 --> 00:19:52,625
When you build a platform, identify the
different groups of teams that are somehow

338
00:19:52,625 --> 00:19:56,725
similar, they may be working in the same
domain, using the same technology stack.

339
00:19:57,355 --> 00:20:00,955
Take one of them as a representative
and try to build with them.

340
00:20:01,285 --> 00:20:04,485
Because if you build something that
works for them, most probably with

341
00:20:04,585 --> 00:20:07,885
some little tweaks here and there,
it is going to work for everyone.

342
00:20:08,255 --> 00:20:11,415
Choose a team that you're going
to serve and build the thinnest

343
00:20:11,595 --> 00:20:12,995
viable platform for them.

344
00:20:13,695 --> 00:20:16,355
Again, it could be as
simple as a wiki page.

345
00:20:16,645 --> 00:20:19,985
What you see here is, from a
few years ago, I think this

346
00:20:20,005 --> 00:20:22,585
is in the winter of 2018.

347
00:20:22,925 --> 00:20:27,165
We were working in Finland with an
insurance organization and what in this

348
00:20:27,165 --> 00:20:32,065
room on the left table, the long table,
you have a bunch of people and they are

349
00:20:32,095 --> 00:20:36,105
actually one streamlined team building
an application and one enabling team.

350
00:20:36,795 --> 00:20:40,845
That is helping this streamline
team to understand all of the

351
00:20:41,645 --> 00:20:44,375
architectural patterns and good
practices they need to follow.

352
00:20:44,865 --> 00:20:48,915
and on the right hand side, on the
table in the corner, you see the

353
00:20:48,915 --> 00:20:50,395
representatives of the platform team.

354
00:20:50,705 --> 00:20:53,925
So what is, what's happening
there was that they worked for a

355
00:20:53,925 --> 00:20:56,435
period of time together, which in.

356
00:20:56,770 --> 00:20:59,620
team topology terms,
we call collaboration.

357
00:20:59,910 --> 00:21:04,110
it's a close collaboration between
two teams and the platform team built

358
00:21:04,200 --> 00:21:09,080
just the thinnest viable platform that
this application team needed in order

359
00:21:09,080 --> 00:21:13,340
to run their application production,
to develop it and deploy it and

360
00:21:13,340 --> 00:21:15,610
run it in production, nothing else.

361
00:21:16,020 --> 00:21:19,910
The product owner had a lot of
drive, I could build this and that.

362
00:21:20,600 --> 00:21:22,290
And we asked them, don't do it.

363
00:21:22,620 --> 00:21:27,010
If you have an idea about a new platform
service to build, go and ask the team.

364
00:21:27,060 --> 00:21:28,960
It's just there on the other table.

365
00:21:29,240 --> 00:21:30,130
Would they use it?

366
00:21:30,600 --> 00:21:31,790
What they actually need?

367
00:21:31,870 --> 00:21:33,570
would it make their life easier?

368
00:21:33,860 --> 00:21:35,350
Would it speed their development?

369
00:21:35,790 --> 00:21:36,970
And if yes, build it.

370
00:21:36,990 --> 00:21:40,530
If not, put it somewhere on the
backlog and we can talk about

371
00:21:40,530 --> 00:21:41,700
it when somebody asks for it.

372
00:21:43,110 --> 00:21:47,230
another aspect of creating a
platform as a product is if you

373
00:21:47,230 --> 00:21:52,360
think about it, real life, the more
competition there is amongst products.

374
00:21:53,120 --> 00:21:55,900
The better those products become,
and I'm not saying that Coke

375
00:21:55,940 --> 00:21:57,900
is better or Pepsi is better.

376
00:21:57,900 --> 00:22:01,670
It's definitely not good for your
health, but the fact is, whenever

377
00:22:01,670 --> 00:22:05,200
you have products that, are in
a competitive environment, they

378
00:22:05,220 --> 00:22:06,380
keep getting better and better.

379
00:22:06,440 --> 00:22:07,670
Think about Android and iPhones.

380
00:22:08,950 --> 00:22:12,540
they get better because of that
competition to offer a better

381
00:22:12,540 --> 00:22:15,180
experience, more value to their users.

382
00:22:15,480 --> 00:22:18,800
You want something similar when
it comes to platform services.

383
00:22:19,450 --> 00:22:20,620
some people call this.

384
00:22:21,085 --> 00:22:24,475
Make the platform optional,
make your product use optional.

385
00:22:25,025 --> 00:22:27,275
some people will say, but no,
we're in a secure environment.

386
00:22:27,295 --> 00:22:28,515
We cannot make it optional.

387
00:22:28,525 --> 00:22:29,115
That's fine.

388
00:22:29,875 --> 00:22:32,185
Think about making the service optional.

389
00:22:32,865 --> 00:22:34,865
So it still needs to be on that platform.

390
00:22:35,215 --> 00:22:40,045
Maybe somebody will come up with a better
idea of how that service can be designed.

391
00:22:40,595 --> 00:22:46,545
Open up that opportunity for internal
competition in a healthy way so

392
00:22:46,545 --> 00:22:50,065
that your platform services really
fulfill the three jobs we talked

393
00:22:50,065 --> 00:22:55,335
about, making more independent and
empowered, reducing the cognitive load

394
00:22:55,365 --> 00:22:57,685
and speeding up the flow of value.

395
00:22:58,555 --> 00:23:01,965
And don't forget, as we talked about,
it's a little bit earlier with,

396
00:23:02,165 --> 00:23:03,825
the slide about worldly mapping.

397
00:23:04,590 --> 00:23:08,420
Everything in our life, and
technology including, is evolving.

398
00:23:08,740 --> 00:23:12,600
It gets better and better, and eventually,
things we considered innovation ten

399
00:23:12,600 --> 00:23:14,250
years ago, they are a commodity.

400
00:23:14,650 --> 00:23:16,000
Don't build a commodity.

401
00:23:16,310 --> 00:23:19,930
Figure out which platform services
can be consumed from outside,

402
00:23:20,180 --> 00:23:23,850
and focus on building platform
services that actually makes sense.

403
00:23:24,115 --> 00:23:27,275
because he said something really
important and true about platforms.

404
00:23:27,795 --> 00:23:31,475
for your information, there's a lot
more to platforms than people think.

405
00:23:31,725 --> 00:23:33,085
Platforms are like onions.

406
00:23:33,435 --> 00:23:34,535
Onions have layers.

407
00:23:34,815 --> 00:23:36,105
Platforms have layers too.

408
00:23:36,805 --> 00:23:39,600
And, I think, I'll go back
to the slide that I presented

409
00:23:39,600 --> 00:23:41,210
earlier about the platform team.

410
00:23:41,900 --> 00:23:44,660
Remember, we said a platform
team is actually a grouping

411
00:23:44,660 --> 00:23:46,070
of multiple different teams.

412
00:23:46,100 --> 00:23:48,740
You have Stream Aligned teams
building their own service,

413
00:23:48,950 --> 00:23:50,260
their own platform service.

414
00:23:50,960 --> 00:23:56,560
Those platform teams, they have cognitive
load, hey, they have their own needs.

415
00:23:57,330 --> 00:24:01,690
If you think about the generic
representation of the technology stack

416
00:24:01,690 --> 00:24:07,340
in a company, in an organization,
You would have, a three layered cake.

417
00:24:07,890 --> 00:24:11,250
Top layer being the applications,
the middle layer being some platform

418
00:24:11,250 --> 00:24:13,220
services, which could be quite a lot.

419
00:24:13,650 --> 00:24:15,870
And you could have quite a
lot of platform teams here.

420
00:24:16,240 --> 00:24:17,630
and then you have the infrastructure.

421
00:24:17,880 --> 00:24:18,500
But wait a second.

422
00:24:19,410 --> 00:24:24,690
why do we try to make the life of the
StreamAlign product development teams,

423
00:24:24,690 --> 00:24:29,720
the teams building applications easier
by exposing services and we don't do

424
00:24:29,760 --> 00:24:31,740
this for the developers of the platform?

425
00:24:32,110 --> 00:24:34,350
Developer of a platform
is still a developer.

426
00:24:34,880 --> 00:24:39,190
Development experience needs to
focus on reducing cognitive load,

427
00:24:39,230 --> 00:24:42,040
making things easier for the people
building the platform as well.

428
00:24:42,690 --> 00:24:47,800
So platform engineering, I
would argue, should focus also

429
00:24:47,870 --> 00:24:50,020
on the infrastructure layer.

430
00:24:50,190 --> 00:24:54,040
You should think about how can I make
infrastructure services consumable,

431
00:24:54,660 --> 00:25:00,470
easy to, to identify, easy to consume,
just like the way the platform,

432
00:25:00,550 --> 00:25:03,840
developers are trying to make the life
of the application developers easy.

433
00:25:04,335 --> 00:25:05,735
So think about layers.

434
00:25:05,795 --> 00:25:08,735
It's not just one platform,
it's multiple platforms.

435
00:25:09,055 --> 00:25:13,915
Each one, consumes the one from below
all the way to your final customer.

436
00:25:16,725 --> 00:25:20,675
With when we are talking about like the
multiple teams, having the communication

437
00:25:20,675 --> 00:25:22,685
between multiple teams can be hard.

438
00:25:23,745 --> 00:25:27,865
Thinking about like why we are
building APIs between services to

439
00:25:27,915 --> 00:25:32,745
actually make the communications better
and can also think the same, same

440
00:25:32,745 --> 00:25:34,505
logic with the, between the teams.

441
00:25:34,835 --> 00:25:41,285
So, we can find what about team topology
is called team API about what the team

442
00:25:41,285 --> 00:25:44,545
is about, what they are working on,
what kind of capabilities they are

443
00:25:44,545 --> 00:25:48,825
serving, what kind of, what kind of
things, what kind of services they have

444
00:25:48,825 --> 00:25:53,445
in the road map, so that if one team
would like to consume a service from

445
00:25:53,445 --> 00:25:58,525
the other team, they can actually, read
the team API, understand what they're

446
00:25:58,565 --> 00:26:00,765
about and actually get their results.

447
00:26:01,115 --> 00:26:06,065
And so find their way without
actually, really trying to increase the

448
00:26:06,065 --> 00:26:08,085
communication lines between the team.

449
00:26:08,305 --> 00:26:13,205
So team API has a really nice, template
on the team topologies GitHub page.

450
00:26:13,205 --> 00:26:17,265
If you would like to, if you'd like
to check it, it seems so simple, but

451
00:26:17,265 --> 00:26:20,745
it is quite powerful when actually
these teams are getting team numbers

452
00:26:20,745 --> 00:26:22,005
are getting increased and increased.

453
00:26:23,005 --> 00:26:26,555
Since we are talking about teams
and also mentioned about this, how

454
00:26:26,555 --> 00:26:28,575
platforms are evolved over time.

455
00:26:29,395 --> 00:26:34,185
we need to acknowledge that every
product at the beginning, especially

456
00:26:34,185 --> 00:26:38,955
that they might have, they might
be not so intuitive or not easy.

457
00:26:39,340 --> 00:26:40,800
Enough for the end users.

458
00:26:40,990 --> 00:26:46,420
So platform may come with their own this
kind of complexities and learning curve.

459
00:26:46,620 --> 00:26:49,660
So we need to actually bridge
the, bridge this gap between

460
00:26:49,660 --> 00:26:51,420
platform and it's end users.

461
00:26:51,430 --> 00:26:53,550
And that's where the
enabling team concepts.

462
00:26:53,865 --> 00:26:54,825
comes into play.

463
00:26:54,965 --> 00:26:59,515
So their responsibility is to, enable
the users to get the, to consume

464
00:26:59,515 --> 00:27:04,465
the platform services, leverage the
platform services better and easier.

465
00:27:04,755 --> 00:27:10,095
And, while the enabling team is helping,
enable the team, enable the development

466
00:27:10,095 --> 00:27:14,515
team, they also get more insights about
how the development team is consuming the

467
00:27:14,515 --> 00:27:19,215
platform, how, what they can, what kind
of services that they would need, what is

468
00:27:19,215 --> 00:27:24,255
their daily challenges, and they can also
feed this into back to the platform team.

469
00:27:24,555 --> 00:27:29,905
How you can form an enabling team could
vary, but It could be something like a

470
00:27:29,905 --> 00:27:34,125
couple of individuals from platform teams
and working with the development teams.

471
00:27:34,125 --> 00:27:37,845
But the important thing is that, that
collaboration should be time box.

472
00:27:37,845 --> 00:27:42,805
It shouldn't be like a, Commands and
months long collaboration, because

473
00:27:42,845 --> 00:27:44,515
one is collaboration is expensive.

474
00:27:44,545 --> 00:27:47,895
That means these individuals are
away from their platform services

475
00:27:47,955 --> 00:27:52,935
development, roles, but also that
this development teams will start

476
00:27:52,975 --> 00:27:56,805
become more and more dependable to
those individuals in enabling team.

477
00:27:57,035 --> 00:28:01,870
The aim of this team is to bring these
development teams and make them self

478
00:28:01,870 --> 00:28:06,895
sufficient, enable them enough to
consume the platform and, and, basically

479
00:28:06,935 --> 00:28:10,815
continue evolving the platform for
the better based on their learning.

480
00:28:11,765 --> 00:28:13,935
Is there anything you want to add, Mel?

481
00:28:13,935 --> 00:28:19,005
no, I would jump to the next principle
because we are, quite ahead in time.

482
00:28:19,075 --> 00:28:21,135
So the last principle we're
going to talk about is that,

483
00:28:21,645 --> 00:28:23,435
Team topology is about evolution.

484
00:28:23,525 --> 00:28:25,475
It is, tracking the evolution of teams.

485
00:28:25,475 --> 00:28:27,165
It's not about labeling the teams.

486
00:28:27,435 --> 00:28:31,075
If you're just looking for
labels, look in other places.

487
00:28:31,405 --> 00:28:32,615
Team topology is a verb.

488
00:28:32,715 --> 00:28:33,975
It is a continuous effort.

489
00:28:34,035 --> 00:28:39,475
And the easiest way for me to illustrate
this is by making sourdough bread.

490
00:28:39,695 --> 00:28:43,415
We all love sourdough bread, or
majority of people love sourdough bread.

491
00:28:43,705 --> 00:28:46,205
And if you ever tried to make
sourdough, It's a continuous

492
00:28:46,275 --> 00:28:50,145
effort of perfection, every single
time you try to make it better.

493
00:28:50,555 --> 00:28:52,465
In the beginning, it might be a very.

494
00:28:53,200 --> 00:28:57,210
Very different, very hard and not
necessarily giving you the right results.

495
00:28:57,620 --> 00:29:01,610
So in topologies, applying topologies
to your organization is the same thing.

496
00:29:02,270 --> 00:29:06,520
Just like you need bread every single
day, you may need every single day to,

497
00:29:06,570 --> 00:29:09,460
to tackle the challenges of another team.

498
00:29:09,740 --> 00:29:12,820
Because you have a lot of teams, you
have complex architectures that are

499
00:29:12,850 --> 00:29:15,430
developed with a big number of themes.

500
00:29:15,800 --> 00:29:17,130
you can't change things.

501
00:29:18,010 --> 00:29:21,060
One team at a time, you can't
change things as a big bank.

502
00:29:21,070 --> 00:29:25,710
You need to take it as a continuous
effort, looking at the patterns, looking

503
00:29:25,710 --> 00:29:30,290
at how you can make things better and
better with what you're uncovering.

504
00:29:31,180 --> 00:29:32,980
So that was the last principle.

505
00:29:33,190 --> 00:29:36,600
And I'll leave you with this statement
that we want to make with Johnson here.

506
00:29:36,960 --> 00:29:41,650
We want to advocate and argue that
platform engineering is a culture

507
00:29:41,650 --> 00:29:43,220
of building platform services.

508
00:29:43,655 --> 00:29:46,255
That are focused on these four things.

509
00:29:46,485 --> 00:29:47,745
They're easy to consume.

510
00:29:48,235 --> 00:29:50,885
They reduce the cognitive
load of those consuming them.

511
00:29:51,375 --> 00:29:53,095
They are continuously being involved.

512
00:29:53,675 --> 00:29:55,085
And they're economically viable.

513
00:29:55,695 --> 00:30:00,225
If you approach platform engineering like
this, and borrow, like an artist, from

514
00:30:00,255 --> 00:30:03,765
all these principles that we shared, that
come from the Team Topologies book and

515
00:30:03,765 --> 00:30:08,145
the community, You are going to succeed
and you're going to be the next success

516
00:30:08,155 --> 00:30:12,705
story about how platform engineering
changed, the future of an organization.

517
00:30:13,705 --> 00:30:15,115
So with this, we're going to leave you.

518
00:30:16,055 --> 00:30:19,655
Thank you for listening to us,
can reach to us with, my email or

519
00:30:19,665 --> 00:30:23,615
LinkedIn, or you can also book time
as well, if you want to discuss more.

520
00:30:23,905 --> 00:30:25,605
This, so thank you for that.

521
00:30:26,445 --> 00:30:27,115
Thank you everyone.

522
00:30:27,415 --> 00:30:27,855
Bye bye.

