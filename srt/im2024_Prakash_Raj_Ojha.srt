1
00:00:00,750 --> 00:00:01,500
Hello, everyone.

2
00:00:02,490 --> 00:00:08,260
A warm welcome to Conf42,
Incident Management 2024.

3
00:00:09,140 --> 00:00:12,099
Thank you all for joining me
today for my presentation.

4
00:00:12,770 --> 00:00:17,210
My name is Prakash Oja, and the
topic of my presentation today is

5
00:00:18,290 --> 00:00:23,760
AI Driven Code Review and Quality
Assurance, Revolutionizing Software

6
00:00:23,760 --> 00:00:30,570
Development, A New Era in Software
Engineering, Efficiency and Quality.

7
00:00:32,330 --> 00:00:35,970
AI really has taken the world by
storm over the last few years.

8
00:00:37,220 --> 00:00:40,790
It has become an inescapable
part of the software development

9
00:00:40,790 --> 00:00:43,470
landscape, including code review.

10
00:00:43,830 --> 00:00:45,440
you cannot just avoid hearing about it.

11
00:00:47,590 --> 00:00:50,959
AI offers unique opportunities
to revolutionize quality

12
00:00:50,979 --> 00:00:56,140
assurance, ushering in an era of
higher efficiency and quality.

13
00:00:57,140 --> 00:01:00,720
presentation today is divided
into the following sections.

14
00:01:02,439 --> 00:01:06,609
About the paradigm shift that's happening
in software development due to AI.

15
00:01:07,800 --> 00:01:10,320
Why do we need AI in code review?

16
00:01:11,689 --> 00:01:14,089
The key benefits of AI driven code review.

17
00:01:15,860 --> 00:01:22,049
How is AI transforming testing with
its presence in quality assurance?

18
00:01:23,439 --> 00:01:25,790
How do we quantify the AI revolution?

19
00:01:26,219 --> 00:01:27,809
What are the metrics for success?

20
00:01:29,259 --> 00:01:33,220
And then we'll move on to real world
application of AI driven code review.

21
00:01:34,799 --> 00:01:38,839
What are the challenges and
considerations with AI driven code review?

22
00:01:39,820 --> 00:01:42,390
The future of AI driven
software development.

23
00:01:43,450 --> 00:01:47,460
And finally, I'll be offering
my concluding remarks.

24
00:01:48,460 --> 00:01:53,545
paradigm shift in software development
The software development landscape is

25
00:01:53,575 --> 00:01:58,655
undergoing a profound, a significant
transformation due to the rapid

26
00:01:58,685 --> 00:02:02,774
advancement in artificial intelligence
and machine learning technologies.

27
00:02:03,505 --> 00:02:08,324
Every day, you have new AI tools
coming out and they are each

28
00:02:08,334 --> 00:02:09,565
more advanced than the others.

29
00:02:10,735 --> 00:02:15,704
Traditionally, developers have relied
on manual code reviews and human

30
00:02:15,704 --> 00:02:17,604
driven quality assurance processes.

31
00:02:18,470 --> 00:02:23,390
Which, while effective, are
slow due to their very nature.

32
00:02:24,329 --> 00:02:28,240
They are prone to errors and
they are very resource intensive.

33
00:02:30,380 --> 00:02:34,600
AI driven tools are now enabling
software development teams

34
00:02:35,140 --> 00:02:36,250
to automate these processes.

35
00:02:36,250 --> 00:02:41,280
AI tools can analyze vast
amounts of code in real time.

36
00:02:42,219 --> 00:02:46,200
They can detect patterns that would
likely go unnoticed by human reviewers.

37
00:02:47,490 --> 00:02:51,220
and they provide immediate feedback
during the development itself.

38
00:02:52,370 --> 00:02:57,100
This shift towards AI powered
development is not only enhancing the

39
00:02:57,110 --> 00:03:02,180
accuracy and speed of code reviews,
but also revolutionizing how software

40
00:03:02,939 --> 00:03:09,819
is developed, tested, and maintained,
paving the way for higher productivity.

41
00:03:10,410 --> 00:03:12,070
And a better quality products.

42
00:03:13,070 --> 00:03:14,580
need for AI in code review.

43
00:03:16,600 --> 00:03:18,299
The challenges of manual code review.

44
00:03:19,309 --> 00:03:24,470
Traditional code review processes rely
on developers manually checking each

45
00:03:24,470 --> 00:03:27,619
other's code for issues like bugs.

46
00:03:28,620 --> 00:03:32,049
performance bottlenecks and
security vulnerabilities.

47
00:03:32,939 --> 00:03:40,010
This method is effective in smaller
codebase, but as the codebase grows

48
00:03:40,040 --> 00:03:42,920
larger and larger, it becomes inefficient.

49
00:03:43,920 --> 00:03:45,170
AI as a solution.

50
00:03:46,850 --> 00:03:50,250
There are tools such as
Amazon CodeGuru and DeepCode.

51
00:03:51,735 --> 00:03:56,615
That lever is advanced algorithms to
automate this process of reviewing

52
00:03:56,615 --> 00:04:00,845
the code allowing for faster
and more accurate code analysis.

53
00:04:02,135 --> 00:04:06,575
These tools can scan through thousands
of lines of codes in minutes,

54
00:04:07,495 --> 00:04:14,775
identifying issues such as memory leaks,
inefficient algorithms, improper error

55
00:04:14,915 --> 00:04:19,395
handling, and security vulnerabilities
with a very high level of precision.

56
00:04:20,395 --> 00:04:21,795
What are the impacts of

57
00:04:24,115 --> 00:04:26,065
AI tools in software development?

58
00:04:27,010 --> 00:04:32,850
The AI driven code reviews reduce
the time by 75%, up to 75%.

59
00:04:33,830 --> 00:04:40,280
this allows for faster iteration
of development, quicker delivery

60
00:04:40,400 --> 00:04:44,850
of features, new features, and
quicker delivery, for bug fixes.

61
00:04:46,490 --> 00:04:52,375
And not only do these tools catch common
errors, But they can also learn from the

62
00:04:52,375 --> 00:04:58,335
past reviews, improving their ability
to detect complex issues over time.

63
00:04:58,695 --> 00:05:01,755
So as the time goes, they
get better and better.

64
00:05:01,965 --> 00:05:03,595
They improve further.

65
00:05:04,595 --> 00:05:06,915
What are the key benefits
of AI driven code review?

66
00:05:09,505 --> 00:05:11,685
First of all, enhanced code quality.

67
00:05:12,355 --> 00:05:17,535
AI tools continuously learn from
fast code repositories, identifying

68
00:05:17,535 --> 00:05:22,090
potential problems, and with greater
accuracy than traditional methods.

69
00:05:23,990 --> 00:05:26,890
They improve the development
lifecycle, making them faster.

70
00:05:27,680 --> 00:05:34,200
By automating reviews, AI allows
teams to iterate faster while

71
00:05:34,600 --> 00:05:37,420
maintaining a high quality without
compromising on the quality.

72
00:05:39,740 --> 00:05:42,430
AI, can also offer predictive analytics.

73
00:05:42,880 --> 00:05:48,030
AI uses historical data to
predict potential bottlenecks

74
00:05:48,400 --> 00:05:51,000
and bugs before they can happen.

75
00:05:52,150 --> 00:05:54,210
This allows developers to be proactive.

76
00:05:54,390 --> 00:05:59,410
How is AI, in quality
assurance transforming testing?

77
00:06:00,710 --> 00:06:05,630
AI automates test case generation,
prioritizes tests based on recent

78
00:06:05,630 --> 00:06:11,200
code changes, and it enables
self healing tests that adapt to

79
00:06:11,200 --> 00:06:13,290
changes in UI or code structure.

80
00:06:15,310 --> 00:06:21,660
AI can also analyze historical test data
to predict areas of the code most likely

81
00:06:21,660 --> 00:06:29,290
to contain bugs, allowing QA teams to
focus their effort more efficiently.

82
00:06:30,290 --> 00:06:34,230
offers enhanced test code coverage.

83
00:06:35,975 --> 00:06:41,845
AI driven testing tools automatically
generate diverse sets of test cases and

84
00:06:41,855 --> 00:06:46,335
they ensure that edge cases and rare
scenarios are adequately covered, which

85
00:06:46,335 --> 00:06:49,795
can get missed by a human reviewer.

86
00:06:51,835 --> 00:06:54,745
This leads to more, more
comprehensive testing and

87
00:06:54,745 --> 00:06:56,645
higher overall code reliability.

88
00:06:58,395 --> 00:07:04,105
Traditional testing methods focus on
predefined cases, which means they can

89
00:07:04,115 --> 00:07:10,265
miss potential bugs that can arise from,
uncommon user behaviors or interactions.

90
00:07:11,265 --> 00:07:13,875
How do we quantify the AI revolution?

91
00:07:14,425 --> 00:07:17,305
How do we measure the
success, the matrices?

92
00:07:18,875 --> 00:07:20,635
first of all, the bug detection rate.

93
00:07:21,614 --> 00:07:24,725
AI driven tools improve
bug detection rate by 35.

94
00:07:24,875 --> 00:07:25,925
7%.

95
00:07:26,765 --> 00:07:30,485
Identifying subtle issues that
manual reviews often miss.

96
00:07:32,685 --> 00:07:34,005
Development cycle time.

97
00:07:34,805 --> 00:07:38,475
AI reduces development cycles by 33.

98
00:07:38,475 --> 00:07:39,535
3 by one third.

99
00:07:40,375 --> 00:07:42,805
This allows teams to
shift features faster.

100
00:07:44,085 --> 00:07:45,105
Code review time.

101
00:07:45,190 --> 00:07:50,900
AI automates review process,
cutting review times by 75%.

102
00:07:52,490 --> 00:07:54,080
Test case generation time.

103
00:07:55,590 --> 00:07:58,830
Automated testing powered by
AI reduces the time spent on

104
00:07:58,950 --> 00:08:00,650
test case generation by 75%.

105
00:08:01,550 --> 00:08:06,090
About by three quarters of time
leading to quicker iterations

106
00:08:06,120 --> 00:08:07,350
and better test coverage.

107
00:08:08,230 --> 00:08:11,330
And finally, develop
developer productivity.

108
00:08:12,390 --> 00:08:17,140
Developers can write up to 50 percent more
lines of code per day with AI support.

109
00:08:18,209 --> 00:08:22,760
They can now focus on more complex
and more value added tasks.

110
00:08:23,760 --> 00:08:26,940
What are the real world applications
of AI driven code review?

111
00:08:27,840 --> 00:08:33,560
Real world applications of AI driven
tools like Amazon's CodeGuru have

112
00:08:33,560 --> 00:08:37,759
significantly impacted organizations
by improving the quality of code

113
00:08:37,770 --> 00:08:39,660
and reducing system downtime.

114
00:08:40,819 --> 00:08:46,490
For example, Amazon CodeGuru alone
has identified, it has been found

115
00:08:46,500 --> 00:08:50,290
to have identified 90 percent of
the critical issues in the code.

116
00:08:51,120 --> 00:08:53,930
leading to a 50 percent
reduction in downtime.

117
00:08:55,540 --> 00:09:01,150
These AI tools can scale across
large projects, helping organizations

118
00:09:01,169 --> 00:09:03,570
ensure code consistency and security.

119
00:09:04,570 --> 00:09:08,540
with AI tools, we also have some
challenges and some considerations,

120
00:09:09,600 --> 00:09:11,389
primarily adoption barriers.

121
00:09:13,025 --> 00:09:19,315
In order to adopt AI tools, teams must
invest in training and infrastructure

122
00:09:19,315 --> 00:09:24,295
to effectively integrate AI driven tools
into existing development environment.

123
00:09:24,925 --> 00:09:25,874
And this is not easy.

124
00:09:27,715 --> 00:09:28,744
Tool integration.

125
00:09:30,905 --> 00:09:35,615
The ability of AI tools to learn
from a unique code base requires

126
00:09:35,615 --> 00:09:37,324
continuous improvement and maintenance.

127
00:09:38,054 --> 00:09:39,969
This requires, time and effort.

128
00:09:42,450 --> 00:09:43,470
Continuous learning.

129
00:09:44,740 --> 00:09:47,970
AI tools need constant training
and updates as they encounter

130
00:09:47,970 --> 00:09:52,369
new coding patterns, ensuring
their long term effectiveness.

131
00:09:53,369 --> 00:09:55,779
The future of AI driven
software development.

132
00:09:57,199 --> 00:10:01,639
As AI evolves, it will become
increasingly embedded in every aspect

133
00:10:01,639 --> 00:10:02,909
of the software development lifecycle.

134
00:10:04,124 --> 00:10:10,404
including CICD, productive maintenance,
and automated cost standardization.

135
00:10:13,014 --> 00:10:17,594
AI driven personalized developer
environments and tools enable

136
00:10:17,614 --> 00:10:21,854
faster, more creative software
development while maintaining very

137
00:10:21,854 --> 00:10:24,794
high standard of quality and security.

138
00:10:26,924 --> 00:10:31,934
Future advancement will continue to reduce
development cycle times, increase code

139
00:10:31,944 --> 00:10:35,084
quality, and enable faster time to market.

140
00:10:36,084 --> 00:10:37,664
Finally, the concluding remarks.

141
00:10:38,719 --> 00:10:42,089
Artificial intelligence is not
just enhancing software development

142
00:10:42,099 --> 00:10:44,879
processes, it's transforming them.

143
00:10:45,549 --> 00:10:49,529
The ability of AI driven tools
to accelerate development cycles,

144
00:10:50,099 --> 00:10:54,799
enhance code quality, and improve
overall productivity is already making

145
00:10:54,799 --> 00:10:56,339
waves across the software industry.

146
00:10:57,499 --> 00:11:01,479
AI powered code review and
quality assurance processes are

147
00:11:01,839 --> 00:11:06,949
bringing unprecedented levels of
efficiency and accuracy to teams.

148
00:11:07,659 --> 00:11:11,729
Allowing the developers to focus
on higher value, creative problem

149
00:11:11,729 --> 00:11:17,719
solving tasks as more and more mundane
tasks is being delegated to AI.

150
00:11:19,439 --> 00:11:23,949
As AI continues to evolve and
mature, it will become an essential

151
00:11:23,949 --> 00:11:28,080
part of the software development
lifecycle, delivering smarter,

152
00:11:28,089 --> 00:11:30,509
faster, and more reliable software.

153
00:11:31,649 --> 00:11:36,279
Organizations that adopt AI driven
tools will not only improve their

154
00:11:36,279 --> 00:11:39,959
development workflows, But also
gain a competitive advantage by

155
00:11:40,459 --> 00:11:42,779
delivering higher quality products.

156
00:11:43,779 --> 00:11:45,629
you very much for joining me today.

