1
00:00:14,200 --> 00:00:19,390
There was a time, not that long ago,
in fact, as recent as six years,

2
00:00:19,640 --> 00:00:24,020
when hybrid DNS required setting
up a DNS solution in the cloud.

3
00:00:24,980 --> 00:00:29,130
This was a quintessential example
of an AWS customer performing

4
00:00:29,509 --> 00:00:36,930
unappreciated heavy lifting until the
severe Route 53 resolver came around.

5
00:00:39,070 --> 00:00:43,150
Welcome to CONF22 Platform
Engineering Conference and thank

6
00:00:43,150 --> 00:00:44,490
you for attending the session.

7
00:00:45,219 --> 00:00:50,030
I'm Arthur Siddiqui, Senior Principal
Software Engineer at Silicon Valley

8
00:00:50,040 --> 00:00:53,059
Bank, Division of First Citizens Bank.

9
00:00:55,400 --> 00:00:58,970
The agenda will cover the original
problem statement when there

10
00:00:59,050 --> 00:01:01,430
wasn't an adequate offer from AWS.

11
00:01:02,940 --> 00:01:07,470
I will introduce the Route23 resolver
service and explain the key concepts.

12
00:01:08,980 --> 00:01:15,380
It will be followed by a solution for
hybrid DNS for multi account setup.

13
00:01:16,320 --> 00:01:20,950
In addition, I'll elaborate on the key
design considerations as well as native

14
00:01:20,950 --> 00:01:23,310
security tools that are available to us.

15
00:01:25,300 --> 00:01:28,890
I'll wrap it up by talking about
a new capability released this

16
00:01:28,890 --> 00:01:31,510
year called Route23 Profiles.

17
00:01:32,510 --> 00:01:38,900
Until the time Route 53 Resolver was
announced, customers had two paths, choose

18
00:01:38,950 --> 00:01:43,779
a marketplace product or come up with
a custom solution to set up hybrid DNS.

19
00:01:45,349 --> 00:01:48,659
The latter, while likely to
be more economical, relied on

20
00:01:48,660 --> 00:01:51,030
setting up DNS servers on EC2s.

21
00:01:51,810 --> 00:01:56,600
The responsibility of setting up
resiliency also fell on the customer.

22
00:01:59,050 --> 00:02:02,740
All these challenges we have
created when ROC 53 Resolver

23
00:02:02,780 --> 00:02:04,640
was announced six years ago.

24
00:02:06,320 --> 00:02:10,320
Before I delve into this topic,
let me do a quick sidebar.

25
00:02:12,810 --> 00:02:18,540
When a BPC is provisioned, the
DOT2 IP is reserved to resolve DS

26
00:02:19,170 --> 00:02:21,160
queries originating from the BPC.

27
00:02:23,329 --> 00:02:26,453
For example, if a VPC has a CIDR of 10.

28
00:02:26,453 --> 00:02:27,307
0.

29
00:02:27,307 --> 00:02:28,161
0.

30
00:02:28,161 --> 00:02:32,429
0 23, the IP 10.

31
00:02:32,510 --> 00:02:33,940
0.

32
00:02:33,989 --> 00:02:34,269
0.

33
00:02:34,409 --> 00:02:37,039
2 is what provides the data's resolution.

34
00:02:38,110 --> 00:02:43,029
This is why, historically, it used to
be called a 2 or a plus 2 resolver.

35
00:02:44,170 --> 00:02:47,390
This has all along been
a default feature of VPC.

36
00:02:48,390 --> 00:02:52,250
It should be noted that if a VPC
has multiple siders, it is the

37
00:02:52,340 --> 00:02:57,450
primary sider where the plus two IP
is what's used for DNS resolution.

38
00:02:59,740 --> 00:03:05,729
Circling back to Route V3 Resolver,
it was announced in November 2018.

39
00:03:06,920 --> 00:03:10,790
This offering was specifically
targeted to simplify DNS for

40
00:03:10,790 --> 00:03:12,110
the hybrid cloud use case.

41
00:03:14,375 --> 00:03:17,655
Any enterprise that ventures into
cloud will almost always have

42
00:03:17,655 --> 00:03:21,735
a hybrid network that is having
both on prem and cloud presence.

43
00:03:22,795 --> 00:03:27,954
This means there is a requirement for on
prem network to resolve workloads in AWS.

44
00:03:29,535 --> 00:03:33,364
Similarly, resources in AWS may
have a requirement to resolve

45
00:03:33,815 --> 00:03:35,535
private DNS records on prem.

46
00:03:37,385 --> 00:03:43,084
This requirement is solved by the
introduction of the Resolver Endpoints.

47
00:03:44,464 --> 00:03:48,454
There are two types of endpoints,
inbound and outbound, and this

48
00:03:48,454 --> 00:03:50,774
terminology is from AWS standpoint.

49
00:03:52,915 --> 00:03:58,524
Inbound Resolver Endpoint is for queries
coming to AWS from on prem network.

50
00:03:59,045 --> 00:04:02,554
It is used to resolve BBC
resources for on prem.

51
00:04:03,695 --> 00:04:09,725
It is important to note that on prem
DNS Must issue recursive instead

52
00:04:09,725 --> 00:04:13,535
of I trade up queries for the
Route three resolvers in market.

53
00:04:13,535 --> 00:04:14,105
Eight points.

54
00:04:15,185 --> 00:04:18,845
On the other hand, VAR Resolver
eight points of queries going

55
00:04:18,845 --> 00:04:21,185
from AWS to Auburn network.

56
00:04:22,565 --> 00:04:25,564
It is used to resolve
private DS records on prem.

57
00:04:27,824 --> 00:04:32,985
These result endpoint manifests at
Elastic Network Interface or ENI.

58
00:04:34,395 --> 00:04:35,960
Therefore, the best practice.

59
00:04:36,590 --> 00:04:41,569
It should provision these endpoints
in every AZ that the VPC spans to.

60
00:04:42,569 --> 00:04:45,619
While I expect the audience
will use infrastructure as code,

61
00:04:45,809 --> 00:04:48,609
the console screenshot is to
illustrate some of the key points.

62
00:04:50,029 --> 00:04:55,049
As Route 53 Resolver is a regional
service and a VPC resource, it

63
00:04:55,049 --> 00:04:58,229
should land in a shared service
account such as Core Network.

64
00:04:59,449 --> 00:05:02,509
As this is an ENI, it
requires a security group.

65
00:05:03,559 --> 00:05:07,884
For the Inbound Resolver Endpoint,
Security Inbound Rules should be open

66
00:05:07,884 --> 00:05:12,054
for 423 for both TCP and UDP protocol.

67
00:05:13,914 --> 00:05:17,884
On the flip side, for Outbound
Resolver Endpoint, Security

68
00:05:17,944 --> 00:05:23,254
Outbound Rules should be open for
423 for both TCP and UDP protocol.

69
00:05:25,394 --> 00:05:29,054
This example shows a VPC
spanning two available resolvers.

70
00:05:30,239 --> 00:05:35,369
The default behavior when provisionally
informed for AWS to grab an IP from

71
00:05:35,369 --> 00:05:38,039
the subject of VPC or alternative.

72
00:05:38,489 --> 00:05:41,759
Alternatively, one can
specify IP from the subnet.

73
00:05:44,149 --> 00:05:48,589
Needless to say, these ENI
get a allocated private ips

74
00:05:49,589 --> 00:05:53,159
out all points are
complemented with a 40 rule.

75
00:05:54,299 --> 00:05:58,499
This 40 rule applies to BBT
traffic destined for on-prem.

76
00:05:59,709 --> 00:06:03,689
This is why on prem NIDA servers need
to be configured under this rule.

77
00:06:05,259 --> 00:06:09,659
In this case, the on prem
NIDA server is listed as 10.

78
00:06:09,660 --> 00:06:10,149
50.

79
00:06:10,149 --> 00:06:10,629
50.

80
00:06:10,799 --> 00:06:11,159
50.

81
00:06:12,159 --> 00:06:15,880
Circling back to the comment how
ENIs are created when Resolver

82
00:06:15,919 --> 00:06:19,720
informs the provision, here
the diagram shows four ENIs.

83
00:06:20,550 --> 00:06:25,780
This is a VPC finding two available zones,
and hence we have a pair of inbound and

84
00:06:25,780 --> 00:06:28,080
outbound And Alva enforce respectively.

85
00:06:30,750 --> 00:06:34,830
And then this shows how this heed
inbound rule should look like For the

86
00:06:34,830 --> 00:06:41,520
inbound endpoint, only traffic on 4 53
promote TCP and UDP protocol is allowed.

87
00:06:43,800 --> 00:06:51,570
This rule assumes that on-prem network is
using a Class A CI of 10.000 slash eight.

88
00:06:52,570 --> 00:06:57,160
There are two other key points that talked
about before we can look at the design.

89
00:06:58,210 --> 00:07:01,750
The first one is, once the resolver
endpoints have been provisioned

90
00:07:01,790 --> 00:07:05,950
in a shared service account, the
question arises, how would it be

91
00:07:05,950 --> 00:07:07,589
shared across the spoke accounts?

92
00:07:09,140 --> 00:07:11,960
Enter Resource Access Manager, or RAM.

93
00:07:12,880 --> 00:07:17,330
This is an AWS service that has a
goal of sharing resources across

94
00:07:17,330 --> 00:07:20,810
accounts within the AWS organization.

95
00:07:23,410 --> 00:07:27,420
Route 23 resolver is one of
many types supported by RAM.

96
00:07:28,480 --> 00:07:32,190
Some of the other examples are
system manager, parameters,

97
00:07:32,380 --> 00:07:35,690
RDS cluster, backup loss, etc.

98
00:07:38,020 --> 00:07:41,060
The second key point is to
understand the concept of a BPC

99
00:07:41,640 --> 00:07:44,230
association to private hostage zones.

100
00:07:45,469 --> 00:07:50,520
In this case, private hostage zones
across all spoke accounts will

101
00:07:50,530 --> 00:07:55,270
need to be associated with a BPC
and shared service account where

102
00:07:55,270 --> 00:07:57,170
the endpoints were provisioned.

103
00:08:00,110 --> 00:08:03,910
It will allow shared service
accounts to resolve private DNS

104
00:08:03,930 --> 00:08:06,890
records across all spoke accounts.

105
00:08:07,890 --> 00:08:10,809
This design encapsulates
the top up to this point.

106
00:08:12,679 --> 00:08:16,840
In the top, it depicts a shared service
account where resolver endpoints have been

107
00:08:16,870 --> 00:08:19,520
provisioned and have UPC spanning two AZs.

108
00:08:21,010 --> 00:08:26,210
In the first use case indicated by blue
arrows, the request originates on prem.

109
00:08:27,500 --> 00:08:31,630
An on prem user is looking up a resource
in one of the two spoke accounts.

110
00:08:33,890 --> 00:08:38,860
On prem DNS server will forward a
request to the resolver's inbox endpoint.

111
00:08:39,980 --> 00:08:44,959
Since the private host zone of spoke
accounts are associated with the VPC

112
00:08:44,969 --> 00:08:50,990
network account, resolution of private
records such as EC2 is possible.

113
00:08:51,990 --> 00:08:56,550
In the second use case indicated
by orange arrows, Request is

114
00:08:56,590 --> 00:08:58,060
originating in a Spoke account.

115
00:08:59,130 --> 00:09:02,470
The EC2 resource is looking
up an on prem system.

116
00:09:03,660 --> 00:09:07,830
There is a forwarding rule for
corporate domain, let's say star.

117
00:09:07,830 --> 00:09:08,060
com42.

118
00:09:08,260 --> 00:09:12,650
io, associated with the
resolver's outbound rule.

119
00:09:14,209 --> 00:09:18,380
In addition, this forwarding
rule is shared with Spoke VPCs

120
00:09:18,890 --> 00:09:20,750
via Resource Access Manager.

121
00:09:23,700 --> 00:09:24,290
The outbound endpoint.

122
00:09:25,690 --> 00:09:29,370
are also configured with the
IP of on prem DNS server.

123
00:09:30,900 --> 00:09:35,419
Early in the deck, IP of on prem
DNS server was set up as 10.

124
00:09:35,480 --> 00:09:35,670
50.

125
00:09:35,720 --> 00:09:35,990
50.

126
00:09:35,990 --> 00:09:37,590
50.

127
00:09:37,590 --> 00:09:45,470
It is important to call out that while
what we have talked so far achieved

128
00:09:45,670 --> 00:09:50,930
DNS resolution in the hybrid setup,
isolation of VPCs still applies.

129
00:09:51,830 --> 00:09:56,260
How packet flows between VPCs is
still needs a networking construct.

130
00:09:57,260 --> 00:09:59,560
That construct is Transit Gateway.

131
00:10:00,360 --> 00:10:05,489
Similarly, networking path between on
prem and edge VPC of a network account

132
00:10:05,810 --> 00:10:08,530
will either via VPN or direct connect.

133
00:10:09,530 --> 00:10:13,759
When it comes to DNS setup, there
are two security tools that should

134
00:10:13,769 --> 00:10:15,349
be a part of your ecosystem.

135
00:10:16,499 --> 00:10:18,249
GuardDuty is the first one.

136
00:10:18,759 --> 00:10:20,359
A server is not a big fan of.

137
00:10:21,134 --> 00:10:25,084
It, to me, represents the pinnacle of how
security products should be delivered.

138
00:10:25,534 --> 00:10:30,114
Single click of a button to enable it,
and it passes through three sets of logs,

139
00:10:30,574 --> 00:10:36,924
including DNS, to identify threats such
as data exfiltration through DNS queries.

140
00:10:39,254 --> 00:10:43,794
Over the years, this service
has had enhancements and extends

141
00:10:43,794 --> 00:10:49,004
its reach into specific services
such as S3, EKS, and RDS.

142
00:10:50,004 --> 00:10:55,014
Security Duel is a Rocket
3 resolver DNS Firewall.

143
00:10:55,834 --> 00:11:00,574
This is a relatively new service
and was announced in early 2021.

144
00:11:01,854 --> 00:11:05,744
It provides the capability to
regulate outbound DNS traffic

145
00:11:06,284 --> 00:11:07,814
originating in the VPCs.

146
00:11:09,584 --> 00:11:14,174
It supports both AWS Managed Domain
Lists as well as the custom one.

147
00:11:16,534 --> 00:11:19,894
Managed Lists is a good way when looking
to reduce a service's DNS traffic.

148
00:11:19,895 --> 00:11:27,684
As with any typical firewall, there
are three action types that can be

149
00:11:27,684 --> 00:11:31,154
configured, allow, block, and alert.

150
00:11:33,554 --> 00:11:37,844
This action can be applicable to
a specific DNS record type or a

151
00:11:37,854 --> 00:11:42,314
broader firewall rule that will
apply to all DNS record types.

152
00:11:45,314 --> 00:11:49,464
The last subtopic I would like to talk
about is the announcement from last April.

153
00:11:51,244 --> 00:11:55,944
AWS announced a new capability
called Route 33 Profiles.

154
00:11:58,494 --> 00:12:04,204
The value proposition is that a profile
allows bundling up private hosting

155
00:12:04,204 --> 00:12:10,064
zone associations, forwarding roles,
and even DNS firewall rule groups.

156
00:12:11,284 --> 00:12:16,474
This profile can then be shared
via Resource Access Manager across

157
00:12:16,474 --> 00:12:18,894
accounts in AWS organization.

158
00:12:21,069 --> 00:12:24,899
While I haven't had a chance to
play with this capability, it

159
00:12:24,899 --> 00:12:29,089
will certainly make the hybrid
design both simpler and cleaner.

160
00:12:31,929 --> 00:12:36,449
There is no escaping DNS and
everyone just expects it to work.

161
00:12:37,189 --> 00:12:41,809
Therefore, to be, to implement a
solution in a resilient manner using

162
00:12:42,059 --> 00:12:47,059
AWS managed services is an excellent
position to take as a platform engineer.

