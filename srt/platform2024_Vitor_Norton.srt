1
00:00:14,820 --> 00:00:17,560
Hello everyone, thanks for joining me.

2
00:00:17,620 --> 00:00:18,780
I'm Vitor Norton.

3
00:00:18,810 --> 00:00:21,569
I'm going to tell you about
the code behind collaborative

4
00:00:21,599 --> 00:00:27,260
components, a little bit about design
patterns as well as web sockets.

5
00:00:28,060 --> 00:00:30,650
So let's get this party started, right?

6
00:00:31,985 --> 00:00:34,775
So just a brief introduction about myself.

7
00:00:34,775 --> 00:00:35,364
I'm Brazilian.

8
00:00:35,635 --> 00:00:38,605
So excuse any English, mistakes.

9
00:00:39,795 --> 00:00:42,154
I'm 10 time winner of Microsoft MVP.

10
00:00:42,755 --> 00:00:46,055
I'm also a developer advocate at SuperViz.

11
00:00:46,745 --> 00:00:52,104
and, but this is my professional
background, the real deal for

12
00:00:52,104 --> 00:00:56,889
this talk is that you need to
know is that I'm a In love.

13
00:00:56,889 --> 00:01:00,249
I'm passionate about
connecting people together.

14
00:01:01,249 --> 00:01:07,789
I'm also highly t of my productivity
tools like Notion, Figma,

15
00:01:08,419 --> 00:01:10,279
Google Docs, Microsoft Office.

16
00:01:10,579 --> 00:01:12,289
I really depend on them.

17
00:01:12,919 --> 00:01:15,619
My whole brain is inside Notion right now.

18
00:01:15,619 --> 00:01:17,959
If I lose my account on notion, I'm dead.

19
00:01:18,889 --> 00:01:21,799
and I love the idea of
working anywhere in the world.

20
00:01:22,009 --> 00:01:23,509
I got to travel a lot.

21
00:01:24,489 --> 00:01:34,199
Because of my work and I had the benefit
of doing some code while I'm still on

22
00:01:34,209 --> 00:01:36,709
Rio de Janeiro and hanging out there.

23
00:01:37,119 --> 00:01:38,129
So this is amazing.

24
00:01:39,179 --> 00:01:41,909
but today I'm not talking much about me.

25
00:01:41,909 --> 00:01:46,929
This was just a quick introduction
to myself for you to understand

26
00:01:47,489 --> 00:01:51,259
how this is important thing for
me, that we have collaborative

27
00:01:51,669 --> 00:01:53,729
components, collaboration components.

28
00:01:55,024 --> 00:01:56,664
What is Collaboration Component?

29
00:01:57,254 --> 00:01:58,184
you know the name.

30
00:01:58,294 --> 00:02:02,154
You may have an idea of what it is.

31
00:02:02,594 --> 00:02:03,724
But let's see.

32
00:02:04,284 --> 00:02:06,104
exactly what it is.

33
00:02:08,944 --> 00:02:14,644
So we have four, I bring, four
examples of collaborative components.

34
00:02:15,104 --> 00:02:20,454
A form element that syncs what
you're typing and what other people

35
00:02:20,454 --> 00:02:22,354
are seeing when you're typing.

36
00:02:22,924 --> 00:02:30,664
so you can use this, let's say, in a
customer support that, The support is

37
00:02:30,664 --> 00:02:37,324
helping someone while on the phone or
something like that to fill a form.

38
00:02:38,404 --> 00:02:40,364
The other one is the who is online.

39
00:02:40,365 --> 00:02:46,914
It's a presence indicator that someone
is in the room together with you.

40
00:02:47,304 --> 00:02:51,214
Someone is looking at this
document, is looking at this page

41
00:02:51,214 --> 00:02:54,229
and you can see Who is online?

42
00:02:54,599 --> 00:02:55,149
The.

43
00:02:56,459 --> 00:02:58,229
The other one is the mouse pointer.

44
00:02:58,489 --> 00:03:01,709
Where you can see, where
people are pointed out.

45
00:03:02,369 --> 00:03:06,399
this is really important for
if you're teaching someone,

46
00:03:06,429 --> 00:03:08,089
if you're assisting someone.

47
00:03:08,709 --> 00:03:14,229
and you can also, merge them
together, like use who is aligned

48
00:03:14,239 --> 00:03:16,499
with mouse pointers at the same time.

49
00:03:17,289 --> 00:03:18,689
you can click on.

50
00:03:19,694 --> 00:03:27,284
The Anna, for example, and go
to her or follow her and see

51
00:03:27,284 --> 00:03:29,124
where her mouse pointer is.

52
00:03:29,994 --> 00:03:34,984
Okay, another component that
we have is contextual comments.

53
00:03:35,194 --> 00:03:42,604
So you can add annotations at any
part of your web page or an element

54
00:03:42,804 --> 00:03:45,044
or perhaps even a 3D environment.

55
00:03:45,729 --> 00:03:50,699
But this, of course, you can
have more components like this.

56
00:03:50,699 --> 00:03:55,749
I just bring some of them for you
to see what we are talking about.

57
00:03:56,264 --> 00:04:00,254
Okay, so you have seen this before, right?

58
00:04:00,494 --> 00:04:08,364
You have seen this on Mario, on Figma, on,
companies are building this because if you

59
00:04:08,374 --> 00:04:14,134
don't, if your application is pushed to
the world for everyone to use and you are

60
00:04:14,134 --> 00:04:20,094
not using collaborative components, Then
you are missing something, extraordinary.

61
00:04:22,164 --> 00:04:27,234
today, specifically, we are going to
break down the code of MousePonders.

62
00:04:27,574 --> 00:04:35,394
We are seeing each level, of its code,
so you can build your own, but mostly

63
00:04:35,534 --> 00:04:38,404
to understand what, what is happening.

64
00:04:38,954 --> 00:04:43,784
Of course, there's some codes that I
will bring, it's not the final code,

65
00:04:43,814 --> 00:04:49,054
it's more a magical demonstration code.

66
00:04:49,724 --> 00:04:56,414
It's not something that Google is
using, the source code of Miro or

67
00:04:56,414 --> 00:04:59,634
Figma, but the idea of it, okay?

68
00:05:02,014 --> 00:05:03,184
So let's break it down.

69
00:05:03,224 --> 00:05:08,154
Let's go to definition and break
down what is mouse pointers.

70
00:05:09,054 --> 00:05:11,114
Oh, it's a hacked element.

71
00:05:12,244 --> 00:05:17,764
At least, this is what you
should expect to add in your

72
00:05:18,744 --> 00:05:20,134
environment, in your application.

73
00:05:20,144 --> 00:05:25,634
You can just say, oh, I want to add
these mouse pointers and this to

74
00:05:26,014 --> 00:05:28,454
just be attached to this element.

75
00:05:29,344 --> 00:05:35,764
So every time a mouse moves inside
this element, it shows across everyone.

76
00:05:36,744 --> 00:05:40,204
Okay, this is what you expect to use.

77
00:05:40,464 --> 00:05:42,804
What is behind this component?

78
00:05:44,174 --> 00:05:44,854
let's see.

79
00:05:46,374 --> 00:05:48,114
This is the thing behind it.

80
00:05:48,694 --> 00:05:52,214
and we'll break down this
even more in a little bit.

81
00:05:52,284 --> 00:05:55,844
But let's see this concept of a room.

82
00:05:56,574 --> 00:06:00,414
A room at line 1 is a group of people.

83
00:06:00,849 --> 00:06:07,829
So you have a RealD that can be,
let's say if you are on Google

84
00:06:07,829 --> 00:06:13,949
meets, it's the idea in the your
L or if you are on a Figma file.

85
00:06:13,949 --> 00:06:15,599
It's the idea of the document.

86
00:06:16,009 --> 00:06:24,069
So you can bring, say everyone, it's in
that page, in that URL, in that document.

87
00:06:24,519 --> 00:06:25,889
This is the rule, okay?

88
00:06:26,339 --> 00:06:32,929
So everyone that is logged into
this same ID, in the same developer

89
00:06:32,959 --> 00:06:37,554
key, and stuff like that, You can
have participants and everyone in

90
00:06:37,554 --> 00:06:39,984
there will be together in this room.

91
00:06:40,934 --> 00:06:43,984
But what is going on in this room?

92
00:06:44,384 --> 00:06:44,964
nothing.

93
00:06:45,794 --> 00:06:47,584
Until now we don't have anything.

94
00:06:49,144 --> 00:06:55,304
But we are constructing a mouse pointer
on line 15 and then we add it to the room.

95
00:06:55,364 --> 00:07:00,634
So when I add it to the room,
I can see everybody, everyone's

96
00:07:01,024 --> 00:07:02,404
mouse pointer in there.

97
00:07:03,014 --> 00:07:08,004
Of course, you can have a conditional
here and say like The host doesn't

98
00:07:08,094 --> 00:07:12,754
see the mouse pointer or something
like that But the general idea is

99
00:07:12,754 --> 00:07:18,514
this So let's keep moving and let's
break down the mouse pointer itself

100
00:07:18,514 --> 00:07:22,314
now, because of course I needed to
explain a little bit about the room.

101
00:07:22,944 --> 00:07:26,754
if you're using a react application
or something like that, you mostly

102
00:07:26,754 --> 00:07:32,844
would use this room as a provider and
then a mouse pointer inside of it.

103
00:07:33,034 --> 00:07:40,189
But I'm just, like I said, this is not,
Actually, this code will work, but, this

104
00:07:40,189 --> 00:07:42,229
is not, it's a demonstration purposes.

105
00:07:42,269 --> 00:07:42,689
Okay.

106
00:07:44,869 --> 00:07:47,279
So what is inside this mouse pointer?

107
00:07:47,409 --> 00:07:54,599
it's the logic to see who, when someone
moves their mouse, you need to see

108
00:07:55,099 --> 00:08:01,369
in your front end, you also need to
update your position to everyone.

109
00:08:01,819 --> 00:08:05,719
and you can have, you need to
make it really fast and smooth.

110
00:08:06,409 --> 00:08:11,849
So this is the three key points,
while building mouse pointers.

111
00:08:11,919 --> 00:08:13,879
Okay, so let's break it up.

112
00:08:14,919 --> 00:08:19,699
So when someone moves their mouse,
I use here a little bit about

113
00:08:19,769 --> 00:08:25,529
a little bit of react, but you
should be able to use this with any

114
00:08:25,539 --> 00:08:27,789
framework, any library that you want.

115
00:08:28,414 --> 00:08:31,714
Even in vanilla Javascript, okay?

116
00:08:33,034 --> 00:08:39,405
here in line 1, I have a mouse
position that I'm saying X and Y, 0.

117
00:08:40,225 --> 00:08:41,835
Okay, so it starts on 0.

118
00:08:43,240 --> 00:08:47,700
and then on line six, I have a
channel and I will talk more about

119
00:08:47,700 --> 00:08:52,170
this channel later on, but the most
important thing is the subscribe.

120
00:08:53,100 --> 00:08:59,660
I'm subscribing and I'm listening
to an event called Mouse Moved.

121
00:09:00,430 --> 00:09:08,030
it works a lot like add event
listener to an HTML element.

122
00:09:08,910 --> 00:09:10,270
So I say.

123
00:09:10,830 --> 00:09:17,370
I'm listening to this mouse move
and when I listen to this, when it

124
00:09:17,530 --> 00:09:22,910
happens, please call me, call this
callback function on the mouse move.

125
00:09:24,900 --> 00:09:30,600
On mouse move, we will receive a
message and we'll get this message data.

126
00:09:30,975 --> 00:09:34,605
And set the mouse position at X and Y.

127
00:09:35,085 --> 00:09:37,125
Okay, so this is pretty much it.

128
00:09:37,465 --> 00:09:41,905
You listen, and then you set the
position, and everything was working out.

129
00:09:42,545 --> 00:09:45,625
of course, you may tweak it a little bit.

130
00:09:45,625 --> 00:09:47,455
You may add something else.

131
00:09:47,535 --> 00:09:54,115
You may only show the mouse,
if you have, the first message.

132
00:09:54,145 --> 00:09:57,855
After the first message you
receive, you may tweak a little bit.

133
00:09:57,885 --> 00:10:01,645
But The idea is that counts here, okay?

134
00:10:03,105 --> 00:10:05,365
let's go to the next challenge.

135
00:10:05,985 --> 00:10:08,795
To update your position for everyone.

136
00:10:09,795 --> 00:10:15,385
like I said, the subscribe works
like the add event listener.

137
00:10:16,095 --> 00:10:18,625
And we're pretty much doing this here.

138
00:10:18,875 --> 00:10:22,005
So we listen to the document event.

139
00:10:22,755 --> 00:10:26,265
And we listen to the mouse move event.

140
00:10:26,265 --> 00:10:26,334
Okay.

141
00:10:27,095 --> 00:10:32,755
It's almost the same thing, but instead
of using channel, we are using document,

142
00:10:33,275 --> 00:10:36,535
to see where, when the mouse move.

143
00:10:36,595 --> 00:10:37,105
Okay.

144
00:10:37,685 --> 00:10:42,775
So it goes to the callback
function, all mouse move, go over

145
00:10:42,775 --> 00:10:48,309
here, we have the event, then we
have the client X, the client A.

146
00:10:48,780 --> 00:10:56,980
Y, and then we put this in a simple,
simpler object called position, and

147
00:10:56,980 --> 00:11:00,780
then, this is new, we publish it.

148
00:11:01,450 --> 00:11:06,620
We say, oh, I'm going to tell, So
everyone that's listening, everyone

149
00:11:06,620 --> 00:11:12,890
that's subscribing, everyone that
is observing this mouse move, that

150
00:11:13,000 --> 00:11:14,310
we have a new position for this.

151
00:11:15,340 --> 00:11:15,830
Okay?

152
00:11:16,710 --> 00:11:18,990
So this is how it works.

153
00:11:18,990 --> 00:11:19,810
This is the code.

154
00:11:20,540 --> 00:11:22,700
Let's go to the third challenge.

155
00:11:24,240 --> 00:11:26,670
how can I make it really fast and smooth?

156
00:11:27,450 --> 00:11:32,990
Oh, this is pretty much just to
say that you may want to use.

157
00:11:33,510 --> 00:11:40,640
And native browser API called
request animation frame that would

158
00:11:42,130 --> 00:11:49,650
update it according to your computer
or your browser settings, mostly

159
00:11:49,730 --> 00:11:52,260
30 FPS, 30 frames per second.

160
00:11:53,270 --> 00:11:59,450
so this way you guarantee that you are
not breaking or violating any rate limits.

161
00:11:59,995 --> 00:12:08,635
Of your application, of having much data
transferred than what's needed, okay?

162
00:12:09,965 --> 00:12:11,175
That's pretty much it.

163
00:12:11,595 --> 00:12:17,855
We have only a few more objects and
stuff like that just to make this work.

164
00:12:18,445 --> 00:12:19,495
but you get the point.

165
00:12:21,865 --> 00:12:24,285
Okay, I told you about the channel.

166
00:12:24,885 --> 00:12:25,905
What is this channel?

167
00:12:27,195 --> 00:12:27,915
What's going on there?

168
00:12:28,540 --> 00:12:29,380
what tenure is this?

169
00:12:29,990 --> 00:12:30,330
Okay.

170
00:12:30,580 --> 00:12:36,630
So remember when I told you that we
are adding mouse pointers to the room?

171
00:12:37,180 --> 00:12:44,570
we now add this real time, it's a
real time dating giant that works as

172
00:12:45,510 --> 00:12:51,520
an event broker as our PubSub, I'm
going to tell you more about it later.

173
00:12:52,790 --> 00:12:56,670
And this real time that we
add, we can connect through.

174
00:12:57,175 --> 00:12:58,115
A lot of channels.

175
00:12:58,115 --> 00:12:59,705
You can create your own channels here.

176
00:12:59,705 --> 00:13:06,085
I'm creating this mouse handler
channel so you can have a channel for

177
00:13:06,085 --> 00:13:12,595
listening to the participants that
is typing, a channel for listening

178
00:13:12,665 --> 00:13:15,105
to, let's say, a live location.

179
00:13:16,255 --> 00:13:17,975
Some, something like that.

180
00:13:18,005 --> 00:13:21,635
We can, unleash your
creativity on this one.

181
00:13:21,665 --> 00:13:22,085
Okay.

182
00:13:22,475 --> 00:13:25,775
We add it to the room and
then we have the channel.

183
00:13:26,135 --> 00:13:28,085
so let's see the
definition of the channel.

184
00:13:29,325 --> 00:13:34,605
mostly we have more than this of
course, but the main things that

185
00:13:34,605 --> 00:13:36,225
you need to understand is this.

186
00:13:36,805 --> 00:13:40,365
event static, the
subscribe and the publish.

187
00:13:40,755 --> 00:13:47,015
So we have this empty object that
we'll have a graph, going on here.

188
00:13:48,075 --> 00:13:53,135
And then you have the
subscribe and the publish.

189
00:13:53,555 --> 00:13:56,675
Something just fall off
my desk, but that's okay.

190
00:13:58,925 --> 00:14:03,235
You have the subscribe and this publish,
function that we've seen before.

191
00:14:04,010 --> 00:14:10,220
the subscribe, we have two parameters,
the event that receives a string, a

192
00:14:10,220 --> 00:14:17,270
callback that receives a function,
we'll have data, and then the

193
00:14:17,270 --> 00:14:21,940
publish that we receive a string,
that's the name event, and the data.

194
00:14:22,460 --> 00:14:26,900
That is any object you want.

195
00:14:28,880 --> 00:14:29,330
Okay.

196
00:14:29,400 --> 00:14:30,670
So this is a pub sub.

197
00:14:30,770 --> 00:14:32,940
This is a publish subscriber.

198
00:14:33,930 --> 00:14:35,320
how does this work?

199
00:14:35,340 --> 00:14:35,850
What is this?

200
00:14:36,650 --> 00:14:38,430
I don't, I'm not following you.

201
00:14:38,470 --> 00:14:39,620
I'm not understanding you.

202
00:14:40,310 --> 00:14:41,660
Okay, I'm here with you.

203
00:14:41,920 --> 00:14:42,890
I'll call you back.

204
00:14:43,670 --> 00:14:44,280
what it is?

205
00:14:45,670 --> 00:14:54,590
the PubSub is a design pattern that you
can see and you can see more about it.

206
00:14:54,650 --> 00:14:56,000
I will have links in.

207
00:14:56,625 --> 00:15:03,545
resources for you later on this talk, but
you can watch and learn this on the guru.

208
00:15:04,295 --> 00:15:07,845
I don't remember the
website name right now.

209
00:15:08,725 --> 00:15:11,825
guru, refactor guru, something like that.

210
00:15:12,105 --> 00:15:14,835
You can just type guru pubsub on Google.

211
00:15:14,895 --> 00:15:15,695
It will work.

212
00:15:16,305 --> 00:15:20,175
but the pubsub works mostly
like the observer pattern.

213
00:15:20,500 --> 00:15:24,770
and I will tell you more about this
later, but this is a design pattern

214
00:15:24,780 --> 00:15:30,270
that's commonly used for a lot of
things like React Redux, for example.

215
00:15:32,490 --> 00:15:33,830
how does this work?

216
00:15:33,840 --> 00:15:36,320
What is the subscribe function?

217
00:15:36,320 --> 00:15:37,240
What's the definition?

218
00:15:38,070 --> 00:15:42,320
we have the event name, we have
the callback, what's going on?

219
00:15:43,410 --> 00:15:51,290
it will see, okay, this may be confusing
for now, so let me just break it down

220
00:15:51,340 --> 00:15:59,220
even more and do a hard code event name
to make it easier to understand, okay?

221
00:15:59,610 --> 00:16:06,240
So this is the same code, I'm just
not using the event name as a variable

222
00:16:06,340 --> 00:16:10,175
and using it as A hard coded value.

223
00:16:10,665 --> 00:16:12,795
So it makes it easier to understand.

224
00:16:12,955 --> 00:16:13,355
Okay?

225
00:16:14,585 --> 00:16:21,845
so we have this check, this condition
that we'll see if we have an event

226
00:16:22,815 --> 00:16:28,525
called mouseMoved on our static
events that we had added previously.

227
00:16:28,525 --> 00:16:34,565
If we don't have it, then we
initialize it as an empty array.

228
00:16:35,065 --> 00:16:35,545
Okay?

229
00:16:36,155 --> 00:16:37,445
So we have an empty array.

230
00:16:38,265 --> 00:16:38,715
why?

231
00:16:38,745 --> 00:16:48,180
Because It will, if has, if doesn't
have, it will add and actually it

232
00:16:48,180 --> 00:16:50,830
will push the callback that we want.

233
00:16:51,140 --> 00:16:57,820
It will add this callback that we are
receiving to the list of this event name.

234
00:17:00,470 --> 00:17:06,480
The publish works almost, works
with these events as well.

235
00:17:06,970 --> 00:17:10,900
and I'm doing this hard coded
thing once again to make it.

236
00:17:11,435 --> 00:17:12,635
Looks simpler.

237
00:17:13,045 --> 00:17:19,045
Okay, so I'm here receiving the mouse
move, and I'm receiving the data.

238
00:17:19,085 --> 00:17:24,435
What happens is that I go to the mouse
move, remember this is an array, okay?

239
00:17:24,875 --> 00:17:29,455
the object that this returns
is array, the event is not an

240
00:17:29,455 --> 00:17:31,055
array, the event is a graph.

241
00:17:31,725 --> 00:17:38,925
but the mouse moved, it's already, and
I go for every single callback functions

242
00:17:38,925 --> 00:17:43,225
that, that I have added, added there.

243
00:17:43,355 --> 00:17:50,345
And I go and say, Oh, call the callback
with the data that I'm passing right now.

244
00:17:51,365 --> 00:17:55,015
So this is one, it's going on over that.

245
00:17:55,275 --> 00:17:56,255
So this is the PubSub.

246
00:17:56,805 --> 00:17:57,185
Okay.

247
00:17:57,585 --> 00:17:59,615
Pretty simple, right?

248
00:18:00,085 --> 00:18:00,715
This is it.

249
00:18:00,715 --> 00:18:00,910
Yeah.

250
00:18:01,390 --> 00:18:05,520
it is this, but we're
missing something important.

251
00:18:06,340 --> 00:18:09,940
we're, there is, this works locally.

252
00:18:09,960 --> 00:18:15,960
This works on your instance of your
application, because remember that

253
00:18:16,840 --> 00:18:23,760
when you do the pub sub, you're
not specifically saying for every

254
00:18:23,780 --> 00:18:26,020
device connected into the room.

255
00:18:26,765 --> 00:18:31,355
We skipped the code behind the
room that I showed you before.

256
00:18:31,985 --> 00:18:40,475
so I'm going to tell you the secret for
having this, working with any device

257
00:18:40,775 --> 00:18:43,865
in any IP hardware, anything like this.

258
00:18:45,005 --> 00:18:46,655
We have one more thing to say.

259
00:18:47,875 --> 00:18:48,815
What's going on?

260
00:18:48,885 --> 00:18:52,245
What is making sense on all of this?

261
00:18:53,345 --> 00:18:56,425
it is a WebSocket.

262
00:18:57,115 --> 00:19:06,365
We're using WebSocket to build this
connection between my application running

263
00:19:06,585 --> 00:19:10,565
on my computer and the application
that you are using on your end.

264
00:19:11,775 --> 00:19:13,405
what is WebSocket?

265
00:19:14,225 --> 00:19:15,375
Okay, WebSocket.

266
00:19:16,320 --> 00:19:21,410
Provides a protocol that allows for
a continuous two way communication

267
00:19:21,780 --> 00:19:24,640
channel between a client and a server.

268
00:19:25,200 --> 00:19:25,620
why?

269
00:19:25,660 --> 00:19:30,190
Because let's go into more
specific details about WebSocket.

270
00:19:30,190 --> 00:19:33,590
It persists connections.

271
00:19:34,220 --> 00:19:42,980
So, the difference between between HTTP
requests and WebSocket is that when you

272
00:19:43,090 --> 00:19:52,500
open a request for HTML or HTTP, let's
say, a REST API post on some endpoint,

273
00:19:53,040 --> 00:19:59,010
you open this connection, you receive
this, post, you push this post, you

274
00:19:59,010 --> 00:20:04,505
receive the return, the response, and
you And then the connection is closed.

275
00:20:04,735 --> 00:20:05,135
Okay?

276
00:20:05,495 --> 00:20:10,435
So if you want to get something,
then you push a get, then you

277
00:20:10,435 --> 00:20:12,575
receive the response, and so on.

278
00:20:13,615 --> 00:20:18,985
you need to open, do the request,
pick the response, close the request.

279
00:20:20,075 --> 00:20:26,825
Imagine doing this for every, third
times per second on the frame rate

280
00:20:26,845 --> 00:20:29,345
that we are using for this example.

281
00:20:32,185 --> 00:20:36,565
you can do this, but, it's not the ideal.

282
00:20:37,075 --> 00:20:40,235
You may break the, your
server at some point.

283
00:20:41,045 --> 00:20:46,335
What you need to do is that you
use a connection that stay opens.

284
00:20:46,405 --> 00:20:51,085
For, stay open, for
continuous data exchange.

285
00:20:51,805 --> 00:20:55,545
I open it, I'm sending, I'm
receiving, I'm sending again,

286
00:20:55,705 --> 00:20:57,465
receiving, sending and receiving.

287
00:20:57,845 --> 00:21:05,215
And then, once I'm completely finished,
once I close the browser, once I go

288
00:21:05,605 --> 00:21:07,920
do something else, Then I close it.

289
00:21:08,430 --> 00:21:11,630
This makes it a low latency.

290
00:21:12,610 --> 00:21:16,520
So it's ideal for this real
time applications, especially

291
00:21:16,530 --> 00:21:20,360
for gaming, something with
live updates, stock options.

292
00:21:21,385 --> 00:21:24,975
low latency is really a big deal here.

293
00:21:26,045 --> 00:21:28,475
Also, it works both ways.

294
00:21:29,245 --> 00:21:31,165
For the client and for the server.

295
00:21:31,385 --> 00:21:31,835
Okay?

296
00:21:34,485 --> 00:21:37,385
okay, I told you the
secret behind the room.

297
00:21:37,465 --> 00:21:39,265
I told you what the room does.

298
00:21:39,395 --> 00:21:41,475
I told you the PubSub.

299
00:21:42,455 --> 00:21:43,625
Where can I see this?

300
00:21:43,665 --> 00:21:46,385
Where, what people are doing with this?

301
00:21:47,240 --> 00:21:50,170
I have a, a few slides,
a slide deck for you.

302
00:21:51,410 --> 00:21:52,690
Who's using this, right?

303
00:21:52,720 --> 00:21:53,250
Let's see.

304
00:21:53,260 --> 00:21:54,780
Let's ask Sharjeepti.

305
00:21:55,680 --> 00:21:56,030
okay.

306
00:21:56,090 --> 00:21:57,730
I did not ask Sharjeepti.

307
00:21:57,730 --> 00:22:01,890
I just copy and paste some print
screen, some screenshots from my

308
00:22:01,890 --> 00:22:04,444
mobile device, but that's okay.

309
00:22:05,115 --> 00:22:09,285
So he's using this, Uber is using
these or an application that you

310
00:22:09,325 --> 00:22:12,295
can track, someone, on your mobile.

311
00:22:12,295 --> 00:22:18,075
so WhatsApp also does this for
when you share live locations.

312
00:22:18,855 --> 00:22:26,755
so the person like on Uber example, the
driver pushes and publish the location.

313
00:22:27,395 --> 00:22:29,565
every second, every.

314
00:22:30,245 --> 00:22:37,755
Any seconds or something like that,
then you subscribe to it and you

315
00:22:37,755 --> 00:22:40,325
update it, update your map accordingly.

316
00:22:41,155 --> 00:22:41,545
Okay?

317
00:22:42,685 --> 00:22:47,695
Another place that you may use, that
people use a lot is Microsoft Teams.

318
00:22:48,015 --> 00:22:51,625
Of course, for video conferences,
of course, for chat applications,

319
00:22:51,645 --> 00:22:52,365
I'm going to tell you.

320
00:22:52,785 --> 00:22:56,205
About short applications and video
conference later, but this is something

321
00:22:56,205 --> 00:23:05,225
that is pretty neat about Microsoft Teams
that Tells you a lot that you can receive

322
00:23:05,225 --> 00:23:15,985
related content of the meeting and the
current status of a person has Accepted or

323
00:23:15,985 --> 00:23:22,695
declined, if the person is online, if it
is not, you have a summary of the meeting

324
00:23:23,005 --> 00:23:29,085
right on your hands and you want this to
be updated every time something happens.

325
00:23:29,830 --> 00:23:35,050
because you don't want people
to refresh, the page every time.

326
00:23:35,310 --> 00:23:35,670
Okay.

327
00:23:36,840 --> 00:23:43,440
And this is pretty neat because I'm
really anxious and I'm really nervous on

328
00:23:43,470 --> 00:23:47,400
every meeting that I tend attend that.

329
00:23:48,090 --> 00:23:53,300
At least for me, it's really important
to see who is already on that meeting.

330
00:23:54,080 --> 00:23:58,880
so I'm not the first one to enter
it or to see Oh, I don't know

331
00:23:58,880 --> 00:24:01,450
anyone that's inside this room.

332
00:24:01,770 --> 00:24:04,520
I will wait someone
that I know to be here.

333
00:24:05,300 --> 00:24:07,325
So this information is.

334
00:24:07,505 --> 00:24:12,305
It's pretty important for
people like me, with anxious,

335
00:24:14,325 --> 00:24:18,025
please let me know if you
have some of this too, okay?

336
00:24:19,375 --> 00:24:24,095
Also another use case scenario is
the live chat application and any

337
00:24:24,095 --> 00:24:29,125
other chat applications, that you
publish a message and you receive a

338
00:24:29,125 --> 00:24:32,245
message, something that's pretty, yeah.

339
00:24:34,285 --> 00:24:41,445
It's not that simple, or at least you
would not expect in a glance, but the chat

340
00:24:41,525 --> 00:24:50,585
applications also use this, is that when,
let's say, Brian starts writing, so the

341
00:24:50,585 --> 00:24:56,630
mobile phone, the iOS, the Android, Or
the computer, the browser will listen to

342
00:24:56,630 --> 00:24:59,170
the type event and will publish it to me.

343
00:24:59,510 --> 00:25:04,000
And I do not receive what the person
is typing, I'm only receiving if it is

344
00:25:04,020 --> 00:25:06,600
true or false or some data like this.

345
00:25:07,170 --> 00:25:12,520
And then I say, update the interface
for everyone that it is in this

346
00:25:12,520 --> 00:25:15,360
channel, saying, oh, Brian is typing.

347
00:25:16,040 --> 00:25:21,125
This is not seen in a glance when we talk
about shared applications used by people.

348
00:25:21,125 --> 00:25:26,695
In pub sub and real time
communication data, but it's also

349
00:25:26,695 --> 00:25:29,715
something, that is being used here.

350
00:25:31,005 --> 00:25:37,455
Another application, a lot of applications
actually is the whiteboard collaborative.

351
00:25:37,555 --> 00:25:44,635
so I bring him my role, that I hope that
you have been using this for a while.

352
00:25:45,020 --> 00:25:50,130
that you know this tool at least, but
if you don't know this, it's mostly

353
00:25:50,130 --> 00:25:58,360
like Figma or I'm missing names of
whiteboard collaboration tools right

354
00:25:58,360 --> 00:26:00,440
now, but there's plenty of this.

355
00:26:00,890 --> 00:26:04,950
But the thing is, you look at this and
you understand what it's doing, right?

356
00:26:05,665 --> 00:26:10,765
If, if you move this card to the
left, it's moving to everyone.

357
00:26:10,765 --> 00:26:18,015
If you click on, let's say, Bea,
you click her, in her, and then

358
00:26:18,025 --> 00:26:22,555
you're gonna see, you following,
her mouse pointers, stuff like that.

359
00:26:23,135 --> 00:26:27,445
So this is pretty much easy to
understand, this whiteboard.

360
00:26:27,445 --> 00:26:27,465
Bye.

361
00:26:27,795 --> 00:26:32,065
And you really needed to
have this synced together.

362
00:26:32,725 --> 00:26:37,675
Another one, and this is one of my
favorite ones, is that you can build

363
00:26:37,675 --> 00:26:39,535
your own interactive workspace.

364
00:26:40,305 --> 00:26:44,485
so this GatherTown, if you don't
know this, I love this platform.

365
00:26:44,915 --> 00:26:50,625
they use this concept of Chibia or
maybe a Habu or something like that.

366
00:26:51,320 --> 00:26:54,550
To create a working environment.

367
00:26:54,560 --> 00:26:57,370
So we have, everyone will have a table.

368
00:26:57,790 --> 00:27:03,080
They will have a common space,
room, a conference room, a

369
00:27:03,080 --> 00:27:04,660
meeting room, something like that.

370
00:27:04,690 --> 00:27:09,000
They can style with, but
you'll see who is online.

371
00:27:09,000 --> 00:27:10,940
You have this video conference.

372
00:27:11,060 --> 00:27:16,800
So when you start approaching to
someone like this, again, we can.

373
00:27:17,420 --> 00:27:24,860
walk with your characters around and
When you get closer to someone, you

374
00:27:24,880 --> 00:27:29,600
start seeing their image and listen
to the audio, just like in real life.

375
00:27:29,890 --> 00:27:34,490
So this is pretty much, an amazing
tool for remote work, for engaging

376
00:27:34,490 --> 00:27:38,120
in remote events, for, everything.

377
00:27:38,670 --> 00:27:41,290
I have this with my
friends, I use it a lot.

378
00:27:41,700 --> 00:27:46,740
And this is a lot of these
WebSockets and PubSub.

379
00:27:48,965 --> 00:27:53,695
I think I will just wrap this
thing up by telling you some

380
00:27:53,715 --> 00:27:55,795
resources that I have for you.

381
00:27:56,475 --> 00:28:00,435
the main resource for everything
here is the JavaScript Design

382
00:28:00,495 --> 00:28:04,315
Patterns, the book from Eddie Osmani.

383
00:28:04,985 --> 00:28:08,175
it's an amazing, simple to read book.

384
00:28:08,225 --> 00:28:08,875
I love it.

385
00:28:09,640 --> 00:28:16,790
Also, I use this as reference,
an article by Vibhali Joshi.

386
00:28:16,860 --> 00:28:18,570
I hope I'm saying this right.

387
00:28:18,580 --> 00:28:24,020
I don't know her, but thanks
for your article on how you can

388
00:28:24,030 --> 00:28:25,860
use WebSockets with Flutter.

389
00:28:26,220 --> 00:28:31,280
so this can give you more
data about WebSockets itself.

390
00:28:31,280 --> 00:28:36,410
You don't need the Flutter part, of
course, but I thought the way she

391
00:28:36,410 --> 00:28:39,160
wrote, the About WebSockets put in it.

392
00:28:40,120 --> 00:28:44,780
And then we have this article about
understanding and implementing

393
00:28:44,810 --> 00:28:48,700
event driven communication
front end development by me.

394
00:28:48,800 --> 00:28:51,290
You can find this as well on DevTools.

395
00:28:51,730 --> 00:28:54,620
Just search by my name or search
by the name of the article.

396
00:28:55,210 --> 00:29:00,050
Also on tab two, I have a few
articles about design patterns.

397
00:29:00,050 --> 00:29:03,530
If you want to understand
more about Observer, Pubsub,

398
00:29:04,860 --> 00:29:06,710
even other, design patterns.

399
00:29:07,590 --> 00:29:08,280
This is it.

400
00:29:08,460 --> 00:29:12,335
Thank you so much for being here with me.

401
00:29:12,335 --> 00:29:14,825
Please follow me on my socials.

402
00:29:15,205 --> 00:29:19,925
if you have any questions, if you
want to ping myself or anything,

403
00:29:19,925 --> 00:29:22,125
just follow me and reach out.

404
00:29:22,175 --> 00:29:24,305
Let's connect and stay together.

405
00:29:24,655 --> 00:29:25,455
Thanks so much.

406
00:29:26,015 --> 00:29:26,405
See ya.

