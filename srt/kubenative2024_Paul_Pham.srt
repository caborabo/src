1
00:00:14,090 --> 00:00:15,730
Hey, everyone, welcome to our session.

2
00:00:15,770 --> 00:00:19,380
Today we're going to be talking
about utilizing Argo CD and

3
00:00:19,380 --> 00:00:23,770
Kubernetes for suicide prevention
for LGBTQ plus young people.

4
00:00:24,119 --> 00:00:27,150
My colleague here, Alfredo, and
I will be presenting this topic

5
00:00:27,170 --> 00:00:28,460
on behalf of the Trevor Project.

6
00:00:28,839 --> 00:00:31,689
Trevor Project is a nonprofit
dedicated for the mental health

7
00:00:31,699 --> 00:00:34,180
space for LGBTQ plus community.

8
00:00:34,489 --> 00:00:38,260
So if you want to learn more about
who we are, what we do, please

9
00:00:38,260 --> 00:00:40,969
feel free to scan on the QR code.

10
00:00:41,280 --> 00:00:44,590
We also will be sharing this
out, and also we'll have this at

11
00:00:44,590 --> 00:00:47,620
the end of the presentation, so
you can also scan it again then.

12
00:00:48,470 --> 00:00:50,809
And with that said moving
into the next slide.

13
00:00:53,550 --> 00:00:56,139
So let's talk about what
is the Trevor Project.

14
00:00:56,279 --> 00:00:59,899
Like I mentioned before, the Trevor
Project is the leading suicide

15
00:00:59,899 --> 00:01:04,910
prevention and crisis intervention
services for LGBTQ plus young people.

16
00:01:05,389 --> 00:01:08,660
Here at the Trevor Project,
we provide five major services

17
00:01:09,019 --> 00:01:10,749
for people within the U.

18
00:01:10,749 --> 00:01:11,019
S.

19
00:01:11,214 --> 00:01:12,765
And also now in Mexico.

20
00:01:13,424 --> 00:01:16,774
Specifically, the first service
is Crisis Services, which we're

21
00:01:16,774 --> 00:01:19,895
going to be talking more about
later in this particular session.

22
00:01:20,414 --> 00:01:25,334
Crisis Services is a service where we're
connecting LGBTQ plus young people who

23
00:01:25,345 --> 00:01:30,264
have suicide ideation or have other crises
that they want to talk through, whether

24
00:01:30,264 --> 00:01:32,635
that's through text, SMS, or web chat.

25
00:01:33,445 --> 00:01:37,755
Our second service is advocacy, making
sure we have a group team to be able

26
00:01:37,755 --> 00:01:43,674
to advocate for laws that are more
helpful for the LGBTQ plus community.

27
00:01:44,235 --> 00:01:45,915
As for our third service is research.

28
00:01:45,955 --> 00:01:50,025
We conduct research studies, learning
about the trends within the community,

29
00:01:50,135 --> 00:01:54,059
as well as understanding where mental
health is going for these students.

30
00:01:54,350 --> 00:01:58,960
Particular individuals before services,
Trevor space, pretty much a social

31
00:01:59,420 --> 00:02:04,029
platform where the ages between 13
to 24 year olds can be able to go

32
00:02:04,030 --> 00:02:07,930
online, get support, talk about things
and just help each other out pretty

33
00:02:07,930 --> 00:02:11,819
much a safe space for everyone on the
platform and last but not least is

34
00:02:11,869 --> 00:02:13,480
the education and public awareness.

35
00:02:14,005 --> 00:02:18,685
Service where we're providing mental
health resources, as well as material

36
00:02:19,005 --> 00:02:23,765
and resources for both the youth and
allies who come to our page to learn more

37
00:02:23,765 --> 00:02:28,805
about mental health, suicide prevention,
and ultimately, LGBTQ plus communities.

38
00:02:29,514 --> 00:02:32,555
And with that said, I'll pass it
over to Alfredo to introduce himself.

39
00:02:33,255 --> 00:02:34,275
Thank you so much, Paul.

40
00:02:34,715 --> 00:02:37,725
I'm Alfredo Pizana, tech
lead here at Trevor.

41
00:02:38,065 --> 00:02:42,275
I'm currently focusing on MERT
technologies and part of infrastructure

42
00:02:42,775 --> 00:02:47,044
and I'm leading the development
of this amazing application

43
00:02:47,044 --> 00:02:47,894
we are going to talk about.

44
00:02:48,384 --> 00:02:48,574
Thank you.

45
00:02:49,885 --> 00:02:50,185
Awesome.

46
00:02:50,185 --> 00:02:50,775
Thanks, Alfredo.

47
00:02:50,865 --> 00:02:52,695
And over on my side, my name is Paul Pham.

48
00:02:52,735 --> 00:02:55,985
I use he, him pronouns and I'm the
engineering manager who gets to

49
00:02:55,985 --> 00:02:59,755
work closely with Alfredo on our
day to day operations, particularly

50
00:02:59,975 --> 00:03:02,855
that supports many of our verticals
here at the Trevor Project.

51
00:03:05,000 --> 00:03:05,269
Cool.

52
00:03:05,399 --> 00:03:07,260
And so let's talk about what
we're going to be sharing.

53
00:03:07,390 --> 00:03:08,829
We're going to be sharing
four different things.

54
00:03:09,789 --> 00:03:11,179
First off, it's going to be the project.

55
00:03:11,229 --> 00:03:13,999
What did we do here at the Trevor project?

56
00:03:14,289 --> 00:03:17,509
And how we utilize our, the CD
and Kubernetes as well as many

57
00:03:17,509 --> 00:03:19,449
other tools within our system.

58
00:03:20,074 --> 00:03:23,064
And that leads us to the architecture
where we're going to be sharing out the

59
00:03:23,064 --> 00:03:26,334
high level as well as deep dive a little
bit more into the open source tools.

60
00:03:26,994 --> 00:03:30,214
Then we're going to go to challenges
and lesson learned from what we've

61
00:03:30,214 --> 00:03:33,304
done on the project and wanting to
share it out with you also that way.

62
00:03:33,314 --> 00:03:36,954
If you were to go down this path,
or a very similar path, you would

63
00:03:37,024 --> 00:03:38,214
be able to avoid certain things.

64
00:03:38,934 --> 00:03:41,544
And last but not least, we want to
share the impact of the solution

65
00:03:41,554 --> 00:03:43,084
that we have implemented so far.

66
00:03:45,104 --> 00:03:47,084
And so let's start with
the project context.

67
00:03:47,624 --> 00:03:53,304
So here at the project, our mission is to
end suicide among LGBTQ plus young people.

68
00:03:53,624 --> 00:03:56,414
That means that we want to
be able to serve the youth.

69
00:03:56,634 --> 00:03:59,894
But at the same time, also help
others learn the importance

70
00:03:59,914 --> 00:04:01,014
of suicide prevention.

71
00:04:02,414 --> 00:04:07,684
And the Trevor Project journey started
on August 11, 1998, about over 25

72
00:04:07,704 --> 00:04:12,824
years ago, where we first took our
first phone call to be able to provide

73
00:04:12,824 --> 00:04:14,734
support for LGBTQ plus young people.

74
00:04:14,974 --> 00:04:18,394
And ever since then, we have started
iterating on our technologies and

75
00:04:18,394 --> 00:04:22,754
services, ultimately just moving
from having phone calls, to having

76
00:04:22,774 --> 00:04:27,054
text messages, to ultimately having
web chats available for youth.

77
00:04:28,444 --> 00:04:31,714
But what we wanted to do more is
be able to expand these services

78
00:04:32,904 --> 00:04:37,384
beyond the United States to global
nations, such as what we're going

79
00:04:37,384 --> 00:04:38,914
to be talking about today, Mexico.

80
00:04:39,504 --> 00:04:42,794
And the reason that we wanted to do
this is because we've done research

81
00:04:42,794 --> 00:04:48,384
studies, how impactful our services are,
as well as the need for our services.

82
00:04:49,224 --> 00:04:53,744
In a global market, and as a result,
we started doing some more research

83
00:04:53,764 --> 00:04:58,314
understanding where should we expand to,
and we started off with 194 countries,

84
00:04:58,534 --> 00:05:03,784
and based on these five criteria, safety,
scale, equity, language, and learning, we

85
00:05:03,784 --> 00:05:10,464
were able to narrow down to two countries,
it was Mexico and the Philippines, and

86
00:05:10,464 --> 00:05:13,594
so the reason that we started with the
Mexico first, because it was a neighboring

87
00:05:13,594 --> 00:05:18,944
country, and it was closer that we can
set up operation safely and successfully.

88
00:05:20,504 --> 00:05:24,574
And our goal was to be able to deliver
this new platform that expanded

89
00:05:24,574 --> 00:05:29,264
our services beyond the United
States on October 11th of 2022.

90
00:05:29,274 --> 00:05:30,694
And we were able to do successfully.

91
00:05:30,854 --> 00:05:34,124
The reason this date is so important
is the national coming out day

92
00:05:34,404 --> 00:05:38,634
within Mexico, and we wanted to align
appropriately to market this and be able

93
00:05:38,634 --> 00:05:40,529
to have it successfully up and running.

94
00:05:41,939 --> 00:05:46,619
And so before, when we were talking
about the United States, our services

95
00:05:46,619 --> 00:05:50,439
and stuff like that you'll see here, this
screenshot captures what we were using,

96
00:05:50,479 --> 00:05:55,829
utilizing before, which is a managed
service within Salesforce that allows us

97
00:05:55,859 --> 00:06:01,129
to be able to connect to LGBT plus young
people as well as, make sure we're helping

98
00:06:01,129 --> 00:06:03,259
them through updating case records.

99
00:06:03,899 --> 00:06:05,089
All through one platform.

100
00:06:05,209 --> 00:06:08,009
However, this was not going
to work for an expansion.

101
00:06:08,019 --> 00:06:11,179
It's going to take a lot of
time to scale up to maintain

102
00:06:11,459 --> 00:06:14,049
for various instances globally.

103
00:06:14,429 --> 00:06:19,319
And so this led us to the creation of
what we called the global platform.

104
00:06:19,694 --> 00:06:25,104
Or CSM, which is crisis services
management platform allows us to be

105
00:06:25,104 --> 00:06:28,794
able to scale up more quickly and
maintain it and have a better continuous

106
00:06:28,794 --> 00:06:30,634
tool development and delivery.

107
00:06:31,324 --> 00:06:35,194
And so this leads us to this new
UI, where we are able to utilize

108
00:06:35,224 --> 00:06:38,294
open source technologies and create
something like this, where you can

109
00:06:38,324 --> 00:06:42,044
see the similarities, but at the
same time, the major differences.

110
00:06:42,334 --> 00:06:45,564
And we're going to do that more
so on the back end side of things.

111
00:06:46,084 --> 00:06:49,054
And with that said, I'll pass it
over to Alfredo to talk more about

112
00:06:49,054 --> 00:06:52,354
the back end, pretty much the fun
side of things within this project.

113
00:06:53,034 --> 00:06:53,958
Thank you so much, Paul.

114
00:06:53,958 --> 00:06:56,674
Yeah, talking about a little
bit on the architecture side.

115
00:06:57,974 --> 00:07:02,333
First, we want to mention about the
tools we use for the application.

116
00:07:02,333 --> 00:07:05,959
On the infrastructure, we are using GCP.

117
00:07:05,960 --> 00:07:13,389
For our search code management, we
use GitHub as well as for action

118
00:07:13,469 --> 00:07:16,049
flows for our CI CD pipelines.

119
00:07:16,799 --> 00:07:22,409
And on the infrastructure deployments,
we decide to use Terraform as our

120
00:07:22,439 --> 00:07:27,069
infrastructure as a code, as well as
Argo CD for our continuous delivery

121
00:07:27,139 --> 00:07:31,849
to our Kubernetes application.

122
00:07:32,209 --> 00:07:36,754
We are using Kubernetes and Twilio
as our contact center platform.

123
00:07:37,264 --> 00:07:38,244
Next slide, please.

124
00:07:40,904 --> 00:07:47,074
And during those conversations
about expanding our services, we

125
00:07:50,884 --> 00:07:57,634
we plan to create a platform that was
scalable, open source and high available

126
00:07:58,154 --> 00:08:04,639
aiming to support Multi language and
different type of digital channels and on

127
00:08:04,639 --> 00:08:11,729
interactions in case you see the global
platform name somewhere is application

128
00:08:11,729 --> 00:08:16,289
we create to support multi language and
multi layer here on the architecture.

129
00:08:16,289 --> 00:08:17,689
You will see at the left.

130
00:08:18,194 --> 00:08:23,064
The users, that's our data to use,
and we are support, we're currently

131
00:08:23,084 --> 00:08:26,714
supporting SMS, WhatsApp, and
WebChat, that are digital channels.

132
00:08:26,894 --> 00:08:31,184
We are supporting this through our
Twilio platform, which is our contact

133
00:08:31,184 --> 00:08:36,584
center platform, that helps us to
support all of the interaction,

134
00:08:37,424 --> 00:08:39,224
active interaction in real time.

135
00:08:40,244 --> 00:08:46,204
Now talking a little bit on the
database, we choose MongoDB.

136
00:08:46,225 --> 00:08:53,334
As our persistent storage and ready
for us, our catchy and it will it

137
00:08:53,334 --> 00:08:55,334
help us to scale on demand if needed.

138
00:08:56,744 --> 00:09:00,194
Now, going a little bit dive
into the global platform.

139
00:09:00,914 --> 00:09:02,944
You will turn the slide, please.

140
00:09:05,284 --> 00:09:08,404
You will see that we are using
Kubernetes for the infrastructure.

141
00:09:08,804 --> 00:09:10,124
And at the left is the UI.

142
00:09:10,344 --> 00:09:11,704
We are using one cluster.

143
00:09:12,594 --> 00:09:15,614
For the UI and another
cluster for the back end.

144
00:09:16,334 --> 00:09:18,514
And we are using

145
00:09:21,044 --> 00:09:22,864
one cluster per environment.

146
00:09:22,874 --> 00:09:28,794
So you will see that we have QA,
dev, and stage production, etc.

147
00:09:29,254 --> 00:09:31,714
And one of them, there
is one cluster for each.

148
00:09:32,974 --> 00:09:35,984
And in the middle, you
can see there is Argo CD.

149
00:09:36,979 --> 00:09:41,799
Which is our content, continuous
delivery platform that helps us

150
00:09:41,799 --> 00:09:45,819
to smoothly to release different
versions of the application.

151
00:09:46,769 --> 00:09:48,839
For our different clusters and pods.

152
00:09:49,559 --> 00:09:53,079
At the bottom, you will see that
there is GitHub that helps us to

153
00:09:53,129 --> 00:09:58,479
automatically trigger those events
and deploy that using Terraform.

154
00:09:58,799 --> 00:10:00,889
Which is our infrastructure
as a code platform.

155
00:10:02,189 --> 00:10:05,074
Which helps us to define
what we want to deploy.

156
00:10:06,034 --> 00:10:09,354
To create on GCP and how
we want to create that.

157
00:10:10,604 --> 00:10:12,704
Could you go to the next slide, please?

158
00:10:13,694 --> 00:10:19,074
Here's an example of a
configuration file for Terraform.

159
00:10:20,349 --> 00:10:24,709
And specifically for this one, this
is a conflict fight for a cluster.

160
00:10:25,129 --> 00:10:29,909
So we just want to show off like
how we define and how we are using,

161
00:10:29,909 --> 00:10:33,989
because this is a template where
we are using different variables to

162
00:10:33,989 --> 00:10:36,039
define environment, regions, etcetera.

163
00:10:37,249 --> 00:10:39,369
You go to the next slide, please.

164
00:10:41,489 --> 00:10:47,044
Now, talking a little bit more on the
Customization and scalability, we decided

165
00:10:47,074 --> 00:10:53,094
to use customized because we had a role
in a challenge that was, we were trying

166
00:10:53,094 --> 00:11:00,854
to find a way to find a method to deploy
our apps to Kubernetes automatically.

167
00:11:01,334 --> 00:11:05,624
So we decided to use customize,
customize files, which help us to

168
00:11:05,624 --> 00:11:09,154
create templates for Terraform.

169
00:11:09,704 --> 00:11:14,084
At the right you will see that this is
an example of how we organize different

170
00:11:14,084 --> 00:11:18,554
applications, retiling, different files.

171
00:11:18,974 --> 00:11:22,004
For example, the application
one, application two, et cetera.

172
00:11:22,004 --> 00:11:27,734
This is just a template to show
you how we decide to create the

173
00:11:27,734 --> 00:11:29,444
base and different applications.

174
00:11:29,564 --> 00:11:31,729
Could you go to the next slide please?

175
00:11:33,629 --> 00:11:36,779
And this is a real example of the results.

176
00:11:36,789 --> 00:11:43,889
For example, by using different config
maps, deployments, external secrets, et

177
00:11:43,889 --> 00:11:49,319
cetera, we were able to create a real
manifest that it's at the right with

178
00:11:49,369 --> 00:11:57,039
different values, real values that can be
used to automatically deploy through ROC.

179
00:11:58,309 --> 00:11:59,949
Could you go to the next slide, please?

180
00:11:59,949 --> 00:12:00,009
Thank you.

181
00:12:01,519 --> 00:12:08,779
So why we decide to use R-O-C-D-R-O-C-D
help us to automatically deploy

182
00:12:09,439 --> 00:12:13,189
the design application to a
specific envir data environment.

183
00:12:14,599 --> 00:12:19,219
And it also help us to try
different updates and versions

184
00:12:19,489 --> 00:12:23,719
through different branches using
GitHub or connecting with GitHub.

185
00:12:24,219 --> 00:12:27,579
RO CD also follows the Gith ops pattern.

186
00:12:28,664 --> 00:12:35,224
of using the repository, the code
repository as a soft source of true for

187
00:12:35,234 --> 00:12:42,294
defining the desired application state,
which means that we can create different

188
00:12:42,654 --> 00:12:47,164
branches, different tags to maintain
and support different versions of the

189
00:12:47,274 --> 00:12:48,724
application, depending on the environment.

190
00:12:49,264 --> 00:12:57,549
And just to mention kubernetes manifest
can be specified on different Formats on

191
00:12:57,659 --> 00:13:02,529
different ways, and the one we choose was
customized applications, but there are

192
00:13:02,549 --> 00:13:04,409
some others like camps and Jason, etc.

193
00:13:04,939 --> 00:13:06,599
Can you go to the next slide, please?

194
00:13:07,299 --> 00:13:11,669
This is the result of our
infrastructure up and running.

195
00:13:12,024 --> 00:13:17,094
You can see different names of different
pots that are currently running, and at

196
00:13:17,094 --> 00:13:22,159
the right you will see the versions that
we are maintaining on depending on the

197
00:13:22,279 --> 00:13:23,974
ver on the environment and the version.

198
00:13:24,904 --> 00:13:29,554
For example, you can see that
there's a version all 0.2 point.

199
00:13:29,864 --> 00:13:31,464
0.

200
00:13:31,464 --> 00:13:33,064
7.

201
00:13:33,064 --> 00:13:37,694
2 that is healthy and sync, but
there are some others that are out of

202
00:13:37,704 --> 00:13:41,894
sync and there should be some others
that could be crashing or starting

203
00:13:42,054 --> 00:13:43,704
depending on the test we are running.

204
00:13:44,584 --> 00:13:51,784
So this helps us to, this gives
us a big visibility of what's

205
00:13:52,034 --> 00:13:55,544
happening during the releases and
during the development of the.

206
00:13:55,874 --> 00:13:57,294
Project and the code.

207
00:13:57,624 --> 00:13:59,904
We can easily identify what's happening.

208
00:13:59,914 --> 00:14:06,209
If a service is up and running or obscene,
scratching, restarting or whatever.

209
00:14:07,039 --> 00:14:08,579
Could you go to the next slide, please?

210
00:14:08,669 --> 00:14:15,444
We will show you an example of what's
inside of those elements of the list.

211
00:14:15,444 --> 00:14:21,879
Here is a file, a manifest
file, which contains all of

212
00:14:21,879 --> 00:14:25,679
the config maps, versions, etc.

213
00:14:25,999 --> 00:14:28,169
That's what's inside of that file.

214
00:14:28,589 --> 00:14:35,874
So we can inspect, identify if there
is any error, and also, we can Since we

215
00:14:35,874 --> 00:14:40,689
are automating this and creating all of
the files automatically, we can Also,

216
00:14:40,739 --> 00:14:46,499
run scripts to generate those files, but
this was tedious and a manual process.

217
00:14:46,789 --> 00:14:50,829
That's why we decided to implement
ROCD, to automate everything and

218
00:14:51,269 --> 00:14:54,489
smoothly transition from one version
to another, since it was consuming

219
00:14:54,529 --> 00:14:57,399
time, and it was prone to human error.

220
00:14:58,119 --> 00:15:03,559
As you can see, there is an example
of a little command line that we

221
00:15:03,559 --> 00:15:04,739
can use to generate that file.

222
00:15:06,139 --> 00:15:07,579
Could you go to the next slide, please?

223
00:15:08,994 --> 00:15:12,694
So talking about a little bit on
challenges and lessons learned, we

224
00:15:12,694 --> 00:15:16,594
were facing three main challenges
that we were able to identify.

225
00:15:16,624 --> 00:15:20,034
The first one was the strict
launch date by the business.

226
00:15:20,114 --> 00:15:23,824
It was the final day, so we
had to align to that day.

227
00:15:24,364 --> 00:15:29,714
What we had to do was to decide what
we want to achieve for that day, the

228
00:15:30,074 --> 00:15:32,674
MVP, and how we were going to do that.

229
00:15:32,924 --> 00:15:39,709
So it was Drive us to this, to choose
open source technologies, such as what

230
00:15:39,729 --> 00:15:44,219
we just mentioned, Kubernetes ROC,
which help us to automate the process

231
00:15:44,269 --> 00:15:46,489
and reduce times for those deliveries.

232
00:15:46,679 --> 00:15:47,939
So it helped us to,

233
00:15:48,459 --> 00:15:51,859
to use or to dedicate more
time for the development.

234
00:15:52,489 --> 00:15:57,049
Also another challenge we were able
to identify once we defined the

235
00:15:57,049 --> 00:16:01,939
technologies we wanted was a lack of
knowledge on building open source.

236
00:16:02,414 --> 00:16:05,354
Or on using open source technologies.

237
00:16:06,104 --> 00:16:13,944
So it was a journey because
we had to learn and decide

238
00:16:13,954 --> 00:16:15,624
why we wanted to use that.

239
00:16:15,654 --> 00:16:21,604
I just, as we just mentioned, for example,
the decision of using Argo CD was a

240
00:16:21,604 --> 00:16:25,274
journey to learn, but it also helped
us to reduce time in some other areas.

241
00:16:25,844 --> 00:16:30,724
And last but not least, at some
point, We were maintaining up to 10

242
00:16:30,724 --> 00:16:35,014
repositories because we were migrating
from the old platform to the new one.

243
00:16:35,314 --> 00:16:40,074
So it was a challenge to smoothly
transition from the old platform,

244
00:16:40,084 --> 00:16:45,394
maintaining all the data, creating
scripts on different repositories to

245
00:16:45,704 --> 00:16:47,394
transition that data to a new one.

246
00:16:48,004 --> 00:16:50,094
So it was also a challenge.

247
00:16:50,114 --> 00:16:53,639
And at some point we had to produce
that and create monorepos, etc.

248
00:16:55,549 --> 00:16:56,829
Thanks for sharing that, Alfredo.

249
00:16:57,149 --> 00:16:59,129
Both the architecture and the challenges.

250
00:16:59,129 --> 00:17:02,479
As you can tell Kubernetes, Argo
CD has made it significantly

251
00:17:02,479 --> 00:17:03,939
easier for us to deploy.

252
00:17:04,399 --> 00:17:08,589
But as Alfredo also mentioned, a
lot of challenges did come our way.

253
00:17:08,899 --> 00:17:11,159
And what did we learn from
this whole entire project

254
00:17:11,159 --> 00:17:13,089
utilizing all these technologies?

255
00:17:13,419 --> 00:17:16,609
The first lesson that we actually
learned is we needed to make

256
00:17:16,609 --> 00:17:18,179
sure that we were resilient.

257
00:17:18,449 --> 00:17:21,069
Introducing a lot of these open
source technologies ahead of time.

258
00:17:21,389 --> 00:17:26,599
So that way folks can actually learn about
it and utilize it to its full potential.

259
00:17:27,339 --> 00:17:30,799
During this whole entire project, we were
learning and building at the same time.

260
00:17:31,109 --> 00:17:35,579
And so sometimes we didn't really
use the best practices or, as I

261
00:17:36,049 --> 00:17:39,089
mentioned earlier, we were deploying
manually instead of, sometimes

262
00:17:39,149 --> 00:17:40,279
going through the whole pipeline.

263
00:17:40,279 --> 00:17:42,949
And so this is something that we
had to learn through the hard way.

264
00:17:42,999 --> 00:17:47,449
So if you can't just be able to
make sure that onboarding, knowledge

265
00:17:47,449 --> 00:17:50,349
transfer, all that good stuff about
these technologies beforehand.

266
00:17:50,949 --> 00:17:54,809
The second lesson that we learned is
we needed to add more observability to

267
00:17:54,819 --> 00:17:57,009
our, different systems and applications.

268
00:17:57,009 --> 00:18:00,819
As Alfredo mentioned, we have quite
a few clusters to manage, we needed

269
00:18:00,819 --> 00:18:06,379
to understand where those pods up and
running successfully, how long, all

270
00:18:06,379 --> 00:18:07,539
those metrics are super important.

271
00:18:07,589 --> 00:18:12,569
So that way it allows us to debug and find
root cause a lot more quickly and prevent

272
00:18:12,789 --> 00:18:18,979
some of the system outages that did
happen when we did scale or Areas came up.

273
00:18:19,259 --> 00:18:21,259
So it's more of a preventative measure.

274
00:18:21,619 --> 00:18:24,949
So in the future, if we were to
redo this, we wanted to add the

275
00:18:24,989 --> 00:18:27,479
observability as part of the launch.

276
00:18:27,489 --> 00:18:30,559
So that way, we can get
that all set up to end.

277
00:18:31,159 --> 00:18:34,449
And then the last lesson that I like
to share that we learned is, it's

278
00:18:34,449 --> 00:18:38,779
also important, not just to track
observability, but also track your costs.

279
00:18:39,219 --> 00:18:43,769
As Afro mentioned we're a non profit and
it's really important for us to make sure

280
00:18:43,769 --> 00:18:45,219
that we're keeping track of our costs.

281
00:18:45,809 --> 00:18:50,169
Like all companies trying to reduce costs,
but, still deliver great quality service.

282
00:18:50,169 --> 00:18:54,249
And so one way that we're wanting
to do in the future is to auto scale

283
00:18:54,259 --> 00:18:58,619
these not just the deployments, but
also make sure we auto scale the pods.

284
00:18:58,619 --> 00:19:00,919
If there's more traffic reduce the pods.

285
00:19:00,919 --> 00:19:02,989
If there's less traffic, just ultimately.

286
00:19:03,289 --> 00:19:08,119
Being able to fluctuate based on traffic
to give the best service, but at the

287
00:19:08,119 --> 00:19:09,689
same time, reduce computing costs.

288
00:19:12,409 --> 00:19:15,939
And going to our next
slide in terms of impact.

289
00:19:15,999 --> 00:19:19,949
By doing all this, project, by doing,
incorporating all these tools and

290
00:19:19,949 --> 00:19:23,499
technologies, there are two great
impact that came out of this project

291
00:19:23,549 --> 00:19:27,199
using, utilizing Kubernetes, Argo
CD, and many other technologies.

292
00:19:27,499 --> 00:19:32,619
The first one is going to be, We
were able to support over 20, 000

293
00:19:32,619 --> 00:19:34,989
people in Mexico since we launched.

294
00:19:35,169 --> 00:19:39,339
That is a huge amount of number who
reached out to us and ultimately

295
00:19:39,339 --> 00:19:40,459
get the help that they needed.

296
00:19:40,789 --> 00:19:45,749
And two, our system were able to scale
to support over 1, 500 chats per month.

297
00:19:46,059 --> 00:19:50,129
So making sure that, ideally we will
want to continually support more, but

298
00:19:50,129 --> 00:19:51,329
this is a great number to start with.

299
00:19:53,414 --> 00:19:56,014
And so with that said that
concludes our session.

300
00:19:56,084 --> 00:20:00,584
Hopefully you learned a little bit about
what the Trover project is our expansion

301
00:20:00,584 --> 00:20:04,624
project from, utilizing Salesforce
to more open source tool technology.

302
00:20:04,924 --> 00:20:10,034
Learn a little bit how you can utilize
Oracle CD and Kubernetes within your own

303
00:20:10,034 --> 00:20:14,889
systems to ultimately do a better Faster
deployments or more safe deployments

304
00:20:14,969 --> 00:20:17,159
for your Kubernetes clusters and pods.

305
00:20:17,959 --> 00:20:21,959
If you ever want to learn more about what
we do, feel free to contact Alfredo or

306
00:20:21,959 --> 00:20:26,699
myself, or just feel free to scan the QR
code and reach out to us through there.

307
00:20:26,989 --> 00:20:29,359
Thank you so much, and I hope you
all have a good rest of your day.

308
00:20:29,879 --> 00:20:30,758
Thank you so much.

