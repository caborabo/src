1
00:00:14,460 --> 00:00:14,620
Hello.

2
00:00:14,620 --> 00:00:15,190
Good day.

3
00:00:15,220 --> 00:00:16,010
My name is Victor.

4
00:00:16,050 --> 00:00:18,860
And today I'll be taking you on a
topic called encrypting your way to

5
00:00:18,860 --> 00:00:21,420
safety, data security in kubernetes.

6
00:00:21,930 --> 00:00:27,160
So kubernetes is a popular open source
platform that is being used to deploy,

7
00:00:27,270 --> 00:00:35,140
scale and manage containerized because
of its wild use, because of its good

8
00:00:35,140 --> 00:00:40,530
use, because of how flexible it is,
and self healing, features it has.

9
00:00:40,820 --> 00:00:43,530
Cubanet is widely used
across organizations.

10
00:00:43,540 --> 00:00:48,430
So in this particular presentation,
we're looking at ways you can actually

11
00:00:48,490 --> 00:00:52,550
perform encryptions when your data is
at rest, when your data is in transit

12
00:00:52,740 --> 00:00:57,130
and other security measures you can take
to ensure that there is adequate data

13
00:00:57,130 --> 00:01:00,129
security in your cubanet environment.

14
00:01:00,620 --> 00:01:07,599
Okay, so Why is data security even
important in in Kubernetes environments?

15
00:01:08,169 --> 00:01:12,319
Because Kubernetes being a platform
that has, containerized applications,

16
00:01:12,779 --> 00:01:15,089
it actually has unique challenges.

17
00:01:15,149 --> 00:01:19,269
And for different organizations, from
financial organizations to manufacturing

18
00:01:19,279 --> 00:01:23,389
organizations who use Kubernetes for
their day to day activities when there's a

19
00:01:23,389 --> 00:01:28,399
data breach, this could lead to financial
loss, but potentially not damage.

20
00:01:28,604 --> 00:01:32,984
And also legal consequences,
different continents across the world

21
00:01:32,994 --> 00:01:35,204
have different data privacy laws.

22
00:01:35,514 --> 00:01:39,954
And if an organization doesn't take out
time and take adequate technical measures,

23
00:01:40,244 --> 00:01:45,389
in place to secure data within the
environment, especially customer data or

24
00:01:45,429 --> 00:01:50,319
personnel data or personnel identifiable
data and information, then they could

25
00:01:50,359 --> 00:01:53,099
be liable to get, find and all that.

26
00:01:53,099 --> 00:01:57,299
So it's very important to take
data security seriously when you're

27
00:01:57,299 --> 00:01:58,929
using a Kubernetes environment.

28
00:01:59,379 --> 00:02:00,799
So we're talking about that.

29
00:02:00,839 --> 00:02:03,979
And we're also talking about, we've also
spoken about Compliance requirements.

30
00:02:04,289 --> 00:02:07,699
And also the fact that sensitive
information, some people might

31
00:02:07,699 --> 00:02:11,239
be storing sensitive information
within the Kubernetes environment.

32
00:02:11,239 --> 00:02:14,589
So you probably want to know why it isn't.

33
00:02:14,639 --> 00:02:17,409
This is also, these are some of the
reasons why it's actually important

34
00:02:17,439 --> 00:02:21,059
for you to actually take your
data security seriously from data

35
00:02:21,069 --> 00:02:25,659
breaches, which can also lead to a
downtime to violating customer trust.

36
00:02:26,079 --> 00:02:27,159
to compliance requirements.

37
00:02:27,169 --> 00:02:28,099
So it's very important.

38
00:02:28,429 --> 00:02:32,379
Just a couple of slides and we'll be
looking at the different aspects of,

39
00:02:32,859 --> 00:02:34,479
encrypting your data in kubernetes.

40
00:02:34,979 --> 00:02:37,539
In terms of encryption techniques
around kubernetes, the common ones

41
00:02:37,539 --> 00:02:41,009
we have are symmetric encryption
for symmetric encryption.

42
00:02:41,019 --> 00:02:45,209
For instance, you have, you use the
same key for encrypting the resource.

43
00:02:45,739 --> 00:02:47,079
and also decrypting it.

44
00:02:47,439 --> 00:02:51,749
This makes the process a bit faster
than what we have when than the

45
00:02:51,759 --> 00:02:54,869
asymmetric encryption with because
with symmetric encryption, you use the

46
00:02:54,869 --> 00:02:59,499
same key to encrypt and you also use
the same key to decrypt is faster and

47
00:02:59,539 --> 00:03:01,229
it provides some level of security.

48
00:03:01,229 --> 00:03:04,339
Then we also have another type of
encryption called the asymmetric

49
00:03:04,340 --> 00:03:06,709
encryption where there's a
different key for encryption and

50
00:03:06,709 --> 00:03:10,699
there's also a different key for
decrypting the system, the resource

51
00:03:11,284 --> 00:03:12,424
You are trying to keep secure.

52
00:03:12,814 --> 00:03:16,064
It is more secure, but it has
slower performance due to the fact

53
00:03:16,064 --> 00:03:17,964
that it takes like a longer time.

54
00:03:18,804 --> 00:03:21,134
Then we also have another
type of encryption called

55
00:03:21,144 --> 00:03:22,414
the homomorphic encryption.

56
00:03:22,764 --> 00:03:23,044
Yeah.

57
00:03:23,044 --> 00:03:27,434
You can actually perform some
computations on some, on the

58
00:03:27,454 --> 00:03:31,990
resource that is encrypted, even
though without decrypting it.

59
00:03:31,990 --> 00:03:33,689
So that's another level of encryption.

60
00:03:33,739 --> 00:03:37,329
We have, this can help you to
enhance your privacy and security.

61
00:03:37,329 --> 00:03:40,469
So for you to have access to a particular
sensitive resource, you might actually

62
00:03:40,469 --> 00:03:43,939
perform some, you can perform some
activities on that particular resource,

63
00:03:43,939 --> 00:03:49,539
but you wouldn't decrypt it before
performing that particular process on it.

64
00:03:49,559 --> 00:03:52,179
So that is for homomorphic encryption.

65
00:03:52,179 --> 00:03:56,059
But in the next slides, we'll be looking
at how to keep our data safe when

66
00:03:56,439 --> 00:04:01,449
in the kubernetes environment, when,
sorry, when your data is unrest and when

67
00:04:01,449 --> 00:04:03,049
it is in transit in the next slides.

68
00:04:03,879 --> 00:04:06,529
So there's something called secure.

69
00:04:06,529 --> 00:04:09,739
There are different secure
storage solutions for kubernetes.

70
00:04:09,969 --> 00:04:14,389
that are offered by different providers
like AWS, Microsoft Azure, Google

71
00:04:14,399 --> 00:04:16,949
Cloud, Box, Dropbox and the likes.

72
00:04:17,189 --> 00:04:21,539
We have different secret management
solutions in that can help you keep

73
00:04:21,619 --> 00:04:25,439
sensitive things like your API keys
and your database credentials safe.

74
00:04:25,439 --> 00:04:28,979
You don't really want your database
credentials to, you don't really want

75
00:04:29,269 --> 00:04:31,389
your database credentials to be open.

76
00:04:31,814 --> 00:04:35,354
And for everybody to access
it, anyone who wants to access

77
00:04:35,354 --> 00:04:36,254
it, you want them to be safe.

78
00:04:36,254 --> 00:04:39,014
So there's a secrets
management tool around that.

79
00:04:39,024 --> 00:04:42,814
There's also encrypted volumes
where you can also have an encrypted

80
00:04:42,834 --> 00:04:44,834
storage to store sensitive data.

81
00:04:45,454 --> 00:04:46,504
We'll talk about this.

82
00:04:46,504 --> 00:04:52,124
This is around when your data is at rest,
then there's also secure cloud providers.

83
00:04:52,194 --> 00:04:52,574
Okay.

84
00:04:52,634 --> 00:04:53,804
We have secure cloud providers.

85
00:04:54,374 --> 00:04:58,104
Like I mentioned, Google cloud
storage, AWS, Microsoft Azure.

86
00:04:58,314 --> 00:05:02,954
They also provide secure storage
solutions for different organizations.

87
00:05:04,304 --> 00:05:06,574
So how do you protect your
data when your data is at rest?

88
00:05:06,944 --> 00:05:09,964
So one of the ways to, these
are some ways, this are not,

89
00:05:10,004 --> 00:05:11,004
this is not all the way.

90
00:05:11,004 --> 00:05:13,884
The three we've listed here is not all
the ways you can actually protect them.

91
00:05:14,269 --> 00:05:15,629
Protect your data when it has rest.

92
00:05:15,679 --> 00:05:18,929
This is just the high level
view of how you can protect

93
00:05:18,929 --> 00:05:20,379
your data when it has rest.

94
00:05:20,649 --> 00:05:22,719
So we have the Dixie encryption.

95
00:05:22,739 --> 00:05:26,279
So when fiscal security is a concern
when I talk about fiscal security, I'm

96
00:05:26,279 --> 00:05:31,079
talking about the environment where
your cloud system is set up, when fiscal

97
00:05:31,079 --> 00:05:35,679
security is, compromised and somebody
has access to your disk, you want to

98
00:05:35,689 --> 00:05:38,439
make sure that your disk is encrypted
so that they don't, they will not

99
00:05:38,439 --> 00:05:40,569
have access to the files in your disk.

100
00:05:40,969 --> 00:05:42,949
The next level will be the
file system encryption.

101
00:05:42,959 --> 00:05:46,999
So even though, if even though somebody
is able to have access to your disk,

102
00:05:47,879 --> 00:05:51,619
The files in the disk are supposed to
be encrypted, that's the file level,

103
00:05:51,819 --> 00:05:54,789
the file system encryption, then
also have something called the data

104
00:05:54,829 --> 00:05:56,529
encryption within the storage layer.

105
00:05:56,729 --> 00:06:02,569
So this one talks about encrypting things
around your database, encrypting things

106
00:06:02,569 --> 00:06:05,879
around your API keys, your system storage.

107
00:06:06,219 --> 00:06:06,959
Will be encrypted.

108
00:06:06,959 --> 00:06:08,629
So this your data that is as ready.

109
00:06:08,629 --> 00:06:12,889
This is data actually means that data,
the type of data that are available

110
00:06:12,899 --> 00:06:17,699
when you are not, these are the data
that is available when you are not

111
00:06:17,959 --> 00:06:23,149
actually, making like a transaction and
all that, you have a static data, then.

112
00:06:24,089 --> 00:06:28,999
You have to also try to secure
data when your data is in transit.

113
00:06:29,249 --> 00:06:29,659
Okay.

114
00:06:29,859 --> 00:06:32,769
That is when your data is
moving from point A to point B.

115
00:06:33,029 --> 00:06:34,799
And there are a couple of
ways to actually do this.

116
00:06:35,029 --> 00:06:38,969
One of the ways to actually secure
data in transit between Kubernetes

117
00:06:38,989 --> 00:06:43,789
components, like your pods and your
services, the pods in Kubernetes is the

118
00:06:43,789 --> 00:06:45,849
most basic unit of the Kubernetes system.

119
00:06:46,159 --> 00:06:50,929
And we also have services that define,
how you can actually access The pods or

120
00:06:50,999 --> 00:06:58,339
a container, of pods, then, and the issue
is that resources like pots and services

121
00:06:58,339 --> 00:07:02,169
are actually vulnerable to attacks like
if dropping money in the middle attacks

122
00:07:02,169 --> 00:07:03,709
and interceptions and things like that.

123
00:07:03,709 --> 00:07:07,839
So one of the ways to actually secure
your data would be to use what we'll

124
00:07:07,859 --> 00:07:09,509
call the transport layer security.

125
00:07:10,069 --> 00:07:13,929
The transport layer security protocol is
a cryptographic protocol that provides.

126
00:07:14,444 --> 00:07:19,088
An encrypt that provides an encrypted
communications between the pods and the

127
00:07:19,088 --> 00:07:24,814
services and it will provide some level of
protection from malicious actors getting

128
00:07:25,014 --> 00:07:29,814
unauthorized access to your device, to
your communications or to your data.

129
00:07:30,194 --> 00:07:33,764
Then taking it a step further, we have
something called a mutual TLS, which

130
00:07:33,764 --> 00:07:36,544
is a mutual transport layer security.

131
00:07:37,044 --> 00:07:41,749
This deals Zero trust for
the most for the mutual TLS.

132
00:07:41,789 --> 00:07:44,469
We have things that are
authentication in this particular one.

133
00:07:45,459 --> 00:07:50,059
Like I said, it has to do with zero trust
the sender, the client and the server,

134
00:07:50,509 --> 00:07:54,589
but then have to authenticate themselves
through means such as maybe sending

135
00:07:54,589 --> 00:07:59,489
certificates, sign certificates and things
like that to ensure that It is a right

136
00:07:59,489 --> 00:08:04,359
sender and it is a right receiver that
is actually having access to the data.

137
00:08:04,369 --> 00:08:06,899
We also have things around
network segmentation.

138
00:08:07,039 --> 00:08:10,919
This is can be managed around your network
policy by the network administrator

139
00:08:10,919 --> 00:08:16,109
in Kubernetes and you can design your
Kubernetes system in such a way that

140
00:08:16,129 --> 00:08:20,069
you can design, you can divide it to the
front end, the back end and the database.

141
00:08:20,069 --> 00:08:24,919
With that, you can design in such a way
that only the front end can back end and

142
00:08:24,979 --> 00:08:28,609
only the back end can interact with the
database when you segment your network.

143
00:08:28,639 --> 00:08:32,209
It actually means that when somebody
attacks a section of the network, all

144
00:08:32,249 --> 00:08:33,519
parts of your network will not be down.

145
00:08:33,519 --> 00:08:37,359
Because you've segmented just maybe your
front end might be down, but the back end

146
00:08:37,359 --> 00:08:41,539
needs to be up and it's easier for you
to be like resilient and actually come up

147
00:08:41,539 --> 00:08:45,729
again, so very important to have network
segmentation when you're trying to secure

148
00:08:45,729 --> 00:08:49,429
your data in transit, very important to
isolate certain parts of your network.

149
00:08:49,879 --> 00:08:51,849
Then we have.

150
00:08:52,424 --> 00:08:55,654
There are also other in terms of
data security as a whole, there

151
00:08:55,654 --> 00:09:00,134
are practices, general practices
around cubanet data security.

152
00:09:00,174 --> 00:09:01,384
Like I mentioned, zero trust.

153
00:09:01,394 --> 00:09:02,774
So you have the multi level.

154
00:09:03,404 --> 00:09:09,294
We talked about the mutual transport layer
security, where we have zero security,

155
00:09:09,294 --> 00:09:14,519
where We treat all traffic as untrusted
and it requires strict authentication.

156
00:09:14,569 --> 00:09:18,799
Like I said, we'll have, we'll describe
the client, how to send the certificates

157
00:09:19,059 --> 00:09:21,269
and verify the senders and all that.

158
00:09:21,469 --> 00:09:21,839
Okay.

159
00:09:22,299 --> 00:09:24,229
The verified is the sender and all that.

160
00:09:24,239 --> 00:09:29,049
Then security auditing, they should be
in one of the cutting edge practices for

161
00:09:29,079 --> 00:09:32,829
Kubernetes data security would be for you
to have adequate for you to have adequate.

162
00:09:33,399 --> 00:09:37,709
Security auditing, where you can
regularly monitor and log network security

163
00:09:37,709 --> 00:09:39,939
events, and check who logged into.

164
00:09:41,539 --> 00:09:43,349
And when, that would actually help you.

165
00:09:43,609 --> 00:09:48,929
We also have we also have automated
security tools like Claire, SYN, SYNDX

166
00:09:48,929 --> 00:09:54,066
like Claire, SYNDX Encore, we have
different types of automated security

167
00:09:54,066 --> 00:09:59,706
tools that can be deployed in to
help you, do continuous monitoring,

168
00:09:59,846 --> 00:10:03,466
in order to help you stay on top of
your security game within Kubernetes.

169
00:10:04,156 --> 00:10:07,596
Then what are the ways to
actually fortify your Kubernetes?

170
00:10:08,386 --> 00:10:11,026
Then what are the ways to
actually fortify your Kubernetes

171
00:10:11,026 --> 00:10:13,146
cluster against data breaches?

172
00:10:13,436 --> 00:10:15,026
The way to actually do this would be.

173
00:10:15,316 --> 00:10:15,796
Different.

174
00:10:15,796 --> 00:10:18,276
There are different ways to
actually do this, but I brought

175
00:10:18,276 --> 00:10:19,866
out, I just listed five.

176
00:10:20,106 --> 00:10:21,916
So there are other high level
ways to actually do this.

177
00:10:22,036 --> 00:10:23,636
One of the ways would
be for access control.

178
00:10:23,636 --> 00:10:28,316
Remember the privilege of list, the
principle of list privilege access, right?

179
00:10:28,566 --> 00:10:33,626
So where You only assign access to
a sensitive resource if need be.

180
00:10:33,776 --> 00:10:34,176
Okay.

181
00:10:34,406 --> 00:10:37,106
Individuals who have no need to
actually access the system should

182
00:10:37,146 --> 00:10:38,316
not be accessing the system.

183
00:10:38,606 --> 00:10:42,206
You have to regularly audit who
actually has access to a resource.

184
00:10:42,536 --> 00:10:46,086
There should be security best practices
like ensuring that you use strong

185
00:10:46,206 --> 00:10:50,126
passwords, multi factor authentication,
and you should also update your

186
00:10:50,126 --> 00:10:53,526
secure update your system so that if
there's a security patch that needs

187
00:10:53,526 --> 00:10:56,476
to be done, if there's a vulnerability
somewhere the security patch is going

188
00:10:56,476 --> 00:10:57,476
to help you fix that vulnerability.

189
00:10:57,666 --> 00:11:02,276
And of course you need to also regularly
scan for patches for the releases.

190
00:11:02,496 --> 00:11:07,726
I mentioned about things like systems
like stack rocks uncle and likes, this can

191
00:11:07,726 --> 00:11:10,086
help you regularly monitor your systems.

192
00:11:10,126 --> 00:11:10,526
Okay.

193
00:11:10,776 --> 00:11:13,486
And you should also make sure that you.

194
00:11:13,881 --> 00:11:19,251
Get software that can help you monitor
your security events, analyze for

195
00:11:20,081 --> 00:11:22,281
suspicious activities and the likes.

196
00:11:22,351 --> 00:11:26,211
We mentioned a couple of software that can
help you do that in the previous slide.

197
00:11:26,541 --> 00:11:29,131
Then security training
cannot be overemphasized.

198
00:11:29,431 --> 00:11:34,481
So when you talk about security
training in your system you need

199
00:11:34,491 --> 00:11:36,661
to actually educate your users.

200
00:11:37,371 --> 00:11:40,821
Around best practices, for instance,
your users should not be posting

201
00:11:40,821 --> 00:11:44,631
sensitive information about your
Cuban a system on social media.

202
00:11:44,981 --> 00:11:46,831
There are certain things,
social engineering techniques.

203
00:11:46,841 --> 00:11:50,081
They shouldn't be disposing
of sensitive documents.

204
00:11:50,656 --> 00:11:54,696
Without shredding the documents, you
know when you're when your staffs are

205
00:11:54,696 --> 00:11:57,596
actually working remotely They should
make sure that nobody's watching over

206
00:11:57,596 --> 00:12:00,846
their shoulder when they're on the trains
when they're in the bus things around

207
00:12:00,846 --> 00:12:04,896
social engineering very important to
actually nudge your employees to do the

208
00:12:04,896 --> 00:12:09,446
right things and with regular security
training you can actually Have a cyber

209
00:12:09,446 --> 00:12:11,546
resilient workforce very important.

210
00:12:11,806 --> 00:12:16,266
Most organizations are guilty of Only
having technical security measures,

211
00:12:16,316 --> 00:12:21,256
but ignoring the human security
factor of actually training their

212
00:12:21,576 --> 00:12:24,636
employees around human security.

213
00:12:25,686 --> 00:12:29,676
So in conclusion embracing data
security is something that is going

214
00:12:29,676 --> 00:12:32,846
to like data security in kubernetes
is not something that you actually

215
00:12:32,846 --> 00:12:34,006
just do once and just leave.

216
00:12:34,306 --> 00:12:36,146
It's something you continually do.

217
00:12:36,486 --> 00:12:41,256
Is it ongoing process and requires
adaptation and you keep on implementing

218
00:12:41,386 --> 00:12:46,336
robust data practices in order to protect
your sensitive data in your kubernetes

219
00:12:46,386 --> 00:12:51,206
environment so that you can have the trust
and the confidence of your customers, and

220
00:12:51,206 --> 00:12:54,686
of your partners, so that they know that
their data is actually safe with you.

221
00:12:54,926 --> 00:12:58,416
You don't want a situation whereby the
sensitive data you have in your kubernetes

222
00:12:58,416 --> 00:13:03,066
system leaks, or you are, You become a
victim to ransomware attack or something

223
00:13:03,106 --> 00:13:09,546
and you have downtime and it affects your
brand reputation and you might also be

224
00:13:09,636 --> 00:13:12,476
a subject of, legal issues and all that.

225
00:13:12,486 --> 00:13:15,846
So I hope that with what I've shared
today, you understand the importance

226
00:13:15,846 --> 00:13:19,596
of data security within a Kubernetes
environment and also understand why

227
00:13:19,606 --> 00:13:21,306
encryption is important in your system.

228
00:13:21,616 --> 00:13:22,256
Thank you for listening.

229
00:13:22,996 --> 00:13:23,966
My name remains Victor.

230
00:13:24,036 --> 00:13:25,266
I hope you have an amazing day.

231
00:13:25,666 --> 00:13:25,996
Thank you.

